2025-02-21 02:00:30,417:INFO:PyCaret ClassificationExperiment
2025-02-21 02:00:30,417:INFO:Logging name: clf-default-name
2025-02-21 02:00:30,417:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-02-21 02:00:30,417:INFO:version 3.3.2
2025-02-21 02:00:30,417:INFO:Initializing setup()
2025-02-21 02:00:30,417:INFO:self.USI: 0ffe
2025-02-21 02:00:30,417:INFO:self._variable_keys: {'gpu_n_jobs_param', 'pipeline', 'logging_param', 'n_jobs_param', 'y_test', 'X', 'fold_shuffle_param', 'exp_name_log', 'X_train', 'data', 'USI', '_ml_usecase', 'y_train', 'fold_generator', 'target_param', 'seed', 'fix_imbalance', 'idx', 'log_plots_param', 'y', '_available_plots', 'X_test', 'is_multiclass', 'memory', 'exp_id', 'gpu_param', 'fold_groups_param', 'html_param'}
2025-02-21 02:00:30,417:INFO:Checking environment
2025-02-21 02:00:30,417:INFO:python_version: 3.11.11
2025-02-21 02:00:30,417:INFO:python_build: ('main', 'Dec 11 2024 16:34:19')
2025-02-21 02:00:30,417:INFO:machine: AMD64
2025-02-21 02:00:30,438:INFO:platform: Windows-10-10.0.26100-SP0
2025-02-21 02:00:30,438:INFO:Memory: svmem(total=16855433216, available=8362688512, percent=50.4, used=8492744704, free=8362688512)
2025-02-21 02:00:30,438:INFO:Physical Core: 10
2025-02-21 02:00:30,438:INFO:Logical Core: 16
2025-02-21 02:00:30,438:INFO:Checking libraries
2025-02-21 02:00:30,438:INFO:System:
2025-02-21 02:00:30,438:INFO:    python: 3.11.11 | packaged by Anaconda, Inc. | (main, Dec 11 2024, 16:34:19) [MSC v.1929 64 bit (AMD64)]
2025-02-21 02:00:30,438:INFO:executable: C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\python.exe
2025-02-21 02:00:30,438:INFO:   machine: Windows-10-10.0.26100-SP0
2025-02-21 02:00:30,438:INFO:PyCaret required dependencies:
2025-02-21 02:00:30,478:INFO:                 pip: 25.0
2025-02-21 02:00:30,478:INFO:          setuptools: 75.8.0
2025-02-21 02:00:30,478:INFO:             pycaret: 3.3.2
2025-02-21 02:00:30,478:INFO:             IPython: 8.32.0
2025-02-21 02:00:30,478:INFO:          ipywidgets: 8.1.5
2025-02-21 02:00:30,478:INFO:                tqdm: 4.67.1
2025-02-21 02:00:30,478:INFO:               numpy: 1.24.4
2025-02-21 02:00:30,478:INFO:              pandas: 1.5.3
2025-02-21 02:00:30,478:INFO:              jinja2: 3.1.5
2025-02-21 02:00:30,478:INFO:               scipy: 1.11.4
2025-02-21 02:00:30,478:INFO:              joblib: 1.3.2
2025-02-21 02:00:30,478:INFO:             sklearn: 1.4.2
2025-02-21 02:00:30,478:INFO:                pyod: 2.0.3
2025-02-21 02:00:30,478:INFO:            imblearn: 0.13.0
2025-02-21 02:00:30,478:INFO:   category_encoders: 2.7.0
2025-02-21 02:00:30,478:INFO:            lightgbm: 4.6.0
2025-02-21 02:00:30,478:INFO:               numba: 0.61.0
2025-02-21 02:00:30,478:INFO:            requests: 2.32.3
2025-02-21 02:00:30,478:INFO:          matplotlib: 3.7.5
2025-02-21 02:00:30,478:INFO:          scikitplot: 0.3.7
2025-02-21 02:00:30,478:INFO:         yellowbrick: 1.5
2025-02-21 02:00:30,478:INFO:              plotly: 5.24.1
2025-02-21 02:00:30,478:INFO:    plotly-resampler: Not installed
2025-02-21 02:00:30,478:INFO:             kaleido: 0.2.1
2025-02-21 02:00:30,478:INFO:           schemdraw: 0.15
2025-02-21 02:00:30,478:INFO:         statsmodels: 0.14.4
2025-02-21 02:00:30,478:INFO:              sktime: 0.26.0
2025-02-21 02:00:30,478:INFO:               tbats: 1.1.3
2025-02-21 02:00:30,478:INFO:            pmdarima: 2.0.4
2025-02-21 02:00:30,478:INFO:              psutil: 7.0.0
2025-02-21 02:00:30,478:INFO:          markupsafe: 3.0.2
2025-02-21 02:00:30,478:INFO:             pickle5: Not installed
2025-02-21 02:00:30,478:INFO:         cloudpickle: 3.1.1
2025-02-21 02:00:30,478:INFO:         deprecation: 2.1.0
2025-02-21 02:00:30,478:INFO:              xxhash: 3.5.0
2025-02-21 02:00:30,478:INFO:           wurlitzer: Not installed
2025-02-21 02:00:30,478:INFO:PyCaret optional dependencies:
2025-02-21 02:00:30,505:INFO:                shap: Not installed
2025-02-21 02:00:30,505:INFO:           interpret: Not installed
2025-02-21 02:00:30,505:INFO:                umap: Not installed
2025-02-21 02:00:30,505:INFO:     ydata_profiling: Not installed
2025-02-21 02:00:30,505:INFO:  explainerdashboard: Not installed
2025-02-21 02:00:30,505:INFO:             autoviz: Not installed
2025-02-21 02:00:30,505:INFO:           fairlearn: Not installed
2025-02-21 02:00:30,505:INFO:          deepchecks: Not installed
2025-02-21 02:00:30,505:INFO:             xgboost: Not installed
2025-02-21 02:00:30,505:INFO:            catboost: Not installed
2025-02-21 02:00:30,505:INFO:              kmodes: Not installed
2025-02-21 02:00:30,505:INFO:             mlxtend: Not installed
2025-02-21 02:00:30,505:INFO:       statsforecast: Not installed
2025-02-21 02:00:30,505:INFO:        tune_sklearn: Not installed
2025-02-21 02:00:30,505:INFO:                 ray: Not installed
2025-02-21 02:00:30,505:INFO:            hyperopt: Not installed
2025-02-21 02:00:30,505:INFO:              optuna: Not installed
2025-02-21 02:00:30,505:INFO:               skopt: Not installed
2025-02-21 02:00:30,505:INFO:              mlflow: Not installed
2025-02-21 02:00:30,505:INFO:              gradio: Not installed
2025-02-21 02:00:30,505:INFO:             fastapi: Not installed
2025-02-21 02:00:30,505:INFO:             uvicorn: Not installed
2025-02-21 02:00:30,505:INFO:              m2cgen: Not installed
2025-02-21 02:00:30,505:INFO:           evidently: Not installed
2025-02-21 02:00:30,505:INFO:               fugue: Not installed
2025-02-21 02:00:30,505:INFO:           streamlit: Not installed
2025-02-21 02:00:30,505:INFO:             prophet: Not installed
2025-02-21 02:00:30,505:INFO:None
2025-02-21 02:00:30,505:INFO:Set up data.
2025-02-21 02:00:30,514:INFO:Set up folding strategy.
2025-02-21 02:00:30,514:INFO:Set up train/test split.
2025-02-21 02:00:30,523:INFO:Set up index.
2025-02-21 02:00:30,523:INFO:Assigning column types.
2025-02-21 02:00:30,527:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-02-21 02:00:30,634:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-21 02:00:30,643:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-02-21 02:00:30,719:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-21 02:00:30,719:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-21 02:00:30,812:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-21 02:00:30,812:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-02-21 02:00:30,848:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-21 02:00:30,848:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-21 02:00:30,848:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-02-21 02:00:30,949:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-02-21 02:00:31,010:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-21 02:00:31,010:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-21 02:00:31,083:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-02-21 02:00:31,109:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-21 02:00:31,109:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-21 02:00:31,109:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-02-21 02:00:31,190:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-21 02:00:31,190:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-21 02:00:31,338:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-21 02:00:31,338:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-21 02:00:31,340:INFO:Preparing preprocessing pipeline...
2025-02-21 02:00:31,345:INFO:Set up label encoding.
2025-02-21 02:00:31,345:INFO:Set up simple imputation.
2025-02-21 02:00:31,345:INFO:Set up feature normalization.
2025-02-21 02:00:31,345:INFO:Set up feature selection.
2025-02-21 02:00:31,505:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-21 02:00:31,507:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-21 02:00:32,031:INFO:Finished creating preprocessing pipeline.
2025-02-21 02:00:32,045:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\JUPYTE~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Area', 'Perimeter', 'Compactness',
                                             'Length', 'Width',
                                             'AsymmetryCoeff', 'Groove'],
                                    transformer=SimpleIm...
                                                                                         learning_rate=0.1,
                                                                                         max_depth=-1,
                                                                                         min_child_samples=20,
                                                                                         min_child_weight=0.001,
                                                                                         min_split_gain=0.0,
                                                                                         n_estimators=100,
                                                                                         n_jobs=None,
                                                                                         num_leaves=31,
                                                                                         objective=None,
                                                                                         random_state=None,
                                                                                         reg_alpha=0.0,
                                                                                         reg_lambda=0.0,
                                                                                         subsample=1.0,
                                                                                         subsample_for_bin=200000,
                                                                                         subsample_freq=0),
                                                                importance_getter='auto',
                                                                max_features=1,
                                                                norm_order=1,
                                                                prefit=False,
                                                                threshold=-inf)))],
         verbose=False)
2025-02-21 02:00:32,045:INFO:Creating final display dataframe.
2025-02-21 02:00:32,249:INFO:Setup _display_container:                     Description             Value
0                    Session id                42
1                        Target              Type
2                   Target type        Multiclass
3                Target mapping  1: 0, 2: 1, 3: 2
4           Original data shape          (159, 8)
5        Transformed data shape          (159, 2)
6   Transformed train set shape          (111, 2)
7    Transformed test set shape           (48, 2)
8              Numeric features                 7
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13                    Normalize              True
14             Normalize method            zscore
15            Feature selection              True
16     Feature selection method           classic
17  Feature selection estimator          lightgbm
18  Number of features selected               0.2
19               Fold Generator   StratifiedKFold
20                  Fold Number                10
21                     CPU Jobs                -1
22                      Use GPU             False
23               Log Experiment             False
24              Experiment Name  clf-default-name
25                          USI              0ffe
2025-02-21 02:00:32,329:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-21 02:00:32,329:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-21 02:00:32,396:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-21 02:00:32,396:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-21 02:00:32,396:INFO:setup() successfully completed in 1.99s...............
2025-02-21 02:00:32,396:INFO:Initializing compare_models()
2025-02-21 02:00:32,396:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000203AF6EC850>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000203AF6EC850>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2025-02-21 02:00:32,396:INFO:Checking exceptions
2025-02-21 02:00:32,396:INFO:Preparing display monitor
2025-02-21 02:00:32,405:INFO:Initializing Logistic Regression
2025-02-21 02:00:32,405:INFO:Total runtime is 0.0 minutes
2025-02-21 02:00:32,405:INFO:SubProcess create_model() called ==================================
2025-02-21 02:00:32,405:INFO:Initializing create_model()
2025-02-21 02:00:32,405:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000203AF6EC850>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000203AFBD17D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-21 02:00:32,405:INFO:Checking exceptions
2025-02-21 02:00:32,407:INFO:Importing libraries
2025-02-21 02:00:32,407:INFO:Copying training dataset
2025-02-21 02:00:32,409:INFO:Defining folds
2025-02-21 02:00:32,409:INFO:Declaring metric variables
2025-02-21 02:00:32,409:INFO:Importing untrained model
2025-02-21 02:00:32,409:INFO:Logistic Regression Imported successfully
2025-02-21 02:00:32,409:INFO:Starting cross validation
2025-02-21 02:00:32,422:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-21 02:00:37,459:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:00:37,472:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:37,478:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:37,482:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:37,500:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:00:37,502:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:00:37,504:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:37,507:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:37,509:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:37,512:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:37,512:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-21 02:00:37,514:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:00:37,516:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:37,517:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:37,519:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:37,525:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:37,530:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:37,540:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:00:37,546:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:00:37,551:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:37,558:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:37,561:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:37,574:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:37,581:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:37,584:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:37,652:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:00:37,658:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:37,663:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:00:37,663:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:37,667:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:37,667:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:37,669:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:37,673:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:37,679:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:00:37,682:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:00:37,684:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:37,684:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:37,684:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:37,684:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:37,684:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:37,689:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:37,702:INFO:Calculating mean and std
2025-02-21 02:00:37,706:INFO:Creating metrics dataframe
2025-02-21 02:00:37,715:INFO:Uploading results into container
2025-02-21 02:00:37,717:INFO:Uploading model into container now
2025-02-21 02:00:37,719:INFO:_master_model_container: 1
2025-02-21 02:00:37,719:INFO:_display_container: 2
2025-02-21 02:00:37,719:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-02-21 02:00:37,719:INFO:create_model() successfully completed......................................
2025-02-21 02:00:37,883:INFO:SubProcess create_model() end ==================================
2025-02-21 02:00:37,883:INFO:Creating metrics dataframe
2025-02-21 02:00:37,901:INFO:Initializing K Neighbors Classifier
2025-02-21 02:00:37,901:INFO:Total runtime is 0.09159992138544719 minutes
2025-02-21 02:00:37,901:INFO:SubProcess create_model() called ==================================
2025-02-21 02:00:37,901:INFO:Initializing create_model()
2025-02-21 02:00:37,901:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000203AF6EC850>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000203AFBD17D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-21 02:00:37,901:INFO:Checking exceptions
2025-02-21 02:00:37,901:INFO:Importing libraries
2025-02-21 02:00:37,901:INFO:Copying training dataset
2025-02-21 02:00:37,915:INFO:Defining folds
2025-02-21 02:00:37,915:INFO:Declaring metric variables
2025-02-21 02:00:37,915:INFO:Importing untrained model
2025-02-21 02:00:37,921:INFO:K Neighbors Classifier Imported successfully
2025-02-21 02:00:37,921:INFO:Starting cross validation
2025-02-21 02:00:37,949:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-21 02:00:39,773:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:39,777:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:39,782:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:39,863:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:39,869:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:39,874:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:39,987:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:39,992:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:39,997:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:40,011:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:40,015:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:40,017:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:42,628:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:42,634:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:42,641:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:42,648:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:42,654:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:42,660:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:42,672:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:42,679:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:42,691:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:42,824:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:42,830:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:42,836:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:42,872:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:42,883:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:42,890:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:42,911:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:42,919:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:42,919:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:42,940:INFO:Calculating mean and std
2025-02-21 02:00:42,942:INFO:Creating metrics dataframe
2025-02-21 02:00:42,948:INFO:Uploading results into container
2025-02-21 02:00:42,950:INFO:Uploading model into container now
2025-02-21 02:00:42,951:INFO:_master_model_container: 2
2025-02-21 02:00:42,951:INFO:_display_container: 2
2025-02-21 02:00:42,953:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-02-21 02:00:42,953:INFO:create_model() successfully completed......................................
2025-02-21 02:00:43,115:INFO:SubProcess create_model() end ==================================
2025-02-21 02:00:43,117:INFO:Creating metrics dataframe
2025-02-21 02:00:43,131:INFO:Initializing Naive Bayes
2025-02-21 02:00:43,133:INFO:Total runtime is 0.17879182497660318 minutes
2025-02-21 02:00:43,133:INFO:SubProcess create_model() called ==================================
2025-02-21 02:00:43,133:INFO:Initializing create_model()
2025-02-21 02:00:43,133:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000203AF6EC850>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000203AFBD17D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-21 02:00:43,133:INFO:Checking exceptions
2025-02-21 02:00:43,133:INFO:Importing libraries
2025-02-21 02:00:43,133:INFO:Copying training dataset
2025-02-21 02:00:43,145:INFO:Defining folds
2025-02-21 02:00:43,145:INFO:Declaring metric variables
2025-02-21 02:00:43,145:INFO:Importing untrained model
2025-02-21 02:00:43,145:INFO:Naive Bayes Imported successfully
2025-02-21 02:00:43,145:INFO:Starting cross validation
2025-02-21 02:00:43,175:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-21 02:00:44,022:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:44,027:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:44,029:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:44,033:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:44,036:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:44,039:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:44,059:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:44,066:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:44,072:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:44,092:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:44,099:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:44,104:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:44,108:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:44,119:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:44,123:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:44,126:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:44,129:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:44,135:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:44,145:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:44,154:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:44,159:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:44,175:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:44,181:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:44,187:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:44,208:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:44,214:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:44,216:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:44,220:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:44,222:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:44,226:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:44,245:INFO:Calculating mean and std
2025-02-21 02:00:44,247:INFO:Creating metrics dataframe
2025-02-21 02:00:44,254:INFO:Uploading results into container
2025-02-21 02:00:44,256:INFO:Uploading model into container now
2025-02-21 02:00:44,256:INFO:_master_model_container: 3
2025-02-21 02:00:44,256:INFO:_display_container: 2
2025-02-21 02:00:44,256:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-02-21 02:00:44,256:INFO:create_model() successfully completed......................................
2025-02-21 02:00:44,380:INFO:SubProcess create_model() end ==================================
2025-02-21 02:00:44,380:INFO:Creating metrics dataframe
2025-02-21 02:00:44,396:INFO:Initializing Decision Tree Classifier
2025-02-21 02:00:44,396:INFO:Total runtime is 0.19984875520070391 minutes
2025-02-21 02:00:44,396:INFO:SubProcess create_model() called ==================================
2025-02-21 02:00:44,396:INFO:Initializing create_model()
2025-02-21 02:00:44,396:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000203AF6EC850>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000203AFBD17D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-21 02:00:44,396:INFO:Checking exceptions
2025-02-21 02:00:44,396:INFO:Importing libraries
2025-02-21 02:00:44,396:INFO:Copying training dataset
2025-02-21 02:00:44,412:INFO:Defining folds
2025-02-21 02:00:44,412:INFO:Declaring metric variables
2025-02-21 02:00:44,412:INFO:Importing untrained model
2025-02-21 02:00:44,412:INFO:Decision Tree Classifier Imported successfully
2025-02-21 02:00:44,412:INFO:Starting cross validation
2025-02-21 02:00:44,428:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-21 02:00:45,473:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:45,481:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:45,489:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:45,492:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:45,504:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:45,511:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:45,533:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:45,544:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:45,550:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:45,561:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:45,568:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:45,575:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:45,608:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:45,612:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:45,619:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:45,619:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:45,625:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:45,626:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:45,647:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:45,653:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:45,659:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:45,677:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:45,684:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:45,690:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:45,694:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:45,700:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:45,704:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:45,714:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:45,720:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:45,724:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:45,739:INFO:Calculating mean and std
2025-02-21 02:00:45,739:INFO:Creating metrics dataframe
2025-02-21 02:00:45,746:INFO:Uploading results into container
2025-02-21 02:00:45,746:INFO:Uploading model into container now
2025-02-21 02:00:45,746:INFO:_master_model_container: 4
2025-02-21 02:00:45,746:INFO:_display_container: 2
2025-02-21 02:00:45,746:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best')
2025-02-21 02:00:45,746:INFO:create_model() successfully completed......................................
2025-02-21 02:00:45,887:INFO:SubProcess create_model() end ==================================
2025-02-21 02:00:45,887:INFO:Creating metrics dataframe
2025-02-21 02:00:45,901:INFO:Initializing SVM - Linear Kernel
2025-02-21 02:00:45,901:INFO:Total runtime is 0.2249352137247721 minutes
2025-02-21 02:00:45,901:INFO:SubProcess create_model() called ==================================
2025-02-21 02:00:45,909:INFO:Initializing create_model()
2025-02-21 02:00:45,909:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000203AF6EC850>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000203AFBD17D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-21 02:00:45,909:INFO:Checking exceptions
2025-02-21 02:00:45,909:INFO:Importing libraries
2025-02-21 02:00:45,909:INFO:Copying training dataset
2025-02-21 02:00:45,917:INFO:Defining folds
2025-02-21 02:00:45,917:INFO:Declaring metric variables
2025-02-21 02:00:45,917:INFO:Importing untrained model
2025-02-21 02:00:45,921:INFO:SVM - Linear Kernel Imported successfully
2025-02-21 02:00:45,921:INFO:Starting cross validation
2025-02-21 02:00:45,944:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-21 02:00:46,894:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:00:46,906:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:00:46,906:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:46,910:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:46,914:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:46,918:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:46,922:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:46,924:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:46,928:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:00:46,933:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:46,941:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:46,941:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:00:46,945:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:46,945:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:00:46,947:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:46,950:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:46,952:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:46,956:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:46,960:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-21 02:00:46,963:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-21 02:00:46,965:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:46,967:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:46,969:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:00:46,973:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:46,981:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:46,984:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-21 02:00:46,987:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:00:46,988:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:46,990:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:00:46,990:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:46,992:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:46,996:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:46,998:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:47,000:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-21 02:00:47,003:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:47,004:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:47,054:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:00:47,058:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:47,062:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:47,066:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-21 02:00:47,066:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:47,071:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:00:47,081:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:47,088:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:47,093:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:47,108:INFO:Calculating mean and std
2025-02-21 02:00:47,110:INFO:Creating metrics dataframe
2025-02-21 02:00:47,115:INFO:Uploading results into container
2025-02-21 02:00:47,115:INFO:Uploading model into container now
2025-02-21 02:00:47,115:INFO:_master_model_container: 5
2025-02-21 02:00:47,115:INFO:_display_container: 2
2025-02-21 02:00:47,115:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=42, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-02-21 02:00:47,115:INFO:create_model() successfully completed......................................
2025-02-21 02:00:47,259:INFO:SubProcess create_model() end ==================================
2025-02-21 02:00:47,259:INFO:Creating metrics dataframe
2025-02-21 02:00:47,283:INFO:Initializing Ridge Classifier
2025-02-21 02:00:47,283:INFO:Total runtime is 0.2479603012402852 minutes
2025-02-21 02:00:47,283:INFO:SubProcess create_model() called ==================================
2025-02-21 02:00:47,285:INFO:Initializing create_model()
2025-02-21 02:00:47,285:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000203AF6EC850>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000203AFBD17D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-21 02:00:47,285:INFO:Checking exceptions
2025-02-21 02:00:47,285:INFO:Importing libraries
2025-02-21 02:00:47,285:INFO:Copying training dataset
2025-02-21 02:00:47,294:INFO:Defining folds
2025-02-21 02:00:47,294:INFO:Declaring metric variables
2025-02-21 02:00:47,294:INFO:Importing untrained model
2025-02-21 02:00:47,296:INFO:Ridge Classifier Imported successfully
2025-02-21 02:00:47,296:INFO:Starting cross validation
2025-02-21 02:00:47,321:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-21 02:00:48,110:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:00:48,115:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:48,122:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:48,124:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-21 02:00:48,128:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:48,128:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:00:48,132:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:48,138:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:48,142:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-21 02:00:48,142:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:00:48,146:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:48,147:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:48,153:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:48,156:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-21 02:00:48,160:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:48,165:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:00:48,167:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:48,173:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:48,176:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-21 02:00:48,180:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:48,185:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:00:48,185:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:00:48,187:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:48,189:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:48,198:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:48,198:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:48,201:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-21 02:00:48,201:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-21 02:00:48,204:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:48,204:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:48,225:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:00:48,228:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:48,237:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:48,240:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-21 02:00:48,242:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:48,245:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:00:48,250:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:48,256:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:48,258:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-21 02:00:48,260:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:48,268:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:00:48,272:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:48,279:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:48,281:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-21 02:00:48,283:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:48,290:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:00:48,292:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:48,298:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:48,302:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:48,317:INFO:Calculating mean and std
2025-02-21 02:00:48,319:INFO:Creating metrics dataframe
2025-02-21 02:00:48,325:INFO:Uploading results into container
2025-02-21 02:00:48,326:INFO:Uploading model into container now
2025-02-21 02:00:48,326:INFO:_master_model_container: 6
2025-02-21 02:00:48,326:INFO:_display_container: 2
2025-02-21 02:00:48,326:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=42, solver='auto',
                tol=0.0001)
2025-02-21 02:00:48,328:INFO:create_model() successfully completed......................................
2025-02-21 02:00:48,441:INFO:SubProcess create_model() end ==================================
2025-02-21 02:00:48,441:INFO:Creating metrics dataframe
2025-02-21 02:00:48,462:INFO:Initializing Random Forest Classifier
2025-02-21 02:00:48,462:INFO:Total runtime is 0.2676066597302754 minutes
2025-02-21 02:00:48,462:INFO:SubProcess create_model() called ==================================
2025-02-21 02:00:48,462:INFO:Initializing create_model()
2025-02-21 02:00:48,462:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000203AF6EC850>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000203AFBD17D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-21 02:00:48,462:INFO:Checking exceptions
2025-02-21 02:00:48,462:INFO:Importing libraries
2025-02-21 02:00:48,462:INFO:Copying training dataset
2025-02-21 02:00:48,473:INFO:Defining folds
2025-02-21 02:00:48,475:INFO:Declaring metric variables
2025-02-21 02:00:48,475:INFO:Importing untrained model
2025-02-21 02:00:48,475:INFO:Random Forest Classifier Imported successfully
2025-02-21 02:00:48,477:INFO:Starting cross validation
2025-02-21 02:00:48,500:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-21 02:00:49,882:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:49,890:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:49,896:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:49,947:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:49,955:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:49,962:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:50,006:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:50,014:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:50,023:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:50,053:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:50,057:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:50,059:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:50,065:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:50,065:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:50,070:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:50,075:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:50,075:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:50,075:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:50,075:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:50,091:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:50,099:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:50,127:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:50,137:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:50,147:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:50,193:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:50,193:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:50,203:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:50,203:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:50,211:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:50,229:INFO:Calculating mean and std
2025-02-21 02:00:50,230:INFO:Creating metrics dataframe
2025-02-21 02:00:50,230:INFO:Uploading results into container
2025-02-21 02:00:50,230:INFO:Uploading model into container now
2025-02-21 02:00:50,230:INFO:_master_model_container: 7
2025-02-21 02:00:50,230:INFO:_display_container: 2
2025-02-21 02:00:50,244:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2025-02-21 02:00:50,244:INFO:create_model() successfully completed......................................
2025-02-21 02:00:50,404:INFO:SubProcess create_model() end ==================================
2025-02-21 02:00:50,404:INFO:Creating metrics dataframe
2025-02-21 02:00:50,419:INFO:Initializing Quadratic Discriminant Analysis
2025-02-21 02:00:50,419:INFO:Total runtime is 0.30023276408513383 minutes
2025-02-21 02:00:50,419:INFO:SubProcess create_model() called ==================================
2025-02-21 02:00:50,419:INFO:Initializing create_model()
2025-02-21 02:00:50,419:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000203AF6EC850>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000203AFBD17D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-21 02:00:50,419:INFO:Checking exceptions
2025-02-21 02:00:50,419:INFO:Importing libraries
2025-02-21 02:00:50,419:INFO:Copying training dataset
2025-02-21 02:00:50,419:INFO:Defining folds
2025-02-21 02:00:50,419:INFO:Declaring metric variables
2025-02-21 02:00:50,419:INFO:Importing untrained model
2025-02-21 02:00:50,419:INFO:Quadratic Discriminant Analysis Imported successfully
2025-02-21 02:00:50,419:INFO:Starting cross validation
2025-02-21 02:00:50,451:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-21 02:00:51,473:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:00:51,476:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:51,482:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:51,492:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:51,496:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:00:51,498:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:51,505:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:51,510:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:51,514:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:00:51,517:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:51,523:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:51,526:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:00:51,528:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:51,529:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:51,536:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:51,543:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:51,556:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:00:51,560:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:51,562:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:00:51,564:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:51,566:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:51,572:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:51,572:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:51,578:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:51,580:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:00:51,583:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:51,589:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:51,592:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:00:51,595:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:51,597:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:51,601:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:51,605:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:51,611:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:00:51,613:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:00:51,613:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:51,615:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:51,619:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:51,621:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:51,625:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:51,625:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:51,636:INFO:Calculating mean and std
2025-02-21 02:00:51,638:INFO:Creating metrics dataframe
2025-02-21 02:00:51,644:INFO:Uploading results into container
2025-02-21 02:00:51,646:INFO:Uploading model into container now
2025-02-21 02:00:51,646:INFO:_master_model_container: 8
2025-02-21 02:00:51,646:INFO:_display_container: 2
2025-02-21 02:00:51,646:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-02-21 02:00:51,646:INFO:create_model() successfully completed......................................
2025-02-21 02:00:51,774:INFO:SubProcess create_model() end ==================================
2025-02-21 02:00:51,774:INFO:Creating metrics dataframe
2025-02-21 02:00:51,774:INFO:Initializing Ada Boost Classifier
2025-02-21 02:00:51,774:INFO:Total runtime is 0.3228066007296244 minutes
2025-02-21 02:00:51,774:INFO:SubProcess create_model() called ==================================
2025-02-21 02:00:51,774:INFO:Initializing create_model()
2025-02-21 02:00:51,774:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000203AF6EC850>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000203AFBD17D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-21 02:00:51,774:INFO:Checking exceptions
2025-02-21 02:00:51,774:INFO:Importing libraries
2025-02-21 02:00:51,774:INFO:Copying training dataset
2025-02-21 02:00:51,793:INFO:Defining folds
2025-02-21 02:00:51,793:INFO:Declaring metric variables
2025-02-21 02:00:51,793:INFO:Importing untrained model
2025-02-21 02:00:51,793:INFO:Ada Boost Classifier Imported successfully
2025-02-21 02:00:51,793:INFO:Starting cross validation
2025-02-21 02:00:51,806:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-21 02:00:52,849:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-21 02:00:52,865:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-21 02:00:52,867:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-21 02:00:52,870:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-21 02:00:52,888:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-21 02:00:52,965:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-21 02:00:53,103:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:00:53,107:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:53,113:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:00:53,114:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:53,116:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:53,119:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:53,123:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:53,127:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:00:53,127:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:00:53,129:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:53,131:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:53,131:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:53,137:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:53,137:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:53,140:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-21 02:00:53,143:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:53,146:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:00:53,149:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:53,154:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:53,162:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:53,186:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-21 02:00:53,200:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-21 02:00:53,204:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-21 02:00:53,208:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-21 02:00:53,240:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:00:53,241:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:53,248:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:53,253:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:53,394:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:00:53,397:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:53,402:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:53,402:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:00:53,404:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:53,406:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:53,408:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:00:53,408:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:00:53,408:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:53,410:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-21 02:00:53,410:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:53,410:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:53,412:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:53,414:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:53,418:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:53,418:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:53,428:INFO:Calculating mean and std
2025-02-21 02:00:53,432:INFO:Creating metrics dataframe
2025-02-21 02:00:53,436:INFO:Uploading results into container
2025-02-21 02:00:53,438:INFO:Uploading model into container now
2025-02-21 02:00:53,438:INFO:_master_model_container: 9
2025-02-21 02:00:53,438:INFO:_display_container: 2
2025-02-21 02:00:53,440:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=42)
2025-02-21 02:00:53,440:INFO:create_model() successfully completed......................................
2025-02-21 02:00:53,537:INFO:SubProcess create_model() end ==================================
2025-02-21 02:00:53,537:INFO:Creating metrics dataframe
2025-02-21 02:00:53,551:INFO:Initializing Gradient Boosting Classifier
2025-02-21 02:00:53,551:INFO:Total runtime is 0.35242082277933756 minutes
2025-02-21 02:00:53,551:INFO:SubProcess create_model() called ==================================
2025-02-21 02:00:53,551:INFO:Initializing create_model()
2025-02-21 02:00:53,551:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000203AF6EC850>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000203AFBD17D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-21 02:00:53,551:INFO:Checking exceptions
2025-02-21 02:00:53,551:INFO:Importing libraries
2025-02-21 02:00:53,551:INFO:Copying training dataset
2025-02-21 02:00:53,566:INFO:Defining folds
2025-02-21 02:00:53,566:INFO:Declaring metric variables
2025-02-21 02:00:53,566:INFO:Importing untrained model
2025-02-21 02:00:53,570:INFO:Gradient Boosting Classifier Imported successfully
2025-02-21 02:00:53,570:INFO:Starting cross validation
2025-02-21 02:00:53,592:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-21 02:00:55,125:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:00:55,129:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:55,133:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:00:55,135:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:55,135:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:55,141:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:55,143:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:55,149:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:55,207:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:00:55,207:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:00:55,211:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:55,211:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:55,216:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:55,218:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:00:55,223:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:55,223:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:55,223:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:00:55,225:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:55,227:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:55,229:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:55,233:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:55,235:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:55,239:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:55,266:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:00:55,268:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:55,273:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:55,281:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:55,690:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:00:55,693:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:55,698:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:55,701:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:55,771:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:00:55,773:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:55,778:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:55,782:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:55,785:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:00:55,787:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:55,791:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:55,795:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:55,806:INFO:Calculating mean and std
2025-02-21 02:00:55,807:INFO:Creating metrics dataframe
2025-02-21 02:00:55,813:INFO:Uploading results into container
2025-02-21 02:00:55,813:INFO:Uploading model into container now
2025-02-21 02:00:55,813:INFO:_master_model_container: 10
2025-02-21 02:00:55,813:INFO:_display_container: 2
2025-02-21 02:00:55,815:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-02-21 02:00:55,815:INFO:create_model() successfully completed......................................
2025-02-21 02:00:55,920:INFO:SubProcess create_model() end ==================================
2025-02-21 02:00:55,920:INFO:Creating metrics dataframe
2025-02-21 02:00:55,935:INFO:Initializing Linear Discriminant Analysis
2025-02-21 02:00:55,935:INFO:Total runtime is 0.3921607454617818 minutes
2025-02-21 02:00:55,937:INFO:SubProcess create_model() called ==================================
2025-02-21 02:00:55,937:INFO:Initializing create_model()
2025-02-21 02:00:55,937:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000203AF6EC850>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000203AFBD17D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-21 02:00:55,937:INFO:Checking exceptions
2025-02-21 02:00:55,937:INFO:Importing libraries
2025-02-21 02:00:55,937:INFO:Copying training dataset
2025-02-21 02:00:55,943:INFO:Defining folds
2025-02-21 02:00:55,943:INFO:Declaring metric variables
2025-02-21 02:00:55,943:INFO:Importing untrained model
2025-02-21 02:00:55,943:INFO:Linear Discriminant Analysis Imported successfully
2025-02-21 02:00:55,943:INFO:Starting cross validation
2025-02-21 02:00:55,958:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-21 02:00:57,024:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:00:57,026:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:57,031:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:57,038:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:57,059:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:00:57,061:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:57,066:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:57,074:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:57,087:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:00:57,091:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:57,096:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:57,102:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:57,110:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:00:57,113:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:57,119:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:57,125:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:57,131:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:00:57,134:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:57,140:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:57,148:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:57,165:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:00:57,167:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:57,174:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:57,184:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:57,198:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:00:57,202:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:57,207:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:57,213:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:57,215:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:00:57,218:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:57,224:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:57,227:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:00:57,229:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:57,231:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:57,237:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:57,243:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:57,256:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:00:57,259:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:57,263:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:57,268:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:57,286:INFO:Calculating mean and std
2025-02-21 02:00:57,288:INFO:Creating metrics dataframe
2025-02-21 02:00:57,292:INFO:Uploading results into container
2025-02-21 02:00:57,296:INFO:Uploading model into container now
2025-02-21 02:00:57,296:INFO:_master_model_container: 11
2025-02-21 02:00:57,296:INFO:_display_container: 2
2025-02-21 02:00:57,298:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-02-21 02:00:57,298:INFO:create_model() successfully completed......................................
2025-02-21 02:00:57,432:INFO:SubProcess create_model() end ==================================
2025-02-21 02:00:57,432:INFO:Creating metrics dataframe
2025-02-21 02:00:57,448:INFO:Initializing Extra Trees Classifier
2025-02-21 02:00:57,448:INFO:Total runtime is 0.4173733234405517 minutes
2025-02-21 02:00:57,448:INFO:SubProcess create_model() called ==================================
2025-02-21 02:00:57,448:INFO:Initializing create_model()
2025-02-21 02:00:57,448:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000203AF6EC850>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000203AFBD17D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-21 02:00:57,448:INFO:Checking exceptions
2025-02-21 02:00:57,448:INFO:Importing libraries
2025-02-21 02:00:57,448:INFO:Copying training dataset
2025-02-21 02:00:57,463:INFO:Defining folds
2025-02-21 02:00:57,463:INFO:Declaring metric variables
2025-02-21 02:00:57,463:INFO:Importing untrained model
2025-02-21 02:00:57,463:INFO:Extra Trees Classifier Imported successfully
2025-02-21 02:00:57,463:INFO:Starting cross validation
2025-02-21 02:00:57,479:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-21 02:00:58,935:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:58,946:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:58,954:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:58,986:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:58,997:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:59,004:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:59,004:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:59,009:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:59,009:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:59,014:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:59,025:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:59,053:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:59,055:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:59,062:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:59,062:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:59,069:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:59,069:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:59,077:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:59,087:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:59,097:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:59,123:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:59,132:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:59,140:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:59,166:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:59,174:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:59,183:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:59,252:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:59,262:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:59,269:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:00:59,284:INFO:Calculating mean and std
2025-02-21 02:00:59,286:INFO:Creating metrics dataframe
2025-02-21 02:00:59,297:INFO:Uploading results into container
2025-02-21 02:00:59,298:INFO:Uploading model into container now
2025-02-21 02:00:59,298:INFO:_master_model_container: 12
2025-02-21 02:00:59,300:INFO:_display_container: 2
2025-02-21 02:00:59,300:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False)
2025-02-21 02:00:59,300:INFO:create_model() successfully completed......................................
2025-02-21 02:00:59,431:INFO:SubProcess create_model() end ==================================
2025-02-21 02:00:59,431:INFO:Creating metrics dataframe
2025-02-21 02:00:59,447:INFO:Initializing Light Gradient Boosting Machine
2025-02-21 02:00:59,447:INFO:Total runtime is 0.4506942788759867 minutes
2025-02-21 02:00:59,447:INFO:SubProcess create_model() called ==================================
2025-02-21 02:00:59,447:INFO:Initializing create_model()
2025-02-21 02:00:59,447:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000203AF6EC850>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000203AFBD17D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-21 02:00:59,447:INFO:Checking exceptions
2025-02-21 02:00:59,447:INFO:Importing libraries
2025-02-21 02:00:59,447:INFO:Copying training dataset
2025-02-21 02:00:59,447:INFO:Defining folds
2025-02-21 02:00:59,447:INFO:Declaring metric variables
2025-02-21 02:00:59,447:INFO:Importing untrained model
2025-02-21 02:00:59,463:INFO:Light Gradient Boosting Machine Imported successfully
2025-02-21 02:00:59,463:INFO:Starting cross validation
2025-02-21 02:00:59,478:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-21 02:01:01,567:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:01:01,574:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:01:01,580:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:01:01,623:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:01:01,637:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:01:01,644:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:01:01,659:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:01:01,665:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:01:01,672:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:01:01,693:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:01:01,696:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:01:01,698:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:01:01,702:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:01:01,705:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:01:01,705:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-21 02:01:01,708:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:01:01,728:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:01:01,733:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:01:01,738:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:01:01,813:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:01:01,819:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:01:01,836:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:01:01,850:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:01:01,852:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:01:01,856:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:01:01,858:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:01:01,862:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:01:01,864:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:01:01,876:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:01:01,881:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:01:01,885:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:01:01,899:INFO:Calculating mean and std
2025-02-21 02:01:01,899:INFO:Creating metrics dataframe
2025-02-21 02:01:01,907:INFO:Uploading results into container
2025-02-21 02:01:01,907:INFO:Uploading model into container now
2025-02-21 02:01:01,909:INFO:_master_model_container: 13
2025-02-21 02:01:01,909:INFO:_display_container: 2
2025-02-21 02:01:01,911:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-02-21 02:01:01,911:INFO:create_model() successfully completed......................................
2025-02-21 02:01:02,018:INFO:SubProcess create_model() end ==================================
2025-02-21 02:01:02,018:INFO:Creating metrics dataframe
2025-02-21 02:01:02,034:INFO:Initializing Dummy Classifier
2025-02-21 02:01:02,034:INFO:Total runtime is 0.49381278355916336 minutes
2025-02-21 02:01:02,034:INFO:SubProcess create_model() called ==================================
2025-02-21 02:01:02,034:INFO:Initializing create_model()
2025-02-21 02:01:02,034:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000203AF6EC850>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000203AFBD17D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-21 02:01:02,034:INFO:Checking exceptions
2025-02-21 02:01:02,034:INFO:Importing libraries
2025-02-21 02:01:02,034:INFO:Copying training dataset
2025-02-21 02:01:02,034:INFO:Defining folds
2025-02-21 02:01:02,034:INFO:Declaring metric variables
2025-02-21 02:01:02,034:INFO:Importing untrained model
2025-02-21 02:01:02,034:INFO:Dummy Classifier Imported successfully
2025-02-21 02:01:02,034:INFO:Starting cross validation
2025-02-21 02:01:02,066:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-21 02:01:03,122:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:01:03,125:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:01:03,128:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:01:03,130:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-21 02:01:03,130:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:01:03,133:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-21 02:01:03,133:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:01:03,137:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:01:03,198:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:01:03,199:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:01:03,204:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:01:03,205:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:01:03,207:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-21 02:01:03,207:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-21 02:01:03,209:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:01:03,209:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:01:03,238:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:01:03,245:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:01:03,248:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-21 02:01:03,251:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:01:03,258:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:01:03,264:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:01:03,266:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-21 02:01:03,268:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:01:03,279:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:01:03,285:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:01:03,288:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-21 02:01:03,293:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:01:03,312:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:01:03,317:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:01:03,317:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:01:03,321:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-21 02:01:03,323:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:01:03,325:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-21 02:01:03,329:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:01:03,337:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:01:03,342:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:01:03,346:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-21 02:01:03,348:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:01:03,366:INFO:Calculating mean and std
2025-02-21 02:01:03,367:INFO:Creating metrics dataframe
2025-02-21 02:01:03,374:INFO:Uploading results into container
2025-02-21 02:01:03,376:INFO:Uploading model into container now
2025-02-21 02:01:03,376:INFO:_master_model_container: 14
2025-02-21 02:01:03,377:INFO:_display_container: 2
2025-02-21 02:01:03,377:INFO:DummyClassifier(constant=None, random_state=42, strategy='prior')
2025-02-21 02:01:03,377:INFO:create_model() successfully completed......................................
2025-02-21 02:01:03,510:INFO:SubProcess create_model() end ==================================
2025-02-21 02:01:03,510:INFO:Creating metrics dataframe
2025-02-21 02:01:03,526:INFO:Initializing create_model()
2025-02-21 02:01:03,526:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000203AF6EC850>, estimator=AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=42), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-21 02:01:03,526:INFO:Checking exceptions
2025-02-21 02:01:03,526:INFO:Importing libraries
2025-02-21 02:01:03,526:INFO:Copying training dataset
2025-02-21 02:01:03,526:INFO:Defining folds
2025-02-21 02:01:03,526:INFO:Declaring metric variables
2025-02-21 02:01:03,526:INFO:Importing untrained model
2025-02-21 02:01:03,526:INFO:Declaring custom model
2025-02-21 02:01:03,542:INFO:Ada Boost Classifier Imported successfully
2025-02-21 02:01:03,557:INFO:Cross validation set to False
2025-02-21 02:01:03,557:INFO:Fitting Model
2025-02-21 02:01:03,589:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000164 seconds.
2025-02-21 02:01:03,589:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-02-21 02:01:03,589:INFO:[LightGBM] [Info] Total Bins 264
2025-02-21 02:01:03,589:INFO:[LightGBM] [Info] Number of data points in the train set: 111, number of used features: 7
2025-02-21 02:01:03,589:INFO:[LightGBM] [Info] Start training from score -1.098612
2025-02-21 02:01:03,589:INFO:[LightGBM] [Info] Start training from score -1.071944
2025-02-21 02:01:03,589:INFO:[LightGBM] [Info] Start training from score -1.126011
2025-02-21 02:01:03,589:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,589:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,589:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,589:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,589:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,589:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,589:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,589:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,589:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,589:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,589:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,589:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,589:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,589:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,589:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,589:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,589:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,589:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,589:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,589:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,589:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,589:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,589:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,589:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,589:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,589:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,589:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,589:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,589:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,589:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,589:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,589:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,589:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,589:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,589:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,589:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,589:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,589:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,589:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,602:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,602:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,602:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,602:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,602:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,602:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,602:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,605:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,605:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,605:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,605:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,605:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,605:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,605:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,605:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,605:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,605:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,605:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,605:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,605:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,605:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,605:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,605:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,605:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,605:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,605:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,605:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,605:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,605:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,605:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,605:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,605:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,605:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,605:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,605:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,605:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,605:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,605:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,605:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,605:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,605:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,605:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,605:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,605:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,605:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,605:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,605:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,605:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,605:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,605:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,620:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,620:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,620:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,620:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,620:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,620:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,620:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,620:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,620:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,620:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,620:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,620:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,620:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,620:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,620:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,620:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,620:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,620:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,620:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,620:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,620:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,620:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,620:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,620:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,620:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,620:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,620:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,620:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,620:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,620:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,620:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,620:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,620:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,620:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,620:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,620:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,620:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,620:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,620:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,620:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,620:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,620:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,620:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,620:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,620:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,620:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,620:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,620:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,636:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,636:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,636:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,636:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,636:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,636:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,636:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,636:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,636:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,636:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,636:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,636:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,636:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,636:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,636:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,636:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,636:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,636:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,636:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,636:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,636:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,636:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,636:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,636:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,636:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,636:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,636:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,636:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,636:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,636:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,636:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,636:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,636:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,636:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,636:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,636:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,636:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,636:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,636:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,636:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,636:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,636:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,636:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,652:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,652:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,652:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,654:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,654:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,654:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,654:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,654:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,654:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,656:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,656:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,656:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,656:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,656:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,656:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,658:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,658:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,658:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,658:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,658:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,658:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,660:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,660:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,660:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,660:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,660:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,660:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,660:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,662:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,662:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,662:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,662:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,662:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,662:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,664:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,664:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,664:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,664:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,664:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,664:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,666:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,666:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,666:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,666:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,666:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,667:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,669:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,669:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,669:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,669:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,669:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,669:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,669:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,671:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,671:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,671:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,671:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,671:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,671:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,673:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,673:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,673:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,673:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,673:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,673:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,675:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,675:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,675:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,675:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,675:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,675:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,677:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,677:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,677:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,677:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,677:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,677:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,679:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,679:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,679:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,679:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,679:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,679:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,681:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,681:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,681:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,681:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,681:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,681:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,683:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,683:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,683:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,683:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,683:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,683:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,685:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,685:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,685:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,685:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,685:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,685:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,687:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,687:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,687:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,687:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,687:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,687:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,687:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,689:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,689:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,689:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,689:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,689:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,689:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,691:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,691:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,691:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,691:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,691:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,691:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:01:03,716:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-21 02:01:03,853:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=42)
2025-02-21 02:01:03,858:INFO:create_model() successfully completed......................................
2025-02-21 02:01:04,049:INFO:_master_model_container: 14
2025-02-21 02:01:04,049:INFO:_display_container: 2
2025-02-21 02:01:04,049:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=42)
2025-02-21 02:01:04,049:INFO:compare_models() successfully completed......................................
2025-02-21 02:01:04,049:INFO:Initializing evaluate_model()
2025-02-21 02:01:04,049:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000203AF6EC850>, estimator=AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=42), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2025-02-21 02:01:04,068:INFO:Initializing plot_model()
2025-02-21 02:01:04,068:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000203AF6EC850>, estimator=AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=42), plot=pipeline, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2025-02-21 02:01:04,068:INFO:Checking exceptions
2025-02-21 02:01:04,072:INFO:Preloading libraries
2025-02-21 02:01:04,088:INFO:Copying training dataset
2025-02-21 02:01:04,088:INFO:Plot type: pipeline
2025-02-21 02:02:12,043:INFO:Visual Rendered Successfully
2025-02-21 02:02:12,132:INFO:plot_model() successfully completed......................................
2025-02-21 02:02:12,136:INFO:Initializing plot_model()
2025-02-21 02:02:12,136:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000203AF6EC850>, estimator=AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=42), plot=confusion_matrix, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2025-02-21 02:02:12,136:INFO:Checking exceptions
2025-02-21 02:02:12,139:INFO:Preloading libraries
2025-02-21 02:02:12,139:INFO:Copying training dataset
2025-02-21 02:02:12,139:INFO:Plot type: confusion_matrix
2025-02-21 02:02:12,427:INFO:Fitting Model
2025-02-21 02:02:12,427:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but AdaBoostClassifier was fitted with feature names
  warnings.warn(

2025-02-21 02:02:12,427:INFO:Scoring test/hold-out set
2025-02-21 02:04:14,916:INFO:PyCaret ClassificationExperiment
2025-02-21 02:04:14,916:INFO:Logging name: clf-default-name
2025-02-21 02:04:14,916:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-02-21 02:04:14,916:INFO:version 3.3.2
2025-02-21 02:04:14,916:INFO:Initializing setup()
2025-02-21 02:04:14,916:INFO:self.USI: 244e
2025-02-21 02:04:14,916:INFO:self._variable_keys: {'exp_name_log', 'y', 'log_plots_param', 'seed', 'fold_generator', 'USI', 'gpu_param', 'n_jobs_param', 'pipeline', 'gpu_n_jobs_param', 'X', 'X_train', 'exp_id', 'X_test', 'fold_shuffle_param', 'html_param', '_ml_usecase', 'y_train', 'idx', 'memory', 'fold_groups_param', 'fix_imbalance', 'target_param', 'logging_param', 'is_multiclass', 'data', 'y_test', '_available_plots'}
2025-02-21 02:04:14,916:INFO:Checking environment
2025-02-21 02:04:14,916:INFO:python_version: 3.11.11
2025-02-21 02:04:14,916:INFO:python_build: ('main', 'Dec 11 2024 16:34:19')
2025-02-21 02:04:14,916:INFO:machine: AMD64
2025-02-21 02:04:14,931:INFO:platform: Windows-10-10.0.26100-SP0
2025-02-21 02:04:14,931:INFO:Memory: svmem(total=16855433216, available=8382930944, percent=50.3, used=8472502272, free=8382930944)
2025-02-21 02:04:14,931:INFO:Physical Core: 10
2025-02-21 02:04:14,931:INFO:Logical Core: 16
2025-02-21 02:04:14,931:INFO:Checking libraries
2025-02-21 02:04:14,931:INFO:System:
2025-02-21 02:04:14,931:INFO:    python: 3.11.11 | packaged by Anaconda, Inc. | (main, Dec 11 2024, 16:34:19) [MSC v.1929 64 bit (AMD64)]
2025-02-21 02:04:14,931:INFO:executable: C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\python.exe
2025-02-21 02:04:14,931:INFO:   machine: Windows-10-10.0.26100-SP0
2025-02-21 02:04:14,931:INFO:PyCaret required dependencies:
2025-02-21 02:04:14,963:INFO:                 pip: 25.0
2025-02-21 02:04:14,963:INFO:          setuptools: 75.8.0
2025-02-21 02:04:14,963:INFO:             pycaret: 3.3.2
2025-02-21 02:04:14,963:INFO:             IPython: 8.32.0
2025-02-21 02:04:14,963:INFO:          ipywidgets: 8.1.5
2025-02-21 02:04:14,963:INFO:                tqdm: 4.67.1
2025-02-21 02:04:14,963:INFO:               numpy: 1.24.4
2025-02-21 02:04:14,963:INFO:              pandas: 1.5.3
2025-02-21 02:04:14,963:INFO:              jinja2: 3.1.5
2025-02-21 02:04:14,963:INFO:               scipy: 1.11.4
2025-02-21 02:04:14,963:INFO:              joblib: 1.3.2
2025-02-21 02:04:14,963:INFO:             sklearn: 1.4.2
2025-02-21 02:04:14,963:INFO:                pyod: 2.0.3
2025-02-21 02:04:14,963:INFO:            imblearn: 0.13.0
2025-02-21 02:04:14,963:INFO:   category_encoders: 2.7.0
2025-02-21 02:04:14,963:INFO:            lightgbm: 4.6.0
2025-02-21 02:04:14,963:INFO:               numba: 0.61.0
2025-02-21 02:04:14,963:INFO:            requests: 2.32.3
2025-02-21 02:04:14,963:INFO:          matplotlib: 3.7.5
2025-02-21 02:04:14,963:INFO:          scikitplot: 0.3.7
2025-02-21 02:04:14,963:INFO:         yellowbrick: 1.5
2025-02-21 02:04:14,963:INFO:              plotly: 5.24.1
2025-02-21 02:04:14,963:INFO:    plotly-resampler: Not installed
2025-02-21 02:04:14,963:INFO:             kaleido: 0.2.1
2025-02-21 02:04:14,963:INFO:           schemdraw: 0.15
2025-02-21 02:04:14,963:INFO:         statsmodels: 0.14.4
2025-02-21 02:04:14,963:INFO:              sktime: 0.26.0
2025-02-21 02:04:14,963:INFO:               tbats: 1.1.3
2025-02-21 02:04:14,963:INFO:            pmdarima: 2.0.4
2025-02-21 02:04:14,963:INFO:              psutil: 7.0.0
2025-02-21 02:04:14,963:INFO:          markupsafe: 3.0.2
2025-02-21 02:04:14,963:INFO:             pickle5: Not installed
2025-02-21 02:04:14,969:INFO:         cloudpickle: 3.1.1
2025-02-21 02:04:14,969:INFO:         deprecation: 2.1.0
2025-02-21 02:04:14,969:INFO:              xxhash: 3.5.0
2025-02-21 02:04:14,969:INFO:           wurlitzer: Not installed
2025-02-21 02:04:14,969:INFO:PyCaret optional dependencies:
2025-02-21 02:04:14,979:INFO:                shap: Not installed
2025-02-21 02:04:14,979:INFO:           interpret: Not installed
2025-02-21 02:04:14,979:INFO:                umap: Not installed
2025-02-21 02:04:14,979:INFO:     ydata_profiling: Not installed
2025-02-21 02:04:14,979:INFO:  explainerdashboard: Not installed
2025-02-21 02:04:14,979:INFO:             autoviz: Not installed
2025-02-21 02:04:14,979:INFO:           fairlearn: Not installed
2025-02-21 02:04:14,979:INFO:          deepchecks: Not installed
2025-02-21 02:04:14,979:INFO:             xgboost: Not installed
2025-02-21 02:04:14,979:INFO:            catboost: Not installed
2025-02-21 02:04:14,979:INFO:              kmodes: Not installed
2025-02-21 02:04:14,979:INFO:             mlxtend: Not installed
2025-02-21 02:04:14,979:INFO:       statsforecast: Not installed
2025-02-21 02:04:14,979:INFO:        tune_sklearn: Not installed
2025-02-21 02:04:14,979:INFO:                 ray: Not installed
2025-02-21 02:04:14,979:INFO:            hyperopt: Not installed
2025-02-21 02:04:14,979:INFO:              optuna: Not installed
2025-02-21 02:04:14,979:INFO:               skopt: Not installed
2025-02-21 02:04:14,979:INFO:              mlflow: Not installed
2025-02-21 02:04:14,979:INFO:              gradio: Not installed
2025-02-21 02:04:14,979:INFO:             fastapi: Not installed
2025-02-21 02:04:14,979:INFO:             uvicorn: Not installed
2025-02-21 02:04:14,979:INFO:              m2cgen: Not installed
2025-02-21 02:04:14,979:INFO:           evidently: Not installed
2025-02-21 02:04:14,979:INFO:               fugue: Not installed
2025-02-21 02:04:14,979:INFO:           streamlit: Not installed
2025-02-21 02:04:14,979:INFO:             prophet: Not installed
2025-02-21 02:04:14,979:INFO:None
2025-02-21 02:04:14,979:INFO:Set up data.
2025-02-21 02:04:14,979:INFO:Set up folding strategy.
2025-02-21 02:04:14,979:INFO:Set up train/test split.
2025-02-21 02:04:14,979:INFO:Set up index.
2025-02-21 02:04:14,979:INFO:Assigning column types.
2025-02-21 02:04:14,979:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-02-21 02:04:15,026:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-21 02:04:15,026:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-02-21 02:04:15,058:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-21 02:04:15,058:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-21 02:04:15,121:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-21 02:04:15,121:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-02-21 02:04:15,157:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-21 02:04:15,157:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-21 02:04:15,157:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-02-21 02:04:15,249:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-02-21 02:04:15,296:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-21 02:04:15,296:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-21 02:04:15,376:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-02-21 02:04:15,438:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-21 02:04:15,438:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-21 02:04:15,438:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-02-21 02:04:15,549:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-21 02:04:15,549:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-21 02:04:15,648:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-21 02:04:15,648:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-21 02:04:15,648:INFO:Preparing preprocessing pipeline...
2025-02-21 02:04:15,648:INFO:Set up label encoding.
2025-02-21 02:04:15,648:INFO:Set up simple imputation.
2025-02-21 02:04:15,648:INFO:Set up feature normalization.
2025-02-21 02:04:15,648:INFO:Set up feature selection.
2025-02-21 02:04:15,810:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-21 02:04:15,810:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-21 02:04:15,906:INFO:Finished creating preprocessing pipeline.
2025-02-21 02:04:15,906:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\JUPYTE~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Area', 'Perimeter', 'Compactness',
                                             'Length', 'Width',
                                             'AsymmetryCoeff', 'Groove'],
                                    transformer=SimpleIm...
                                                                                         learning_rate=0.1,
                                                                                         max_depth=-1,
                                                                                         min_child_samples=20,
                                                                                         min_child_weight=0.001,
                                                                                         min_split_gain=0.0,
                                                                                         n_estimators=100,
                                                                                         n_jobs=None,
                                                                                         num_leaves=31,
                                                                                         objective=None,
                                                                                         random_state=None,
                                                                                         reg_alpha=0.0,
                                                                                         reg_lambda=0.0,
                                                                                         subsample=1.0,
                                                                                         subsample_for_bin=200000,
                                                                                         subsample_freq=0),
                                                                importance_getter='auto',
                                                                max_features=1,
                                                                norm_order=1,
                                                                prefit=False,
                                                                threshold=-inf)))],
         verbose=False)
2025-02-21 02:04:15,906:INFO:Creating final display dataframe.
2025-02-21 02:04:16,079:INFO:Setup _display_container:                     Description             Value
0                    Session id                42
1                        Target              Type
2                   Target type        Multiclass
3                Target mapping  1: 0, 2: 1, 3: 2
4           Original data shape          (159, 8)
5        Transformed data shape          (159, 2)
6   Transformed train set shape          (111, 2)
7    Transformed test set shape           (48, 2)
8              Numeric features                 7
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13                    Normalize              True
14             Normalize method            zscore
15            Feature selection              True
16     Feature selection method           classic
17  Feature selection estimator          lightgbm
18  Number of features selected               0.2
19               Fold Generator   StratifiedKFold
20                  Fold Number                10
21                     CPU Jobs                -1
22                      Use GPU             False
23               Log Experiment             False
24              Experiment Name  clf-default-name
25                          USI              244e
2025-02-21 02:04:16,143:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-21 02:04:16,143:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-21 02:04:16,221:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-21 02:04:16,221:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-21 02:04:16,221:INFO:setup() successfully completed in 1.31s...............
2025-02-21 02:04:16,227:INFO:Initializing compare_models()
2025-02-21 02:04:16,227:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000160CB471950>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000160CB471950>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2025-02-21 02:04:16,227:INFO:Checking exceptions
2025-02-21 02:04:16,227:INFO:Preparing display monitor
2025-02-21 02:04:16,232:INFO:Initializing Logistic Regression
2025-02-21 02:04:16,232:INFO:Total runtime is 0.0 minutes
2025-02-21 02:04:16,232:INFO:SubProcess create_model() called ==================================
2025-02-21 02:04:16,232:INFO:Initializing create_model()
2025-02-21 02:04:16,232:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000160CB471950>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000160CC6A0D90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-21 02:04:16,232:INFO:Checking exceptions
2025-02-21 02:04:16,232:INFO:Importing libraries
2025-02-21 02:04:16,232:INFO:Copying training dataset
2025-02-21 02:04:16,232:INFO:Defining folds
2025-02-21 02:04:16,232:INFO:Declaring metric variables
2025-02-21 02:04:16,232:INFO:Importing untrained model
2025-02-21 02:04:16,232:INFO:Logistic Regression Imported successfully
2025-02-21 02:04:16,232:INFO:Starting cross validation
2025-02-21 02:04:16,248:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-21 02:04:21,445:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:04:21,447:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:04:21,458:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:21,458:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:21,464:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:21,464:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:21,466:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:04:21,466:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-21 02:04:21,468:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:21,468:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:21,480:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:21,484:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:21,487:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:04:21,489:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:21,492:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:21,498:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:21,503:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:21,518:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:04:21,524:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:21,527:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:04:21,529:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:21,534:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:21,551:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:21,565:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:21,569:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:21,577:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:04:21,581:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:21,587:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:21,590:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:21,620:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:04:21,626:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:21,628:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:21,632:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:21,646:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:04:21,648:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:04:21,648:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:21,651:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:21,651:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:21,651:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:21,651:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:21,656:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:21,667:INFO:Calculating mean and std
2025-02-21 02:04:21,671:INFO:Creating metrics dataframe
2025-02-21 02:04:21,677:INFO:Uploading results into container
2025-02-21 02:04:21,677:INFO:Uploading model into container now
2025-02-21 02:04:21,677:INFO:_master_model_container: 1
2025-02-21 02:04:21,677:INFO:_display_container: 2
2025-02-21 02:04:21,677:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-02-21 02:04:21,677:INFO:create_model() successfully completed......................................
2025-02-21 02:04:21,828:INFO:SubProcess create_model() end ==================================
2025-02-21 02:04:21,830:INFO:Creating metrics dataframe
2025-02-21 02:04:21,844:INFO:Initializing K Neighbors Classifier
2025-02-21 02:04:21,844:INFO:Total runtime is 0.09353198607762654 minutes
2025-02-21 02:04:21,844:INFO:SubProcess create_model() called ==================================
2025-02-21 02:04:21,846:INFO:Initializing create_model()
2025-02-21 02:04:21,846:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000160CB471950>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000160CC6A0D90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-21 02:04:21,846:INFO:Checking exceptions
2025-02-21 02:04:21,846:INFO:Importing libraries
2025-02-21 02:04:21,846:INFO:Copying training dataset
2025-02-21 02:04:21,856:INFO:Defining folds
2025-02-21 02:04:21,856:INFO:Declaring metric variables
2025-02-21 02:04:21,856:INFO:Importing untrained model
2025-02-21 02:04:21,856:INFO:K Neighbors Classifier Imported successfully
2025-02-21 02:04:21,856:INFO:Starting cross validation
2025-02-21 02:04:21,888:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-21 02:04:23,402:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:23,407:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:23,410:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:23,604:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:23,608:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:23,611:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:23,646:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:23,651:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:23,656:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:23,677:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:23,681:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:23,688:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:26,720:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:26,723:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:26,727:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:26,729:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:26,733:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:26,735:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:26,828:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:26,836:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:26,840:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:26,842:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:26,847:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:26,853:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:26,880:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:26,889:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:26,895:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:27,019:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:27,029:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:27,029:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:27,059:INFO:Calculating mean and std
2025-02-21 02:04:27,063:INFO:Creating metrics dataframe
2025-02-21 02:04:27,075:INFO:Uploading results into container
2025-02-21 02:04:27,075:INFO:Uploading model into container now
2025-02-21 02:04:27,075:INFO:_master_model_container: 2
2025-02-21 02:04:27,075:INFO:_display_container: 2
2025-02-21 02:04:27,079:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-02-21 02:04:27,079:INFO:create_model() successfully completed......................................
2025-02-21 02:04:27,249:INFO:SubProcess create_model() end ==================================
2025-02-21 02:04:27,249:INFO:Creating metrics dataframe
2025-02-21 02:04:27,265:INFO:Initializing Naive Bayes
2025-02-21 02:04:27,265:INFO:Total runtime is 0.18388693730036418 minutes
2025-02-21 02:04:27,265:INFO:SubProcess create_model() called ==================================
2025-02-21 02:04:27,265:INFO:Initializing create_model()
2025-02-21 02:04:27,265:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000160CB471950>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000160CC6A0D90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-21 02:04:27,265:INFO:Checking exceptions
2025-02-21 02:04:27,265:INFO:Importing libraries
2025-02-21 02:04:27,265:INFO:Copying training dataset
2025-02-21 02:04:27,288:INFO:Defining folds
2025-02-21 02:04:27,288:INFO:Declaring metric variables
2025-02-21 02:04:27,288:INFO:Importing untrained model
2025-02-21 02:04:27,290:INFO:Naive Bayes Imported successfully
2025-02-21 02:04:27,290:INFO:Starting cross validation
2025-02-21 02:04:27,329:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-21 02:04:28,127:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:28,133:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:28,141:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:28,147:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:28,153:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:28,159:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:28,163:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:28,169:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:28,175:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:28,177:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:28,185:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:28,191:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:28,191:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:28,197:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:28,203:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:28,244:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:28,250:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:28,257:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:28,259:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:28,266:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:28,273:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:28,280:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:28,285:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:28,291:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:28,295:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:28,299:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:28,305:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:28,305:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:28,309:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:28,315:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:28,325:INFO:Calculating mean and std
2025-02-21 02:04:28,327:INFO:Creating metrics dataframe
2025-02-21 02:04:28,333:INFO:Uploading results into container
2025-02-21 02:04:28,335:INFO:Uploading model into container now
2025-02-21 02:04:28,335:INFO:_master_model_container: 3
2025-02-21 02:04:28,335:INFO:_display_container: 2
2025-02-21 02:04:28,337:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-02-21 02:04:28,337:INFO:create_model() successfully completed......................................
2025-02-21 02:04:28,485:INFO:SubProcess create_model() end ==================================
2025-02-21 02:04:28,485:INFO:Creating metrics dataframe
2025-02-21 02:04:28,500:INFO:Initializing Decision Tree Classifier
2025-02-21 02:04:28,502:INFO:Total runtime is 0.20450446208318074 minutes
2025-02-21 02:04:28,502:INFO:SubProcess create_model() called ==================================
2025-02-21 02:04:28,502:INFO:Initializing create_model()
2025-02-21 02:04:28,502:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000160CB471950>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000160CC6A0D90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-21 02:04:28,502:INFO:Checking exceptions
2025-02-21 02:04:28,502:INFO:Importing libraries
2025-02-21 02:04:28,502:INFO:Copying training dataset
2025-02-21 02:04:28,512:INFO:Defining folds
2025-02-21 02:04:28,512:INFO:Declaring metric variables
2025-02-21 02:04:28,512:INFO:Importing untrained model
2025-02-21 02:04:28,514:INFO:Decision Tree Classifier Imported successfully
2025-02-21 02:04:28,514:INFO:Starting cross validation
2025-02-21 02:04:28,550:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-21 02:04:29,370:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:29,376:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:29,382:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:29,382:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:29,386:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:29,396:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:29,402:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:29,408:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:29,416:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:29,446:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:29,452:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:29,458:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:29,460:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:29,466:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:29,472:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:29,478:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:29,478:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:29,480:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:29,485:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:29,485:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:29,487:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:29,491:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:29,491:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:29,493:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:29,500:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:29,506:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:29,511:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:29,549:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:29,552:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:29,552:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:29,570:INFO:Calculating mean and std
2025-02-21 02:04:29,570:INFO:Creating metrics dataframe
2025-02-21 02:04:29,578:INFO:Uploading results into container
2025-02-21 02:04:29,580:INFO:Uploading model into container now
2025-02-21 02:04:29,580:INFO:_master_model_container: 4
2025-02-21 02:04:29,580:INFO:_display_container: 2
2025-02-21 02:04:29,580:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best')
2025-02-21 02:04:29,580:INFO:create_model() successfully completed......................................
2025-02-21 02:04:29,722:INFO:SubProcess create_model() end ==================================
2025-02-21 02:04:29,722:INFO:Creating metrics dataframe
2025-02-21 02:04:29,739:INFO:Initializing SVM - Linear Kernel
2025-02-21 02:04:29,739:INFO:Total runtime is 0.22511123816172282 minutes
2025-02-21 02:04:29,739:INFO:SubProcess create_model() called ==================================
2025-02-21 02:04:29,739:INFO:Initializing create_model()
2025-02-21 02:04:29,739:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000160CB471950>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000160CC6A0D90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-21 02:04:29,739:INFO:Checking exceptions
2025-02-21 02:04:29,741:INFO:Importing libraries
2025-02-21 02:04:29,741:INFO:Copying training dataset
2025-02-21 02:04:29,741:INFO:Defining folds
2025-02-21 02:04:29,741:INFO:Declaring metric variables
2025-02-21 02:04:29,741:INFO:Importing untrained model
2025-02-21 02:04:29,752:INFO:SVM - Linear Kernel Imported successfully
2025-02-21 02:04:29,752:INFO:Starting cross validation
2025-02-21 02:04:29,780:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-21 02:04:30,628:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:04:30,635:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:30,643:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:30,651:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:30,658:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:04:30,658:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:04:30,662:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:30,669:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:30,671:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:30,674:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:30,676:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-21 02:04:30,680:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:30,680:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:30,685:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:04:30,690:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:30,696:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:30,698:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:04:30,700:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-21 02:04:30,702:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:30,702:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:30,708:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:30,708:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:04:30,710:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-21 02:04:30,711:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:30,713:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:30,718:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:30,720:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-21 02:04:30,725:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:30,745:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:04:30,749:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:30,755:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:30,757:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:04:30,757:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-21 02:04:30,761:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:30,761:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:30,767:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:30,774:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:30,796:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:04:30,798:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:30,804:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:30,808:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:30,816:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:04:30,818:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:30,824:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:30,827:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:30,856:INFO:Calculating mean and std
2025-02-21 02:04:30,856:INFO:Creating metrics dataframe
2025-02-21 02:04:30,867:INFO:Uploading results into container
2025-02-21 02:04:30,867:INFO:Uploading model into container now
2025-02-21 02:04:30,867:INFO:_master_model_container: 5
2025-02-21 02:04:30,867:INFO:_display_container: 2
2025-02-21 02:04:30,867:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=42, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-02-21 02:04:30,867:INFO:create_model() successfully completed......................................
2025-02-21 02:04:31,020:INFO:SubProcess create_model() end ==================================
2025-02-21 02:04:31,020:INFO:Creating metrics dataframe
2025-02-21 02:04:31,034:INFO:Initializing Ridge Classifier
2025-02-21 02:04:31,034:INFO:Total runtime is 0.24669194221496582 minutes
2025-02-21 02:04:31,034:INFO:SubProcess create_model() called ==================================
2025-02-21 02:04:31,034:INFO:Initializing create_model()
2025-02-21 02:04:31,034:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000160CB471950>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000160CC6A0D90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-21 02:04:31,034:INFO:Checking exceptions
2025-02-21 02:04:31,034:INFO:Importing libraries
2025-02-21 02:04:31,034:INFO:Copying training dataset
2025-02-21 02:04:31,048:INFO:Defining folds
2025-02-21 02:04:31,048:INFO:Declaring metric variables
2025-02-21 02:04:31,049:INFO:Importing untrained model
2025-02-21 02:04:31,049:INFO:Ridge Classifier Imported successfully
2025-02-21 02:04:31,049:INFO:Starting cross validation
2025-02-21 02:04:31,079:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-21 02:04:31,868:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:04:31,870:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:31,876:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:31,878:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-21 02:04:31,882:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:31,906:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:04:31,908:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:31,915:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:31,917:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-21 02:04:31,921:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:31,943:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:04:31,946:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:31,953:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:31,953:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:04:31,958:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:31,958:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:31,964:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:31,966:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-21 02:04:31,974:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:31,999:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:04:32,003:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:32,008:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:32,011:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-21 02:04:32,014:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:32,029:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:04:32,029:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:04:32,031:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:32,031:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:32,035:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:04:32,037:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:32,037:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:32,037:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:32,040:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-21 02:04:32,040:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-21 02:04:32,042:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:32,045:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:32,045:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-21 02:04:32,049:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:32,061:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:04:32,065:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:32,069:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:32,073:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-21 02:04:32,077:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:32,103:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:04:32,107:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:32,110:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:32,112:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-21 02:04:32,114:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:32,129:INFO:Calculating mean and std
2025-02-21 02:04:32,131:INFO:Creating metrics dataframe
2025-02-21 02:04:32,137:INFO:Uploading results into container
2025-02-21 02:04:32,139:INFO:Uploading model into container now
2025-02-21 02:04:32,139:INFO:_master_model_container: 6
2025-02-21 02:04:32,139:INFO:_display_container: 2
2025-02-21 02:04:32,141:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=42, solver='auto',
                tol=0.0001)
2025-02-21 02:04:32,141:INFO:create_model() successfully completed......................................
2025-02-21 02:04:32,278:INFO:SubProcess create_model() end ==================================
2025-02-21 02:04:32,278:INFO:Creating metrics dataframe
2025-02-21 02:04:32,291:INFO:Initializing Random Forest Classifier
2025-02-21 02:04:32,291:INFO:Total runtime is 0.267653218905131 minutes
2025-02-21 02:04:32,291:INFO:SubProcess create_model() called ==================================
2025-02-21 02:04:32,291:INFO:Initializing create_model()
2025-02-21 02:04:32,291:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000160CB471950>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000160CC6A0D90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-21 02:04:32,291:INFO:Checking exceptions
2025-02-21 02:04:32,291:INFO:Importing libraries
2025-02-21 02:04:32,291:INFO:Copying training dataset
2025-02-21 02:04:32,304:INFO:Defining folds
2025-02-21 02:04:32,304:INFO:Declaring metric variables
2025-02-21 02:04:32,304:INFO:Importing untrained model
2025-02-21 02:04:32,304:INFO:Random Forest Classifier Imported successfully
2025-02-21 02:04:32,304:INFO:Starting cross validation
2025-02-21 02:04:32,343:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-21 02:04:33,638:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:33,646:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:33,653:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:33,656:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:33,664:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:33,671:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:33,689:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:33,698:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:33,703:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:33,704:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:33,712:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:33,718:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:33,759:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:33,763:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:33,769:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:33,773:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:33,782:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:33,791:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:33,826:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:33,833:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:33,833:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:33,842:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:33,842:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:33,847:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:33,891:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:33,901:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:33,910:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:33,910:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:33,923:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:33,933:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:33,956:INFO:Calculating mean and std
2025-02-21 02:04:33,956:INFO:Creating metrics dataframe
2025-02-21 02:04:33,964:INFO:Uploading results into container
2025-02-21 02:04:33,964:INFO:Uploading model into container now
2025-02-21 02:04:33,964:INFO:_master_model_container: 7
2025-02-21 02:04:33,964:INFO:_display_container: 2
2025-02-21 02:04:33,964:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2025-02-21 02:04:33,964:INFO:create_model() successfully completed......................................
2025-02-21 02:04:34,115:INFO:SubProcess create_model() end ==================================
2025-02-21 02:04:34,123:INFO:Creating metrics dataframe
2025-02-21 02:04:34,140:INFO:Initializing Quadratic Discriminant Analysis
2025-02-21 02:04:34,140:INFO:Total runtime is 0.2984644452730814 minutes
2025-02-21 02:04:34,140:INFO:SubProcess create_model() called ==================================
2025-02-21 02:04:34,142:INFO:Initializing create_model()
2025-02-21 02:04:34,142:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000160CB471950>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000160CC6A0D90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-21 02:04:34,142:INFO:Checking exceptions
2025-02-21 02:04:34,142:INFO:Importing libraries
2025-02-21 02:04:34,142:INFO:Copying training dataset
2025-02-21 02:04:34,142:INFO:Defining folds
2025-02-21 02:04:34,142:INFO:Declaring metric variables
2025-02-21 02:04:34,142:INFO:Importing untrained model
2025-02-21 02:04:34,154:INFO:Quadratic Discriminant Analysis Imported successfully
2025-02-21 02:04:34,154:INFO:Starting cross validation
2025-02-21 02:04:34,175:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-21 02:04:34,974:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:04:34,976:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:34,982:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:34,988:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:35,000:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:04:35,002:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:35,008:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:35,015:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:35,027:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:04:35,029:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:35,035:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:35,041:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:35,047:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:04:35,049:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:35,053:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:35,060:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:35,072:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:04:35,076:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:35,083:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:35,088:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:35,106:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:04:35,109:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:35,116:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:35,122:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:35,128:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:04:35,132:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:35,139:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:35,145:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:35,160:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:04:35,160:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:04:35,163:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:35,164:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:35,168:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:35,174:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:35,174:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:35,199:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:04:35,201:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:35,205:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:35,210:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:35,225:INFO:Calculating mean and std
2025-02-21 02:04:35,227:INFO:Creating metrics dataframe
2025-02-21 02:04:35,232:INFO:Uploading results into container
2025-02-21 02:04:35,234:INFO:Uploading model into container now
2025-02-21 02:04:35,234:INFO:_master_model_container: 8
2025-02-21 02:04:35,234:INFO:_display_container: 2
2025-02-21 02:04:35,234:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-02-21 02:04:35,234:INFO:create_model() successfully completed......................................
2025-02-21 02:04:35,361:INFO:SubProcess create_model() end ==================================
2025-02-21 02:04:35,361:INFO:Creating metrics dataframe
2025-02-21 02:04:35,377:INFO:Initializing Ada Boost Classifier
2025-02-21 02:04:35,377:INFO:Total runtime is 0.31907760699590043 minutes
2025-02-21 02:04:35,377:INFO:SubProcess create_model() called ==================================
2025-02-21 02:04:35,377:INFO:Initializing create_model()
2025-02-21 02:04:35,377:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000160CB471950>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000160CC6A0D90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-21 02:04:35,377:INFO:Checking exceptions
2025-02-21 02:04:35,377:INFO:Importing libraries
2025-02-21 02:04:35,377:INFO:Copying training dataset
2025-02-21 02:04:35,393:INFO:Defining folds
2025-02-21 02:04:35,393:INFO:Declaring metric variables
2025-02-21 02:04:35,393:INFO:Importing untrained model
2025-02-21 02:04:35,393:INFO:Ada Boost Classifier Imported successfully
2025-02-21 02:04:35,393:INFO:Starting cross validation
2025-02-21 02:04:35,434:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-21 02:04:36,184:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-21 02:04:36,239:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-21 02:04:36,241:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-21 02:04:36,271:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-21 02:04:36,288:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-21 02:04:36,344:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-21 02:04:36,447:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-21 02:04:36,462:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:04:36,466:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:36,475:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:36,477:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-21 02:04:36,481:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:36,527:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:04:36,531:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:36,535:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:04:36,539:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:36,541:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:36,543:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-21 02:04:36,545:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:36,547:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:36,551:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-21 02:04:36,554:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:36,566:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:04:36,570:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:36,576:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:04:36,576:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:36,584:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:36,588:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:36,590:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:36,595:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:36,618:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-21 02:04:36,637:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-21 02:04:36,649:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:04:36,651:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:36,657:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:36,664:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:36,710:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:04:36,712:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:36,719:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:36,726:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:36,751:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:04:36,757:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:36,763:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:36,769:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:36,880:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:04:36,884:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:36,894:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:36,899:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:04:36,901:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:36,903:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:36,909:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:36,919:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:36,940:INFO:Calculating mean and std
2025-02-21 02:04:36,940:INFO:Creating metrics dataframe
2025-02-21 02:04:36,952:INFO:Uploading results into container
2025-02-21 02:04:36,954:INFO:Uploading model into container now
2025-02-21 02:04:36,956:INFO:_master_model_container: 9
2025-02-21 02:04:36,956:INFO:_display_container: 2
2025-02-21 02:04:36,956:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=42)
2025-02-21 02:04:36,956:INFO:create_model() successfully completed......................................
2025-02-21 02:04:37,099:INFO:SubProcess create_model() end ==================================
2025-02-21 02:04:37,099:INFO:Creating metrics dataframe
2025-02-21 02:04:37,114:INFO:Initializing Gradient Boosting Classifier
2025-02-21 02:04:37,114:INFO:Total runtime is 0.3480368177096049 minutes
2025-02-21 02:04:37,114:INFO:SubProcess create_model() called ==================================
2025-02-21 02:04:37,114:INFO:Initializing create_model()
2025-02-21 02:04:37,114:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000160CB471950>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000160CC6A0D90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-21 02:04:37,114:INFO:Checking exceptions
2025-02-21 02:04:37,114:INFO:Importing libraries
2025-02-21 02:04:37,114:INFO:Copying training dataset
2025-02-21 02:04:37,114:INFO:Defining folds
2025-02-21 02:04:37,114:INFO:Declaring metric variables
2025-02-21 02:04:37,114:INFO:Importing untrained model
2025-02-21 02:04:37,114:INFO:Gradient Boosting Classifier Imported successfully
2025-02-21 02:04:37,114:INFO:Starting cross validation
2025-02-21 02:04:37,146:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-21 02:04:38,760:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:04:38,764:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:38,771:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:38,777:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:04:38,777:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:38,780:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:38,786:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:38,790:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:04:38,792:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:38,794:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:38,799:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:38,805:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:38,837:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:04:38,841:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:38,847:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:38,853:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:04:38,853:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:38,857:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:38,863:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:38,870:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:38,877:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:04:38,881:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:38,886:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:38,892:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:39,297:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:04:39,297:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:39,302:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:39,305:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:39,318:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:04:39,318:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:39,326:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:39,326:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:04:39,326:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:39,326:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:39,336:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:39,336:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:39,378:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:04:39,382:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:39,382:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:39,388:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:39,399:INFO:Calculating mean and std
2025-02-21 02:04:39,399:INFO:Creating metrics dataframe
2025-02-21 02:04:39,399:INFO:Uploading results into container
2025-02-21 02:04:39,399:INFO:Uploading model into container now
2025-02-21 02:04:39,399:INFO:_master_model_container: 10
2025-02-21 02:04:39,399:INFO:_display_container: 2
2025-02-21 02:04:39,399:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-02-21 02:04:39,399:INFO:create_model() successfully completed......................................
2025-02-21 02:04:39,525:INFO:SubProcess create_model() end ==================================
2025-02-21 02:04:39,525:INFO:Creating metrics dataframe
2025-02-21 02:04:39,549:INFO:Initializing Linear Discriminant Analysis
2025-02-21 02:04:39,549:INFO:Total runtime is 0.38860922654469804 minutes
2025-02-21 02:04:39,549:INFO:SubProcess create_model() called ==================================
2025-02-21 02:04:39,549:INFO:Initializing create_model()
2025-02-21 02:04:39,549:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000160CB471950>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000160CC6A0D90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-21 02:04:39,549:INFO:Checking exceptions
2025-02-21 02:04:39,549:INFO:Importing libraries
2025-02-21 02:04:39,549:INFO:Copying training dataset
2025-02-21 02:04:39,557:INFO:Defining folds
2025-02-21 02:04:39,557:INFO:Declaring metric variables
2025-02-21 02:04:39,557:INFO:Importing untrained model
2025-02-21 02:04:39,557:INFO:Linear Discriminant Analysis Imported successfully
2025-02-21 02:04:39,557:INFO:Starting cross validation
2025-02-21 02:04:39,587:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-21 02:04:40,421:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:04:40,423:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:40,431:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:40,441:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:40,441:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:04:40,443:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:04:40,445:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:40,447:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:40,451:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:40,453:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:40,457:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:40,459:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:40,475:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:04:40,477:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:40,483:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:40,483:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:04:40,487:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:40,492:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:40,494:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:40,498:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:40,532:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:04:40,536:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:40,540:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:40,546:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:40,548:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:04:40,552:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:40,558:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:40,563:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:40,567:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:04:40,569:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:40,574:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:40,581:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:40,581:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:04:40,585:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:40,590:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:04:40,590:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:40,592:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:40,596:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:40,596:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:40,601:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:40,620:INFO:Calculating mean and std
2025-02-21 02:04:40,622:INFO:Creating metrics dataframe
2025-02-21 02:04:40,628:INFO:Uploading results into container
2025-02-21 02:04:40,628:INFO:Uploading model into container now
2025-02-21 02:04:40,630:INFO:_master_model_container: 11
2025-02-21 02:04:40,630:INFO:_display_container: 2
2025-02-21 02:04:40,630:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-02-21 02:04:40,630:INFO:create_model() successfully completed......................................
2025-02-21 02:04:40,733:INFO:SubProcess create_model() end ==================================
2025-02-21 02:04:40,733:INFO:Creating metrics dataframe
2025-02-21 02:04:40,749:INFO:Initializing Extra Trees Classifier
2025-02-21 02:04:40,749:INFO:Total runtime is 0.4086129268010457 minutes
2025-02-21 02:04:40,749:INFO:SubProcess create_model() called ==================================
2025-02-21 02:04:40,749:INFO:Initializing create_model()
2025-02-21 02:04:40,749:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000160CB471950>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000160CC6A0D90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-21 02:04:40,749:INFO:Checking exceptions
2025-02-21 02:04:40,749:INFO:Importing libraries
2025-02-21 02:04:40,749:INFO:Copying training dataset
2025-02-21 02:04:40,765:INFO:Defining folds
2025-02-21 02:04:40,765:INFO:Declaring metric variables
2025-02-21 02:04:40,765:INFO:Importing untrained model
2025-02-21 02:04:40,765:INFO:Extra Trees Classifier Imported successfully
2025-02-21 02:04:40,765:INFO:Starting cross validation
2025-02-21 02:04:40,796:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-21 02:04:42,262:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:42,262:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:42,262:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:42,273:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:42,273:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:42,275:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:42,279:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:42,281:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:42,283:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:42,301:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:42,308:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:42,319:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:42,377:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:42,390:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:42,397:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:42,424:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:42,433:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:42,437:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:42,501:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:42,511:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:42,513:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:42,519:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:42,523:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:42,531:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:42,571:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:42,581:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:42,587:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:42,602:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:42,612:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:42,612:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:42,643:INFO:Calculating mean and std
2025-02-21 02:04:42,645:INFO:Creating metrics dataframe
2025-02-21 02:04:42,655:INFO:Uploading results into container
2025-02-21 02:04:42,656:INFO:Uploading model into container now
2025-02-21 02:04:42,656:INFO:_master_model_container: 12
2025-02-21 02:04:42,658:INFO:_display_container: 2
2025-02-21 02:04:42,658:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False)
2025-02-21 02:04:42,658:INFO:create_model() successfully completed......................................
2025-02-21 02:04:42,794:INFO:SubProcess create_model() end ==================================
2025-02-21 02:04:42,796:INFO:Creating metrics dataframe
2025-02-21 02:04:42,808:INFO:Initializing Light Gradient Boosting Machine
2025-02-21 02:04:42,810:INFO:Total runtime is 0.44297131697336833 minutes
2025-02-21 02:04:42,810:INFO:SubProcess create_model() called ==================================
2025-02-21 02:04:42,810:INFO:Initializing create_model()
2025-02-21 02:04:42,810:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000160CB471950>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000160CC6A0D90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-21 02:04:42,810:INFO:Checking exceptions
2025-02-21 02:04:42,810:INFO:Importing libraries
2025-02-21 02:04:42,810:INFO:Copying training dataset
2025-02-21 02:04:42,820:INFO:Defining folds
2025-02-21 02:04:42,820:INFO:Declaring metric variables
2025-02-21 02:04:42,820:INFO:Importing untrained model
2025-02-21 02:04:42,820:INFO:Light Gradient Boosting Machine Imported successfully
2025-02-21 02:04:42,820:INFO:Starting cross validation
2025-02-21 02:04:42,844:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-21 02:04:44,739:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:44,745:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:44,755:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:44,810:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:44,814:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:44,829:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:44,846:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:44,851:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:44,858:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:44,888:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:44,895:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:44,897:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-21 02:04:44,901:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:44,905:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:44,911:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:44,915:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:44,921:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:44,921:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:44,925:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:44,974:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:44,982:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:44,987:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:44,987:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:44,991:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:44,997:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:45,005:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:45,012:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:45,018:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:45,078:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:45,084:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:45,088:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:45,098:INFO:Calculating mean and std
2025-02-21 02:04:45,100:INFO:Creating metrics dataframe
2025-02-21 02:04:45,106:INFO:Uploading results into container
2025-02-21 02:04:45,108:INFO:Uploading model into container now
2025-02-21 02:04:45,108:INFO:_master_model_container: 13
2025-02-21 02:04:45,108:INFO:_display_container: 2
2025-02-21 02:04:45,109:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-02-21 02:04:45,109:INFO:create_model() successfully completed......................................
2025-02-21 02:04:45,219:INFO:SubProcess create_model() end ==================================
2025-02-21 02:04:45,219:INFO:Creating metrics dataframe
2025-02-21 02:04:45,235:INFO:Initializing Dummy Classifier
2025-02-21 02:04:45,235:INFO:Total runtime is 0.4833898107210795 minutes
2025-02-21 02:04:45,235:INFO:SubProcess create_model() called ==================================
2025-02-21 02:04:45,235:INFO:Initializing create_model()
2025-02-21 02:04:45,235:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000160CB471950>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000160CC6A0D90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-21 02:04:45,235:INFO:Checking exceptions
2025-02-21 02:04:45,235:INFO:Importing libraries
2025-02-21 02:04:45,235:INFO:Copying training dataset
2025-02-21 02:04:45,235:INFO:Defining folds
2025-02-21 02:04:45,235:INFO:Declaring metric variables
2025-02-21 02:04:45,235:INFO:Importing untrained model
2025-02-21 02:04:45,235:INFO:Dummy Classifier Imported successfully
2025-02-21 02:04:45,235:INFO:Starting cross validation
2025-02-21 02:04:45,251:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-21 02:04:46,306:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:46,312:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:46,314:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-21 02:04:46,318:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:46,343:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:46,349:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:46,350:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-21 02:04:46,354:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:46,395:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:46,400:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:46,402:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-21 02:04:46,407:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:46,430:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:46,437:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:46,440:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-21 02:04:46,442:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:46,450:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:46,456:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:46,458:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-21 02:04:46,466:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:46,468:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:46,474:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:46,476:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-21 02:04:46,479:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:46,489:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:46,495:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:46,497:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-21 02:04:46,501:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:46,521:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:46,525:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:46,527:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-21 02:04:46,531:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:46,535:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:46,539:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:46,541:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:46,541:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-21 02:04:46,545:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:46,545:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:46,548:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-21 02:04:46,552:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:46,570:INFO:Calculating mean and std
2025-02-21 02:04:46,572:INFO:Creating metrics dataframe
2025-02-21 02:04:46,578:INFO:Uploading results into container
2025-02-21 02:04:46,579:INFO:Uploading model into container now
2025-02-21 02:04:46,579:INFO:_master_model_container: 14
2025-02-21 02:04:46,579:INFO:_display_container: 2
2025-02-21 02:04:46,579:INFO:DummyClassifier(constant=None, random_state=42, strategy='prior')
2025-02-21 02:04:46,579:INFO:create_model() successfully completed......................................
2025-02-21 02:04:46,721:INFO:SubProcess create_model() end ==================================
2025-02-21 02:04:46,721:INFO:Creating metrics dataframe
2025-02-21 02:04:46,740:INFO:Initializing create_model()
2025-02-21 02:04:46,740:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000160CB471950>, estimator=AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=42), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-21 02:04:46,740:INFO:Checking exceptions
2025-02-21 02:04:46,740:INFO:Importing libraries
2025-02-21 02:04:46,740:INFO:Copying training dataset
2025-02-21 02:04:46,740:INFO:Defining folds
2025-02-21 02:04:46,753:INFO:Declaring metric variables
2025-02-21 02:04:46,753:INFO:Importing untrained model
2025-02-21 02:04:46,753:INFO:Declaring custom model
2025-02-21 02:04:46,753:INFO:Ada Boost Classifier Imported successfully
2025-02-21 02:04:46,775:INFO:Cross validation set to False
2025-02-21 02:04:46,777:INFO:Fitting Model
2025-02-21 02:04:46,912:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.004099 seconds.
2025-02-21 02:04:46,912:INFO:You can set `force_row_wise=true` to remove the overhead.
2025-02-21 02:04:46,927:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2025-02-21 02:04:46,927:INFO:[LightGBM] [Info] Total Bins 264
2025-02-21 02:04:46,927:INFO:[LightGBM] [Info] Number of data points in the train set: 111, number of used features: 7
2025-02-21 02:04:46,927:INFO:[LightGBM] [Info] Start training from score -1.098612
2025-02-21 02:04:46,927:INFO:[LightGBM] [Info] Start training from score -1.071944
2025-02-21 02:04:46,927:INFO:[LightGBM] [Info] Start training from score -1.126011
2025-02-21 02:04:46,927:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:46,927:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:46,927:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:46,943:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:46,943:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:46,960:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:46,960:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:46,960:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:46,960:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:46,960:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:46,960:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:46,960:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:46,960:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:46,960:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:46,960:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:46,960:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:46,960:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:46,960:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:46,960:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:46,960:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:46,960:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:46,960:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:46,960:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:46,968:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:46,968:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:46,968:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:46,968:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:46,968:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:46,968:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:46,968:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:46,968:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:46,968:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:46,968:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:46,968:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:46,968:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:46,968:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:46,968:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:46,968:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:46,974:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:46,974:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:46,974:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:46,974:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:46,974:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:46,976:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:46,976:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:46,976:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:46,976:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:46,976:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:46,976:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:46,976:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:46,976:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:46,976:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:46,976:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:46,976:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:46,976:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:46,976:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:46,976:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:46,976:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:46,976:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:46,976:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:46,976:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:46,984:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:46,984:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:46,984:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:46,984:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:46,984:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:46,984:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:46,984:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:46,984:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:46,984:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:46,984:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:46,984:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:46,984:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:46,984:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:46,984:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:46,984:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:46,984:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:46,984:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:46,984:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:46,984:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:46,984:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:46,992:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:46,992:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:46,992:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:46,992:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:46,992:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:46,992:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:46,992:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:46,992:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:46,992:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:46,992:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:46,992:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:46,992:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:46,992:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:46,992:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:46,992:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:46,992:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:46,992:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:46,992:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:46,992:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:46,992:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:46,992:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:46,992:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:46,992:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:46,992:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:46,992:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:46,992:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:46,992:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:46,992:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:46,992:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:46,992:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:46,992:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:46,992:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:46,992:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:46,992:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:46,992:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:46,992:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:46,992:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:46,992:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:46,992:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:46,992:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:46,992:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:46,992:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:46,992:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,007:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,023:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,039:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,055:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,055:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,071:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,071:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,071:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,086:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,086:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,086:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,102:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,102:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,102:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,102:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,102:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,102:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,102:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,108:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,108:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,108:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,108:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,108:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,108:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,108:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,108:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,108:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,108:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,108:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,108:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,108:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,108:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,108:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,108:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,108:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,108:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,108:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,118:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,118:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,118:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,118:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,118:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,118:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,118:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,118:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,118:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,118:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,118:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,118:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,118:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,118:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,118:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,118:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,118:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,118:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,118:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,118:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,118:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,118:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,118:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,118:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,118:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,118:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,118:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,118:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,118:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,134:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,134:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,134:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,134:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,134:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,134:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,134:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,134:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,134:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,134:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,134:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,134:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,134:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,134:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,134:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,134:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,134:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,134:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,134:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,134:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,134:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,134:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,134:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,134:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,134:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,134:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,134:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,134:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,134:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,134:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,134:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,134:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,134:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,134:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,134:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,134:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,134:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,134:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,149:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,149:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,149:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,149:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,149:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,149:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,149:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,149:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,149:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,149:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,149:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,149:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,149:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,149:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,149:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,149:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,149:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,149:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,149:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,149:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,149:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,149:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,149:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,149:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,149:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,149:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,149:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,149:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,149:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,149:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,149:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,149:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,149:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,149:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,149:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,149:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,165:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,165:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,165:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,165:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,165:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,165:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,165:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,165:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,165:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,165:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,165:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,165:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,165:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,165:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,165:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,165:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,165:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,165:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,165:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,165:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,165:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,165:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,165:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,165:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,165:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,165:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,165:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,165:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,165:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,165:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,165:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,165:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,165:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,165:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,165:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,165:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:04:47,208:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-21 02:04:47,357:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=42)
2025-02-21 02:04:47,357:INFO:create_model() successfully completed......................................
2025-02-21 02:04:47,554:INFO:_master_model_container: 14
2025-02-21 02:04:47,554:INFO:_display_container: 2
2025-02-21 02:04:47,554:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=42)
2025-02-21 02:04:47,554:INFO:compare_models() successfully completed......................................
2025-02-21 02:04:47,554:INFO:Initializing evaluate_model()
2025-02-21 02:04:47,554:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000160CB471950>, estimator=AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=42), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2025-02-21 02:04:47,570:INFO:Initializing plot_model()
2025-02-21 02:04:47,570:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000160CB471950>, estimator=AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=42), plot=pipeline, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2025-02-21 02:04:47,570:INFO:Checking exceptions
2025-02-21 02:04:47,570:INFO:Preloading libraries
2025-02-21 02:04:47,590:INFO:Copying training dataset
2025-02-21 02:04:47,590:INFO:Plot type: pipeline
2025-02-21 02:04:48,070:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py:582: UserWarning: Matplotlib is currently using agg, which is a non-GUI backend, so cannot show the figure.
  plt.show()

2025-02-21 02:04:48,070:INFO:Visual Rendered Successfully
2025-02-21 02:04:48,213:INFO:plot_model() successfully completed......................................
2025-02-21 02:04:48,221:INFO:Initializing plot_model()
2025-02-21 02:04:48,221:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000160CB471950>, estimator=AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=42), plot=confusion_matrix, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2025-02-21 02:04:48,221:INFO:Checking exceptions
2025-02-21 02:04:48,229:INFO:Preloading libraries
2025-02-21 02:04:48,232:INFO:Copying training dataset
2025-02-21 02:04:48,232:INFO:Plot type: confusion_matrix
2025-02-21 02:04:48,545:INFO:Fitting Model
2025-02-21 02:04:48,545:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but AdaBoostClassifier was fitted with feature names
  warnings.warn(

2025-02-21 02:04:48,545:INFO:Scoring test/hold-out set
2025-02-21 02:04:48,601:INFO:Saving 'Confusion Matrix.png'
2025-02-21 02:04:49,028:INFO:Visual Rendered Successfully
2025-02-21 02:04:49,179:INFO:plot_model() successfully completed......................................
2025-02-21 02:04:49,179:INFO:Initializing plot_model()
2025-02-21 02:04:49,179:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000160CB471950>, estimator=AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=42), plot=auc, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2025-02-21 02:04:49,179:INFO:Checking exceptions
2025-02-21 02:04:49,179:INFO:Preloading libraries
2025-02-21 02:04:49,195:INFO:Copying training dataset
2025-02-21 02:04:49,195:INFO:Plot type: auc
2025-02-21 02:04:49,494:INFO:Fitting Model
2025-02-21 02:04:49,494:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but AdaBoostClassifier was fitted with feature names
  warnings.warn(

2025-02-21 02:04:49,494:INFO:Scoring test/hold-out set
2025-02-21 02:04:49,557:INFO:Saving 'AUC.png'
2025-02-21 02:04:50,295:INFO:Visual Rendered Successfully
2025-02-21 02:04:50,421:INFO:plot_model() successfully completed......................................
2025-02-21 02:04:50,427:INFO:Initializing plot_model()
2025-02-21 02:04:50,427:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000160CB471950>, estimator=AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=42), plot=feature, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2025-02-21 02:04:50,427:INFO:Checking exceptions
2025-02-21 02:04:50,435:INFO:Preloading libraries
2025-02-21 02:04:50,446:INFO:Copying training dataset
2025-02-21 02:04:50,448:INFO:Plot type: feature
2025-02-21 02:04:50,448:WARNING:No coef_ found. Trying feature_importances_
2025-02-21 02:04:50,581:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py:1867: UserWarning: Matplotlib is currently using agg, which is a non-GUI backend, so cannot show the figure.
  plt.show()

2025-02-21 02:04:50,581:INFO:Visual Rendered Successfully
2025-02-21 02:04:50,684:INFO:plot_model() successfully completed......................................
2025-02-21 02:04:50,684:INFO:Initializing predict_model()
2025-02-21 02:04:50,684:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000160CB471950>, estimator=AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=42), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000160CCADC360>)
2025-02-21 02:04:50,684:INFO:Checking exceptions
2025-02-21 02:04:50,684:INFO:Preloading libraries
2025-02-21 02:04:50,889:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:50,889:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:50,889:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:04:51,111:INFO:Initializing save_model()
2025-02-21 02:04:51,114:INFO:save_model(model=AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=42), model_name=C:\Users\Jupyter Files Only\Downloads\mlops-assignment\xinrui\models\final_wheat_seeds_model, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\JUPYTE~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Area', 'Perimeter', 'Compactness',
                                             'Length', 'Width',
                                             'AsymmetryCoeff', 'Groove'],
                                    transformer=SimpleIm...
                                                                                         learning_rate=0.1,
                                                                                         max_depth=-1,
                                                                                         min_child_samples=20,
                                                                                         min_child_weight=0.001,
                                                                                         min_split_gain=0.0,
                                                                                         n_estimators=100,
                                                                                         n_jobs=None,
                                                                                         num_leaves=31,
                                                                                         objective=None,
                                                                                         random_state=None,
                                                                                         reg_alpha=0.0,
                                                                                         reg_lambda=0.0,
                                                                                         subsample=1.0,
                                                                                         subsample_for_bin=200000,
                                                                                         subsample_freq=0),
                                                                importance_getter='auto',
                                                                max_features=1,
                                                                norm_order=1,
                                                                prefit=False,
                                                                threshold=-inf)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-02-21 02:04:51,114:INFO:Adding model into prep_pipe
2025-02-21 02:04:51,216:INFO:C:\Users\Jupyter Files Only\Downloads\mlops-assignment\xinrui\models\final_wheat_seeds_model.pkl saved in current working directory
2025-02-21 02:04:51,240:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Area', 'Perimeter', 'Compactness',
                                             'Length', 'Width',
                                             'AsymmetryCoeff', 'Groove'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_va...
                                                                                         num_leaves=31,
                                                                                         objective=None,
                                                                                         random_state=None,
                                                                                         reg_alpha=0.0,
                                                                                         reg_lambda=0.0,
                                                                                         subsample=1.0,
                                                                                         subsample_for_bin=200000,
                                                                                         subsample_freq=0),
                                                                importance_getter='auto',
                                                                max_features=1,
                                                                norm_order=1,
                                                                prefit=False,
                                                                threshold=-inf))),
                ('trained_model',
                 AdaBoostClassifier(algorithm='SAMME.R', estimator=None,
                                    learning_rate=1.0, n_estimators=50,
                                    random_state=42))],
         verbose=False)
2025-02-21 02:04:51,240:INFO:save_model() successfully completed......................................
2025-02-21 02:30:44,901:INFO:PyCaret ClassificationExperiment
2025-02-21 02:30:44,901:INFO:Logging name: clf-default-name
2025-02-21 02:30:44,901:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-02-21 02:30:44,901:INFO:version 3.3.2
2025-02-21 02:30:44,901:INFO:Initializing setup()
2025-02-21 02:30:44,901:INFO:self.USI: 29b5
2025-02-21 02:30:44,901:INFO:self._variable_keys: {'_ml_usecase', 'logging_param', '_available_plots', 'y_test', 'target_param', 'seed', 'fold_shuffle_param', 'X', 'html_param', 'USI', 'fold_generator', 'y', 'idx', 'data', 'log_plots_param', 'exp_id', 'fold_groups_param', 'is_multiclass', 'n_jobs_param', 'y_train', 'gpu_param', 'memory', 'pipeline', 'fix_imbalance', 'X_train', 'X_test', 'gpu_n_jobs_param', 'exp_name_log'}
2025-02-21 02:30:44,901:INFO:Checking environment
2025-02-21 02:30:44,901:INFO:python_version: 3.11.11
2025-02-21 02:30:44,901:INFO:python_build: ('main', 'Dec 11 2024 16:34:19')
2025-02-21 02:30:44,901:INFO:machine: AMD64
2025-02-21 02:30:44,921:INFO:platform: Windows-10-10.0.26100-SP0
2025-02-21 02:30:44,921:INFO:Memory: svmem(total=16855433216, available=7711522816, percent=54.2, used=9143910400, free=7711522816)
2025-02-21 02:30:44,921:INFO:Physical Core: 10
2025-02-21 02:30:44,921:INFO:Logical Core: 16
2025-02-21 02:30:44,921:INFO:Checking libraries
2025-02-21 02:30:44,921:INFO:System:
2025-02-21 02:30:44,921:INFO:    python: 3.11.11 | packaged by Anaconda, Inc. | (main, Dec 11 2024, 16:34:19) [MSC v.1929 64 bit (AMD64)]
2025-02-21 02:30:44,921:INFO:executable: C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\python.exe
2025-02-21 02:30:44,921:INFO:   machine: Windows-10-10.0.26100-SP0
2025-02-21 02:30:44,921:INFO:PyCaret required dependencies:
2025-02-21 02:30:44,952:INFO:                 pip: 25.0
2025-02-21 02:30:44,952:INFO:          setuptools: 75.8.0
2025-02-21 02:30:44,952:INFO:             pycaret: 3.3.2
2025-02-21 02:30:44,955:INFO:             IPython: 8.32.0
2025-02-21 02:30:44,955:INFO:          ipywidgets: 8.1.5
2025-02-21 02:30:44,955:INFO:                tqdm: 4.67.1
2025-02-21 02:30:44,955:INFO:               numpy: 1.24.4
2025-02-21 02:30:44,955:INFO:              pandas: 1.5.3
2025-02-21 02:30:44,955:INFO:              jinja2: 3.1.5
2025-02-21 02:30:44,955:INFO:               scipy: 1.11.4
2025-02-21 02:30:44,955:INFO:              joblib: 1.3.2
2025-02-21 02:30:44,955:INFO:             sklearn: 1.4.2
2025-02-21 02:30:44,955:INFO:                pyod: 2.0.3
2025-02-21 02:30:44,955:INFO:            imblearn: 0.13.0
2025-02-21 02:30:44,955:INFO:   category_encoders: 2.7.0
2025-02-21 02:30:44,955:INFO:            lightgbm: 4.6.0
2025-02-21 02:30:44,955:INFO:               numba: 0.61.0
2025-02-21 02:30:44,955:INFO:            requests: 2.32.3
2025-02-21 02:30:44,955:INFO:          matplotlib: 3.7.5
2025-02-21 02:30:44,955:INFO:          scikitplot: 0.3.7
2025-02-21 02:30:44,955:INFO:         yellowbrick: 1.5
2025-02-21 02:30:44,955:INFO:              plotly: 5.24.1
2025-02-21 02:30:44,955:INFO:    plotly-resampler: Not installed
2025-02-21 02:30:44,955:INFO:             kaleido: 0.2.1
2025-02-21 02:30:44,955:INFO:           schemdraw: 0.15
2025-02-21 02:30:44,955:INFO:         statsmodels: 0.14.4
2025-02-21 02:30:44,955:INFO:              sktime: 0.26.0
2025-02-21 02:30:44,955:INFO:               tbats: 1.1.3
2025-02-21 02:30:44,955:INFO:            pmdarima: 2.0.4
2025-02-21 02:30:44,955:INFO:              psutil: 7.0.0
2025-02-21 02:30:44,955:INFO:          markupsafe: 3.0.2
2025-02-21 02:30:44,955:INFO:             pickle5: Not installed
2025-02-21 02:30:44,955:INFO:         cloudpickle: 3.1.1
2025-02-21 02:30:44,955:INFO:         deprecation: 2.1.0
2025-02-21 02:30:44,955:INFO:              xxhash: 3.5.0
2025-02-21 02:30:44,955:INFO:           wurlitzer: Not installed
2025-02-21 02:30:44,955:INFO:PyCaret optional dependencies:
2025-02-21 02:30:44,960:INFO:                shap: Not installed
2025-02-21 02:30:44,960:INFO:           interpret: Not installed
2025-02-21 02:30:44,960:INFO:                umap: Not installed
2025-02-21 02:30:44,960:INFO:     ydata_profiling: Not installed
2025-02-21 02:30:44,960:INFO:  explainerdashboard: Not installed
2025-02-21 02:30:44,960:INFO:             autoviz: Not installed
2025-02-21 02:30:44,960:INFO:           fairlearn: Not installed
2025-02-21 02:30:44,960:INFO:          deepchecks: Not installed
2025-02-21 02:30:44,960:INFO:             xgboost: Not installed
2025-02-21 02:30:44,960:INFO:            catboost: Not installed
2025-02-21 02:30:44,960:INFO:              kmodes: Not installed
2025-02-21 02:30:44,960:INFO:             mlxtend: Not installed
2025-02-21 02:30:44,960:INFO:       statsforecast: Not installed
2025-02-21 02:30:44,960:INFO:        tune_sklearn: Not installed
2025-02-21 02:30:44,960:INFO:                 ray: Not installed
2025-02-21 02:30:44,960:INFO:            hyperopt: Not installed
2025-02-21 02:30:44,960:INFO:              optuna: Not installed
2025-02-21 02:30:44,960:INFO:               skopt: Not installed
2025-02-21 02:30:44,960:INFO:              mlflow: Not installed
2025-02-21 02:30:44,960:INFO:              gradio: Not installed
2025-02-21 02:30:44,960:INFO:             fastapi: Not installed
2025-02-21 02:30:44,960:INFO:             uvicorn: Not installed
2025-02-21 02:30:44,976:INFO:              m2cgen: Not installed
2025-02-21 02:30:44,976:INFO:           evidently: Not installed
2025-02-21 02:30:44,976:INFO:               fugue: Not installed
2025-02-21 02:30:44,976:INFO:           streamlit: Not installed
2025-02-21 02:30:44,976:INFO:             prophet: Not installed
2025-02-21 02:30:44,976:INFO:None
2025-02-21 02:30:44,976:INFO:Set up data.
2025-02-21 02:30:44,976:INFO:Set up folding strategy.
2025-02-21 02:30:44,976:INFO:Set up train/test split.
2025-02-21 02:30:44,976:INFO:Set up index.
2025-02-21 02:30:44,976:INFO:Assigning column types.
2025-02-21 02:30:44,992:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-02-21 02:30:45,079:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-21 02:30:45,079:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-02-21 02:30:45,160:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-21 02:30:45,162:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-21 02:30:45,265:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-21 02:30:45,265:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-02-21 02:30:45,328:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-21 02:30:45,330:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-21 02:30:45,330:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-02-21 02:30:45,426:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-02-21 02:30:45,459:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-21 02:30:45,459:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-21 02:30:45,521:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-02-21 02:30:45,547:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-21 02:30:45,547:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-21 02:30:45,547:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-02-21 02:30:45,682:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-21 02:30:45,682:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-21 02:30:45,857:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-21 02:30:45,858:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-21 02:30:45,860:INFO:Preparing preprocessing pipeline...
2025-02-21 02:30:45,862:INFO:Set up label encoding.
2025-02-21 02:30:45,862:INFO:Set up simple imputation.
2025-02-21 02:30:45,862:INFO:Set up feature normalization.
2025-02-21 02:30:45,862:INFO:Set up feature selection.
2025-02-21 02:30:45,960:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-21 02:30:45,960:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-21 02:30:46,094:INFO:Finished creating preprocessing pipeline.
2025-02-21 02:30:46,122:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\JUPYTE~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Area', 'Perimeter', 'Compactness',
                                             'Length', 'Width',
                                             'AsymmetryCoeff', 'Groove'],
                                    transformer=SimpleIm...
                                                                                         learning_rate=0.1,
                                                                                         max_depth=-1,
                                                                                         min_child_samples=20,
                                                                                         min_child_weight=0.001,
                                                                                         min_split_gain=0.0,
                                                                                         n_estimators=100,
                                                                                         n_jobs=None,
                                                                                         num_leaves=31,
                                                                                         objective=None,
                                                                                         random_state=None,
                                                                                         reg_alpha=0.0,
                                                                                         reg_lambda=0.0,
                                                                                         subsample=1.0,
                                                                                         subsample_for_bin=200000,
                                                                                         subsample_freq=0),
                                                                importance_getter='auto',
                                                                max_features=1,
                                                                norm_order=1,
                                                                prefit=False,
                                                                threshold=-inf)))],
         verbose=False)
2025-02-21 02:30:46,122:INFO:Creating final display dataframe.
2025-02-21 02:30:46,436:INFO:Setup _display_container:                     Description             Value
0                    Session id                42
1                        Target              Type
2                   Target type        Multiclass
3                Target mapping  1: 0, 2: 1, 3: 2
4           Original data shape          (159, 8)
5        Transformed data shape          (159, 2)
6   Transformed train set shape          (111, 2)
7    Transformed test set shape           (48, 2)
8              Numeric features                 7
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13                    Normalize              True
14             Normalize method            zscore
15            Feature selection              True
16     Feature selection method           classic
17  Feature selection estimator          lightgbm
18  Number of features selected               0.2
19               Fold Generator   StratifiedKFold
20                  Fold Number                10
21                     CPU Jobs                -1
22                      Use GPU             False
23               Log Experiment             False
24              Experiment Name  clf-default-name
25                          USI              29b5
2025-02-21 02:30:46,648:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-21 02:30:46,648:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-21 02:30:46,979:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-21 02:30:46,979:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-21 02:30:46,979:INFO:setup() successfully completed in 2.09s...............
2025-02-21 02:30:46,979:INFO:Initializing compare_models()
2025-02-21 02:30:46,979:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D6585277D0>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000002D6585277D0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2025-02-21 02:30:46,979:INFO:Checking exceptions
2025-02-21 02:30:46,991:INFO:Preparing display monitor
2025-02-21 02:30:46,995:INFO:Initializing Logistic Regression
2025-02-21 02:30:46,995:INFO:Total runtime is 0.0 minutes
2025-02-21 02:30:46,995:INFO:SubProcess create_model() called ==================================
2025-02-21 02:30:47,003:INFO:Initializing create_model()
2025-02-21 02:30:47,003:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D6585277D0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002D65887A050>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-21 02:30:47,003:INFO:Checking exceptions
2025-02-21 02:30:47,003:INFO:Importing libraries
2025-02-21 02:30:47,003:INFO:Copying training dataset
2025-02-21 02:30:47,011:INFO:Defining folds
2025-02-21 02:30:47,011:INFO:Declaring metric variables
2025-02-21 02:30:47,011:INFO:Importing untrained model
2025-02-21 02:30:47,011:INFO:Logistic Regression Imported successfully
2025-02-21 02:30:47,011:INFO:Starting cross validation
2025-02-21 02:30:47,034:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-21 02:30:52,665:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:30:52,671:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:30:52,680:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:30:52,685:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:30:52,697:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:30:52,703:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:30:52,709:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:30:52,713:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:30:52,727:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:30:52,735:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:30:52,740:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:30:52,744:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:30:52,747:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:30:52,755:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:30:52,770:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:30:52,776:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:30:52,778:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:30:52,779:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:30:52,783:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:30:52,787:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:30:52,789:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:30:52,795:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:30:52,801:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:30:52,805:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:30:52,807:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:30:52,810:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:30:52,812:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:30:52,817:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:30:52,821:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:30:52,835:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:30:52,842:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:30:52,847:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:30:52,908:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:30:52,908:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:30:52,908:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:30:52,908:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:30:52,920:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:30:52,920:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:30:52,928:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:30:52,928:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-21 02:30:52,928:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:30:52,939:INFO:Calculating mean and std
2025-02-21 02:30:52,939:INFO:Creating metrics dataframe
2025-02-21 02:30:52,939:INFO:Uploading results into container
2025-02-21 02:30:52,939:INFO:Uploading model into container now
2025-02-21 02:30:52,939:INFO:_master_model_container: 1
2025-02-21 02:30:52,939:INFO:_display_container: 2
2025-02-21 02:30:52,939:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-02-21 02:30:52,939:INFO:create_model() successfully completed......................................
2025-02-21 02:30:53,076:INFO:SubProcess create_model() end ==================================
2025-02-21 02:30:53,078:INFO:Creating metrics dataframe
2025-02-21 02:30:53,090:INFO:Initializing K Neighbors Classifier
2025-02-21 02:30:53,090:INFO:Total runtime is 0.10159480174382528 minutes
2025-02-21 02:30:53,092:INFO:SubProcess create_model() called ==================================
2025-02-21 02:30:53,092:INFO:Initializing create_model()
2025-02-21 02:30:53,092:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D6585277D0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002D65887A050>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-21 02:30:53,092:INFO:Checking exceptions
2025-02-21 02:30:53,092:INFO:Importing libraries
2025-02-21 02:30:53,094:INFO:Copying training dataset
2025-02-21 02:30:53,102:INFO:Defining folds
2025-02-21 02:30:53,102:INFO:Declaring metric variables
2025-02-21 02:30:53,102:INFO:Importing untrained model
2025-02-21 02:30:53,102:INFO:K Neighbors Classifier Imported successfully
2025-02-21 02:30:53,102:INFO:Starting cross validation
2025-02-21 02:30:53,130:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-21 02:30:55,118:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:30:55,124:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:30:55,130:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:30:55,263:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:30:55,274:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:30:55,284:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:30:55,382:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:30:55,389:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:30:55,397:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:30:55,453:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:30:55,460:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:30:55,469:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:30:59,164:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:30:59,170:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:30:59,178:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:30:59,188:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:30:59,196:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:30:59,202:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:30:59,222:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:30:59,226:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:30:59,231:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:30:59,231:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:30:59,237:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:30:59,237:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:30:59,283:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:30:59,291:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:30:59,301:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:30:59,375:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:30:59,385:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:30:59,395:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:30:59,416:INFO:Calculating mean and std
2025-02-21 02:30:59,416:INFO:Creating metrics dataframe
2025-02-21 02:30:59,416:INFO:Uploading results into container
2025-02-21 02:30:59,432:INFO:Uploading model into container now
2025-02-21 02:30:59,432:INFO:_master_model_container: 2
2025-02-21 02:30:59,434:INFO:_display_container: 2
2025-02-21 02:30:59,434:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-02-21 02:30:59,434:INFO:create_model() successfully completed......................................
2025-02-21 02:30:59,610:INFO:SubProcess create_model() end ==================================
2025-02-21 02:30:59,610:INFO:Creating metrics dataframe
2025-02-21 02:30:59,626:INFO:Initializing Naive Bayes
2025-02-21 02:30:59,626:INFO:Total runtime is 0.21051941712697347 minutes
2025-02-21 02:30:59,626:INFO:SubProcess create_model() called ==================================
2025-02-21 02:30:59,628:INFO:Initializing create_model()
2025-02-21 02:30:59,628:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D6585277D0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002D65887A050>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-21 02:30:59,628:INFO:Checking exceptions
2025-02-21 02:30:59,628:INFO:Importing libraries
2025-02-21 02:30:59,628:INFO:Copying training dataset
2025-02-21 02:30:59,636:INFO:Defining folds
2025-02-21 02:30:59,636:INFO:Declaring metric variables
2025-02-21 02:30:59,636:INFO:Importing untrained model
2025-02-21 02:30:59,636:INFO:Naive Bayes Imported successfully
2025-02-21 02:30:59,636:INFO:Starting cross validation
2025-02-21 02:30:59,661:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-21 02:31:00,575:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:00,581:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:00,583:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:00,588:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:00,588:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:00,595:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:00,597:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:00,600:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:00,602:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:00,606:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:00,608:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:00,612:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:00,659:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:00,675:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:00,681:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:00,683:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:00,691:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:00,694:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:00,698:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:00,699:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:00,706:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:00,701:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:00,717:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:00,721:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:00,727:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:00,733:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:00,739:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:00,763:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:00,769:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:00,775:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:00,792:INFO:Calculating mean and std
2025-02-21 02:31:00,794:INFO:Creating metrics dataframe
2025-02-21 02:31:00,799:INFO:Uploading results into container
2025-02-21 02:31:00,801:INFO:Uploading model into container now
2025-02-21 02:31:00,801:INFO:_master_model_container: 3
2025-02-21 02:31:00,801:INFO:_display_container: 2
2025-02-21 02:31:00,801:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-02-21 02:31:00,803:INFO:create_model() successfully completed......................................
2025-02-21 02:31:00,929:INFO:SubProcess create_model() end ==================================
2025-02-21 02:31:00,931:INFO:Creating metrics dataframe
2025-02-21 02:31:00,945:INFO:Initializing Decision Tree Classifier
2025-02-21 02:31:00,945:INFO:Total runtime is 0.2325061837832133 minutes
2025-02-21 02:31:00,945:INFO:SubProcess create_model() called ==================================
2025-02-21 02:31:00,947:INFO:Initializing create_model()
2025-02-21 02:31:00,947:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D6585277D0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002D65887A050>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-21 02:31:00,947:INFO:Checking exceptions
2025-02-21 02:31:00,947:INFO:Importing libraries
2025-02-21 02:31:00,947:INFO:Copying training dataset
2025-02-21 02:31:00,955:INFO:Defining folds
2025-02-21 02:31:00,955:INFO:Declaring metric variables
2025-02-21 02:31:00,955:INFO:Importing untrained model
2025-02-21 02:31:00,955:INFO:Decision Tree Classifier Imported successfully
2025-02-21 02:31:00,955:INFO:Starting cross validation
2025-02-21 02:31:00,983:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-21 02:31:02,017:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:02,033:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:02,039:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:02,046:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:02,052:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:02,058:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:02,062:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:02,068:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:02,075:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:02,097:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:02,097:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:02,103:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:02,103:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:02,107:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:02,107:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:02,128:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:02,135:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:02,139:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:02,171:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:02,180:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:02,186:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:02,202:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:02,208:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:02,210:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:02,214:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:02,216:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:02,222:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:02,237:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:02,242:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:02,249:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:02,267:INFO:Calculating mean and std
2025-02-21 02:31:02,267:INFO:Creating metrics dataframe
2025-02-21 02:31:02,275:INFO:Uploading results into container
2025-02-21 02:31:02,275:INFO:Uploading model into container now
2025-02-21 02:31:02,277:INFO:_master_model_container: 4
2025-02-21 02:31:02,277:INFO:_display_container: 2
2025-02-21 02:31:02,277:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best')
2025-02-21 02:31:02,277:INFO:create_model() successfully completed......................................
2025-02-21 02:31:02,413:INFO:SubProcess create_model() end ==================================
2025-02-21 02:31:02,413:INFO:Creating metrics dataframe
2025-02-21 02:31:02,429:INFO:Initializing SVM - Linear Kernel
2025-02-21 02:31:02,429:INFO:Total runtime is 0.25724349021911624 minutes
2025-02-21 02:31:02,429:INFO:SubProcess create_model() called ==================================
2025-02-21 02:31:02,429:INFO:Initializing create_model()
2025-02-21 02:31:02,429:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D6585277D0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002D65887A050>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-21 02:31:02,429:INFO:Checking exceptions
2025-02-21 02:31:02,429:INFO:Importing libraries
2025-02-21 02:31:02,429:INFO:Copying training dataset
2025-02-21 02:31:02,429:INFO:Defining folds
2025-02-21 02:31:02,429:INFO:Declaring metric variables
2025-02-21 02:31:02,429:INFO:Importing untrained model
2025-02-21 02:31:02,444:INFO:SVM - Linear Kernel Imported successfully
2025-02-21 02:31:02,445:INFO:Starting cross validation
2025-02-21 02:31:02,471:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-21 02:31:03,334:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:31:03,338:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:03,345:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:03,353:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:03,361:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:31:03,361:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:31:03,361:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:31:03,365:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:03,365:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:03,365:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:03,365:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:31:03,369:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:03,371:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:03,371:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:03,371:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:03,376:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-21 02:31:03,376:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:03,378:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:03,380:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-21 02:31:03,382:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:03,384:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:03,389:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:03,414:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:31:03,414:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:31:03,416:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:03,418:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:03,422:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:03,422:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:03,424:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-21 02:31:03,428:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:03,428:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:03,483:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:31:03,485:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:03,491:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:03,493:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-21 02:31:03,496:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:03,496:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:31:03,500:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:03,505:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:03,507:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-21 02:31:03,509:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:03,514:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:31:03,516:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:03,521:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:03,527:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:03,542:INFO:Calculating mean and std
2025-02-21 02:31:03,544:INFO:Creating metrics dataframe
2025-02-21 02:31:03,544:INFO:Uploading results into container
2025-02-21 02:31:03,544:INFO:Uploading model into container now
2025-02-21 02:31:03,544:INFO:_master_model_container: 5
2025-02-21 02:31:03,544:INFO:_display_container: 2
2025-02-21 02:31:03,544:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=42, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-02-21 02:31:03,544:INFO:create_model() successfully completed......................................
2025-02-21 02:31:03,686:INFO:SubProcess create_model() end ==================================
2025-02-21 02:31:03,686:INFO:Creating metrics dataframe
2025-02-21 02:31:03,686:INFO:Initializing Ridge Classifier
2025-02-21 02:31:03,686:INFO:Total runtime is 0.278195059299469 minutes
2025-02-21 02:31:03,686:INFO:SubProcess create_model() called ==================================
2025-02-21 02:31:03,686:INFO:Initializing create_model()
2025-02-21 02:31:03,702:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D6585277D0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002D65887A050>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-21 02:31:03,702:INFO:Checking exceptions
2025-02-21 02:31:03,702:INFO:Importing libraries
2025-02-21 02:31:03,702:INFO:Copying training dataset
2025-02-21 02:31:03,702:INFO:Defining folds
2025-02-21 02:31:03,702:INFO:Declaring metric variables
2025-02-21 02:31:03,702:INFO:Importing untrained model
2025-02-21 02:31:03,702:INFO:Ridge Classifier Imported successfully
2025-02-21 02:31:03,713:INFO:Starting cross validation
2025-02-21 02:31:03,736:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-21 02:31:04,565:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:31:04,569:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:04,575:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:31:04,575:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:04,578:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:04,578:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-21 02:31:04,582:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:04,583:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:31:04,585:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:04,589:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:04,592:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:04,593:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-21 02:31:04,595:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-21 02:31:04,595:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:04,597:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:04,633:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:31:04,635:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:31:04,637:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:04,639:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:04,643:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:04,645:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:04,645:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-21 02:31:04,647:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-21 02:31:04,649:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:04,651:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:04,663:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:31:04,665:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:04,671:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:04,675:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-21 02:31:04,678:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:04,693:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:31:04,695:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:04,702:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:04,705:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-21 02:31:04,709:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:31:04,709:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:04,711:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:04,722:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:04,726:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-21 02:31:04,729:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:04,743:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:31:04,747:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:04,751:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:04,757:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:04,769:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:31:04,771:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:04,778:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:04,781:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-21 02:31:04,783:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:04,798:INFO:Calculating mean and std
2025-02-21 02:31:04,800:INFO:Creating metrics dataframe
2025-02-21 02:31:04,805:INFO:Uploading results into container
2025-02-21 02:31:04,805:INFO:Uploading model into container now
2025-02-21 02:31:04,805:INFO:_master_model_container: 6
2025-02-21 02:31:04,805:INFO:_display_container: 2
2025-02-21 02:31:04,805:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=42, solver='auto',
                tol=0.0001)
2025-02-21 02:31:04,805:INFO:create_model() successfully completed......................................
2025-02-21 02:31:04,920:INFO:SubProcess create_model() end ==================================
2025-02-21 02:31:04,920:INFO:Creating metrics dataframe
2025-02-21 02:31:04,926:INFO:Initializing Random Forest Classifier
2025-02-21 02:31:04,926:INFO:Total runtime is 0.29885535240173344 minutes
2025-02-21 02:31:04,928:INFO:SubProcess create_model() called ==================================
2025-02-21 02:31:04,928:INFO:Initializing create_model()
2025-02-21 02:31:04,928:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D6585277D0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002D65887A050>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-21 02:31:04,928:INFO:Checking exceptions
2025-02-21 02:31:04,928:INFO:Importing libraries
2025-02-21 02:31:04,928:INFO:Copying training dataset
2025-02-21 02:31:04,933:INFO:Defining folds
2025-02-21 02:31:04,933:INFO:Declaring metric variables
2025-02-21 02:31:04,933:INFO:Importing untrained model
2025-02-21 02:31:04,933:INFO:Random Forest Classifier Imported successfully
2025-02-21 02:31:04,935:INFO:Starting cross validation
2025-02-21 02:31:04,952:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-21 02:31:06,490:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:06,499:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:06,508:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:06,520:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:06,527:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:06,535:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:06,546:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:06,546:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:06,552:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:06,552:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:06,552:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:06,562:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:06,562:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:06,564:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:06,569:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:06,580:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:06,588:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:06,597:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:06,722:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:06,731:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:06,742:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:06,761:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:06,770:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:06,779:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:06,859:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:06,859:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:06,869:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:06,869:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:06,877:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:06,879:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:06,895:INFO:Calculating mean and std
2025-02-21 02:31:06,898:INFO:Creating metrics dataframe
2025-02-21 02:31:06,905:INFO:Uploading results into container
2025-02-21 02:31:06,905:INFO:Uploading model into container now
2025-02-21 02:31:06,905:INFO:_master_model_container: 7
2025-02-21 02:31:06,905:INFO:_display_container: 2
2025-02-21 02:31:06,905:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2025-02-21 02:31:06,913:INFO:create_model() successfully completed......................................
2025-02-21 02:31:07,066:INFO:SubProcess create_model() end ==================================
2025-02-21 02:31:07,066:INFO:Creating metrics dataframe
2025-02-21 02:31:07,076:INFO:Initializing Quadratic Discriminant Analysis
2025-02-21 02:31:07,076:INFO:Total runtime is 0.33468688329060875 minutes
2025-02-21 02:31:07,076:INFO:SubProcess create_model() called ==================================
2025-02-21 02:31:07,076:INFO:Initializing create_model()
2025-02-21 02:31:07,076:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D6585277D0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002D65887A050>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-21 02:31:07,076:INFO:Checking exceptions
2025-02-21 02:31:07,076:INFO:Importing libraries
2025-02-21 02:31:07,076:INFO:Copying training dataset
2025-02-21 02:31:07,085:INFO:Defining folds
2025-02-21 02:31:07,085:INFO:Declaring metric variables
2025-02-21 02:31:07,094:INFO:Importing untrained model
2025-02-21 02:31:07,094:INFO:Quadratic Discriminant Analysis Imported successfully
2025-02-21 02:31:07,094:INFO:Starting cross validation
2025-02-21 02:31:07,110:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-21 02:31:08,132:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:31:08,134:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:31:08,134:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:08,136:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:08,140:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:08,143:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:08,145:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:08,158:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:08,183:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:31:08,185:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:08,191:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:08,197:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:08,213:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:31:08,217:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:08,223:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:08,230:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:31:08,230:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:08,234:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:08,240:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:08,250:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:08,260:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:31:08,262:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:08,269:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:08,277:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:08,297:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:31:08,299:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:31:08,299:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:08,302:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:08,306:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:08,308:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:08,312:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:08,312:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:08,328:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:31:08,330:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:08,336:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:08,336:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:31:08,338:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:08,340:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:08,344:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:08,348:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:08,363:INFO:Calculating mean and std
2025-02-21 02:31:08,365:INFO:Creating metrics dataframe
2025-02-21 02:31:08,371:INFO:Uploading results into container
2025-02-21 02:31:08,373:INFO:Uploading model into container now
2025-02-21 02:31:08,373:INFO:_master_model_container: 8
2025-02-21 02:31:08,373:INFO:_display_container: 2
2025-02-21 02:31:08,373:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-02-21 02:31:08,373:INFO:create_model() successfully completed......................................
2025-02-21 02:31:08,505:INFO:SubProcess create_model() end ==================================
2025-02-21 02:31:08,505:INFO:Creating metrics dataframe
2025-02-21 02:31:08,513:INFO:Initializing Ada Boost Classifier
2025-02-21 02:31:08,513:INFO:Total runtime is 0.35863940318425497 minutes
2025-02-21 02:31:08,513:INFO:SubProcess create_model() called ==================================
2025-02-21 02:31:08,513:INFO:Initializing create_model()
2025-02-21 02:31:08,513:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D6585277D0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002D65887A050>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-21 02:31:08,513:INFO:Checking exceptions
2025-02-21 02:31:08,513:INFO:Importing libraries
2025-02-21 02:31:08,513:INFO:Copying training dataset
2025-02-21 02:31:08,529:INFO:Defining folds
2025-02-21 02:31:08,529:INFO:Declaring metric variables
2025-02-21 02:31:08,529:INFO:Importing untrained model
2025-02-21 02:31:08,529:INFO:Ada Boost Classifier Imported successfully
2025-02-21 02:31:08,529:INFO:Starting cross validation
2025-02-21 02:31:08,570:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-21 02:31:09,361:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-21 02:31:09,363:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-21 02:31:09,388:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-21 02:31:09,424:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-21 02:31:09,454:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-21 02:31:09,461:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-21 02:31:09,621:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:31:09,625:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:09,633:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:09,635:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:31:09,638:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:09,638:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:09,641:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-21 02:31:09,645:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:09,649:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-21 02:31:09,651:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:09,667:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:31:09,671:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:09,678:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:09,682:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:09,687:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-21 02:31:09,699:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:31:09,704:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:09,709:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:09,716:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:09,731:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:31:09,733:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:09,737:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:31:09,738:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:09,740:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:09,745:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:09,745:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:09,753:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:09,760:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-21 02:31:09,764:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-21 02:31:09,902:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:31:09,902:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:09,902:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:09,915:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:09,918:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:31:09,918:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:09,918:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:09,925:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-21 02:31:09,925:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:09,970:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:31:09,972:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:09,977:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:09,977:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:31:09,982:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:09,982:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:09,988:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:09,996:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:10,019:INFO:Calculating mean and std
2025-02-21 02:31:10,021:INFO:Creating metrics dataframe
2025-02-21 02:31:10,030:INFO:Uploading results into container
2025-02-21 02:31:10,030:INFO:Uploading model into container now
2025-02-21 02:31:10,030:INFO:_master_model_container: 9
2025-02-21 02:31:10,030:INFO:_display_container: 2
2025-02-21 02:31:10,030:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=42)
2025-02-21 02:31:10,030:INFO:create_model() successfully completed......................................
2025-02-21 02:31:10,167:INFO:SubProcess create_model() end ==================================
2025-02-21 02:31:10,167:INFO:Creating metrics dataframe
2025-02-21 02:31:10,181:INFO:Initializing Gradient Boosting Classifier
2025-02-21 02:31:10,181:INFO:Total runtime is 0.38644025325775144 minutes
2025-02-21 02:31:10,181:INFO:SubProcess create_model() called ==================================
2025-02-21 02:31:10,181:INFO:Initializing create_model()
2025-02-21 02:31:10,181:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D6585277D0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002D65887A050>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-21 02:31:10,183:INFO:Checking exceptions
2025-02-21 02:31:10,183:INFO:Importing libraries
2025-02-21 02:31:10,183:INFO:Copying training dataset
2025-02-21 02:31:10,191:INFO:Defining folds
2025-02-21 02:31:10,191:INFO:Declaring metric variables
2025-02-21 02:31:10,191:INFO:Importing untrained model
2025-02-21 02:31:10,191:INFO:Gradient Boosting Classifier Imported successfully
2025-02-21 02:31:10,191:INFO:Starting cross validation
2025-02-21 02:31:10,221:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-21 02:31:11,639:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:31:11,642:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:11,648:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:11,654:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:11,656:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:31:11,659:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:11,664:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:11,671:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:11,671:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:31:11,675:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:11,681:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:11,687:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:11,714:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:31:11,716:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:11,722:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:11,724:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:31:11,726:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:11,733:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:11,737:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:11,739:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:11,793:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:31:11,793:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:11,803:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:11,811:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:12,274:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:31:12,277:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:12,277:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:12,277:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:12,295:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:31:12,295:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:12,295:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:12,305:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:12,326:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:31:12,326:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:12,336:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:31:12,336:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:12,340:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:12,340:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:12,346:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:12,346:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:12,377:INFO:Calculating mean and std
2025-02-21 02:31:12,377:INFO:Creating metrics dataframe
2025-02-21 02:31:12,390:INFO:Uploading results into container
2025-02-21 02:31:12,392:INFO:Uploading model into container now
2025-02-21 02:31:12,392:INFO:_master_model_container: 10
2025-02-21 02:31:12,394:INFO:_display_container: 2
2025-02-21 02:31:12,394:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-02-21 02:31:12,394:INFO:create_model() successfully completed......................................
2025-02-21 02:31:12,514:INFO:SubProcess create_model() end ==================================
2025-02-21 02:31:12,514:INFO:Creating metrics dataframe
2025-02-21 02:31:12,530:INFO:Initializing Linear Discriminant Analysis
2025-02-21 02:31:12,530:INFO:Total runtime is 0.42558532555898027 minutes
2025-02-21 02:31:12,530:INFO:SubProcess create_model() called ==================================
2025-02-21 02:31:12,530:INFO:Initializing create_model()
2025-02-21 02:31:12,530:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D6585277D0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002D65887A050>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-21 02:31:12,530:INFO:Checking exceptions
2025-02-21 02:31:12,530:INFO:Importing libraries
2025-02-21 02:31:12,530:INFO:Copying training dataset
2025-02-21 02:31:12,530:INFO:Defining folds
2025-02-21 02:31:12,530:INFO:Declaring metric variables
2025-02-21 02:31:12,530:INFO:Importing untrained model
2025-02-21 02:31:12,530:INFO:Linear Discriminant Analysis Imported successfully
2025-02-21 02:31:12,530:INFO:Starting cross validation
2025-02-21 02:31:12,561:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-21 02:31:13,484:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:31:13,487:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:13,493:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:13,500:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:13,505:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:31:13,510:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:13,514:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:13,521:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:13,536:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:31:13,540:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:13,544:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:13,551:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:31:13,555:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:13,559:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:13,562:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:13,569:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:13,588:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:31:13,590:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:13,596:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:13,602:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:13,605:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:31:13,608:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:13,613:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:13,624:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:31:13,625:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:31:13,627:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:13,628:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:13,632:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:13,634:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:13,635:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:13,639:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:13,675:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:31:13,677:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:13,681:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:31:13,683:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:13,685:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:13,687:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:13,689:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:13,694:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:13,712:INFO:Calculating mean and std
2025-02-21 02:31:13,714:INFO:Creating metrics dataframe
2025-02-21 02:31:13,719:INFO:Uploading results into container
2025-02-21 02:31:13,721:INFO:Uploading model into container now
2025-02-21 02:31:13,723:INFO:_master_model_container: 11
2025-02-21 02:31:13,723:INFO:_display_container: 2
2025-02-21 02:31:13,723:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-02-21 02:31:13,723:INFO:create_model() successfully completed......................................
2025-02-21 02:31:13,843:INFO:SubProcess create_model() end ==================================
2025-02-21 02:31:13,843:INFO:Creating metrics dataframe
2025-02-21 02:31:13,858:INFO:Initializing Extra Trees Classifier
2025-02-21 02:31:13,858:INFO:Total runtime is 0.4477306922276814 minutes
2025-02-21 02:31:13,858:INFO:SubProcess create_model() called ==================================
2025-02-21 02:31:13,858:INFO:Initializing create_model()
2025-02-21 02:31:13,858:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D6585277D0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002D65887A050>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-21 02:31:13,858:INFO:Checking exceptions
2025-02-21 02:31:13,858:INFO:Importing libraries
2025-02-21 02:31:13,858:INFO:Copying training dataset
2025-02-21 02:31:13,874:INFO:Defining folds
2025-02-21 02:31:13,874:INFO:Declaring metric variables
2025-02-21 02:31:13,874:INFO:Importing untrained model
2025-02-21 02:31:13,874:INFO:Extra Trees Classifier Imported successfully
2025-02-21 02:31:13,874:INFO:Starting cross validation
2025-02-21 02:31:13,891:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-21 02:31:15,378:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:15,387:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:15,395:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:15,400:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:15,404:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:15,408:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:15,413:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:15,418:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:15,479:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:15,487:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:15,494:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:15,496:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:15,505:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:15,512:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:15,512:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:15,521:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:15,529:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:15,624:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:15,634:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:15,642:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:15,679:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:15,693:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:15,702:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:15,720:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:15,734:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:15,734:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:15,737:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:15,742:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:15,744:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:15,757:INFO:Calculating mean and std
2025-02-21 02:31:15,757:INFO:Creating metrics dataframe
2025-02-21 02:31:15,757:INFO:Uploading results into container
2025-02-21 02:31:15,757:INFO:Uploading model into container now
2025-02-21 02:31:15,757:INFO:_master_model_container: 12
2025-02-21 02:31:15,757:INFO:_display_container: 2
2025-02-21 02:31:15,757:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False)
2025-02-21 02:31:15,757:INFO:create_model() successfully completed......................................
2025-02-21 02:31:15,902:INFO:SubProcess create_model() end ==================================
2025-02-21 02:31:15,902:INFO:Creating metrics dataframe
2025-02-21 02:31:15,917:INFO:Initializing Light Gradient Boosting Machine
2025-02-21 02:31:15,917:INFO:Total runtime is 0.482046099503835 minutes
2025-02-21 02:31:15,917:INFO:SubProcess create_model() called ==================================
2025-02-21 02:31:15,917:INFO:Initializing create_model()
2025-02-21 02:31:15,917:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D6585277D0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002D65887A050>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-21 02:31:15,917:INFO:Checking exceptions
2025-02-21 02:31:15,917:INFO:Importing libraries
2025-02-21 02:31:15,917:INFO:Copying training dataset
2025-02-21 02:31:15,926:INFO:Defining folds
2025-02-21 02:31:15,926:INFO:Declaring metric variables
2025-02-21 02:31:15,926:INFO:Importing untrained model
2025-02-21 02:31:15,926:INFO:Light Gradient Boosting Machine Imported successfully
2025-02-21 02:31:15,926:INFO:Starting cross validation
2025-02-21 02:31:15,954:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-21 02:31:17,805:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:17,811:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:17,827:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:17,844:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:17,849:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:17,853:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-21 02:31:17,856:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:17,866:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:17,872:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:17,886:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:17,943:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:17,948:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:17,969:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:17,999:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:18,007:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:18,013:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:18,024:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:18,029:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:18,036:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:18,043:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:18,049:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:18,051:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:18,055:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:18,057:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:18,060:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:18,074:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:18,081:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:18,091:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:18,131:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:18,137:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:18,141:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:18,160:INFO:Calculating mean and std
2025-02-21 02:31:18,160:INFO:Creating metrics dataframe
2025-02-21 02:31:18,168:INFO:Uploading results into container
2025-02-21 02:31:18,168:INFO:Uploading model into container now
2025-02-21 02:31:18,170:INFO:_master_model_container: 13
2025-02-21 02:31:18,170:INFO:_display_container: 2
2025-02-21 02:31:18,171:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-02-21 02:31:18,171:INFO:create_model() successfully completed......................................
2025-02-21 02:31:18,280:INFO:SubProcess create_model() end ==================================
2025-02-21 02:31:18,280:INFO:Creating metrics dataframe
2025-02-21 02:31:18,288:INFO:Initializing Dummy Classifier
2025-02-21 02:31:18,288:INFO:Total runtime is 0.5215594689051309 minutes
2025-02-21 02:31:18,288:INFO:SubProcess create_model() called ==================================
2025-02-21 02:31:18,288:INFO:Initializing create_model()
2025-02-21 02:31:18,288:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D6585277D0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002D65887A050>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-21 02:31:18,288:INFO:Checking exceptions
2025-02-21 02:31:18,288:INFO:Importing libraries
2025-02-21 02:31:18,288:INFO:Copying training dataset
2025-02-21 02:31:18,293:INFO:Defining folds
2025-02-21 02:31:18,293:INFO:Declaring metric variables
2025-02-21 02:31:18,293:INFO:Importing untrained model
2025-02-21 02:31:18,293:INFO:Dummy Classifier Imported successfully
2025-02-21 02:31:18,293:INFO:Starting cross validation
2025-02-21 02:31:18,311:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-21 02:31:19,258:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:19,270:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:19,272:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-21 02:31:19,275:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:19,309:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:19,313:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:19,315:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-21 02:31:19,317:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:19,349:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:19,353:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:19,356:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:19,358:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-21 02:31:19,360:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:19,360:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:19,364:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-21 02:31:19,366:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:19,374:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:19,381:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:19,384:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-21 02:31:19,388:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:19,410:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:19,416:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:19,416:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:19,418:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-21 02:31:19,422:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:19,422:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:19,424:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-21 02:31:19,426:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:19,453:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:19,459:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:19,461:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-21 02:31:19,463:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:19,473:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:19,479:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:19,481:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-21 02:31:19,485:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:19,503:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:19,510:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:19,512:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-21 02:31:19,516:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:19,526:INFO:Calculating mean and std
2025-02-21 02:31:19,528:INFO:Creating metrics dataframe
2025-02-21 02:31:19,534:INFO:Uploading results into container
2025-02-21 02:31:19,536:INFO:Uploading model into container now
2025-02-21 02:31:19,536:INFO:_master_model_container: 14
2025-02-21 02:31:19,536:INFO:_display_container: 2
2025-02-21 02:31:19,536:INFO:DummyClassifier(constant=None, random_state=42, strategy='prior')
2025-02-21 02:31:19,536:INFO:create_model() successfully completed......................................
2025-02-21 02:31:19,659:INFO:SubProcess create_model() end ==================================
2025-02-21 02:31:19,659:INFO:Creating metrics dataframe
2025-02-21 02:31:19,675:INFO:Initializing create_model()
2025-02-21 02:31:19,675:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D6585277D0>, estimator=AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=42), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-21 02:31:19,675:INFO:Checking exceptions
2025-02-21 02:31:19,691:INFO:Importing libraries
2025-02-21 02:31:19,691:INFO:Copying training dataset
2025-02-21 02:31:19,693:INFO:Defining folds
2025-02-21 02:31:19,693:INFO:Declaring metric variables
2025-02-21 02:31:19,693:INFO:Importing untrained model
2025-02-21 02:31:19,693:INFO:Declaring custom model
2025-02-21 02:31:19,693:INFO:Ada Boost Classifier Imported successfully
2025-02-21 02:31:19,728:INFO:Cross validation set to False
2025-02-21 02:31:19,728:INFO:Fitting Model
2025-02-21 02:31:19,898:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000151 seconds.
2025-02-21 02:31:19,898:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-02-21 02:31:19,900:INFO:[LightGBM] [Info] Total Bins 264
2025-02-21 02:31:19,900:INFO:[LightGBM] [Info] Number of data points in the train set: 111, number of used features: 7
2025-02-21 02:31:19,900:INFO:[LightGBM] [Info] Start training from score -1.098612
2025-02-21 02:31:19,900:INFO:[LightGBM] [Info] Start training from score -1.071944
2025-02-21 02:31:19,900:INFO:[LightGBM] [Info] Start training from score -1.126011
2025-02-21 02:31:19,902:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,902:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,902:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,902:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,902:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,902:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,904:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,904:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,904:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,904:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,904:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,904:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,906:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,906:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,906:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,906:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,906:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,908:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,908:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,908:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,908:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,908:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,908:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,910:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,910:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,911:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,911:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,911:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,911:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,911:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,913:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,913:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,913:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,913:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,913:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,913:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,915:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,915:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,915:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,915:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,915:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,917:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,917:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,917:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,917:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,917:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,917:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,919:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,919:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,919:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,919:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,921:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,921:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,921:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,921:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,921:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,921:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,923:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,923:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,923:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,923:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,923:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,925:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,925:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,925:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,925:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,926:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,926:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,926:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,926:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,926:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,926:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,928:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,928:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,928:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,928:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,928:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,930:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,930:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,930:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,930:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,930:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,932:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,932:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,932:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,932:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,932:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,934:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,934:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,934:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,934:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,934:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,934:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,936:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,936:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,936:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,936:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,936:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,936:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,938:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,938:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,938:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,938:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,938:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,938:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,940:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,940:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,940:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,940:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,940:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,942:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,942:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,942:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,942:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,942:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,944:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,944:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,944:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,944:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,944:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,944:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,946:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,946:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,946:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,946:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,946:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,948:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,948:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,948:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,948:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,948:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,950:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,950:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,950:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,950:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,950:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,952:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,952:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,952:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,952:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,952:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,954:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,954:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,954:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,954:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,954:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,956:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,956:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,956:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,956:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,958:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,958:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,958:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,958:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,960:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,960:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,960:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,960:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,960:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,962:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,962:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,962:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,962:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,962:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,962:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,964:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,964:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,964:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,964:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,964:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,966:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,966:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,966:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,966:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,966:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,968:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,968:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,968:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,968:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,968:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,968:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,970:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,970:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,970:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,970:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,970:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,972:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,972:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,972:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,972:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,974:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,974:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,974:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,974:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,974:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,976:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,976:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,976:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,976:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,976:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,978:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,978:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,978:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,978:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,978:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,980:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,980:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,980:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,980:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,980:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,982:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,982:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,982:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,982:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,982:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,984:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,984:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,984:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,984:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,984:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,984:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,986:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,986:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,986:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,986:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,986:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,986:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,988:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,988:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,988:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,988:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,988:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,989:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,989:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,989:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,989:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,989:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,991:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,991:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,991:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,991:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,991:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,993:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,993:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,993:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,993:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,993:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,995:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,995:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,995:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,995:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,995:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,995:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,997:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,997:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,997:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,997:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,997:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,999:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,999:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,999:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,999:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:19,999:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:20,001:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:20,001:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:20,001:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:20,001:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:20,001:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:20,001:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:20,003:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:20,003:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:20,003:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:20,003:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:20,003:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:20,005:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:20,005:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:20,005:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:20,005:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:20,005:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:20,007:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:20,007:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:20,007:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:20,007:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:20,007:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:20,007:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:20,007:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:20,009:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:20,009:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:20,009:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:20,009:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:20,009:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:20,011:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:20,011:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:20,011:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:20,011:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:20,013:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:20,013:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:20,013:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:20,013:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:20,013:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:31:20,037:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-21 02:31:20,155:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=42)
2025-02-21 02:31:20,155:INFO:create_model() successfully completed......................................
2025-02-21 02:31:20,330:INFO:_master_model_container: 14
2025-02-21 02:31:20,330:INFO:_display_container: 2
2025-02-21 02:31:20,330:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=42)
2025-02-21 02:31:20,330:INFO:compare_models() successfully completed......................................
2025-02-21 02:31:20,330:INFO:Initializing evaluate_model()
2025-02-21 02:31:20,330:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D6585277D0>, estimator=AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=42), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2025-02-21 02:31:20,346:INFO:Initializing plot_model()
2025-02-21 02:31:20,346:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D6585277D0>, estimator=AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=42), plot=pipeline, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2025-02-21 02:31:20,346:INFO:Checking exceptions
2025-02-21 02:31:20,346:INFO:Preloading libraries
2025-02-21 02:31:20,362:INFO:Copying training dataset
2025-02-21 02:31:20,362:INFO:Plot type: pipeline
2025-02-21 02:31:20,830:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py:582: UserWarning: Matplotlib is currently using agg, which is a non-GUI backend, so cannot show the figure.
  plt.show()

2025-02-21 02:31:20,830:INFO:Visual Rendered Successfully
2025-02-21 02:31:20,974:INFO:plot_model() successfully completed......................................
2025-02-21 02:31:51,198:INFO:PyCaret ClassificationExperiment
2025-02-21 02:31:51,198:INFO:Logging name: clf-default-name
2025-02-21 02:31:51,198:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-02-21 02:31:51,198:INFO:version 3.3.2
2025-02-21 02:31:51,198:INFO:Initializing setup()
2025-02-21 02:31:51,198:INFO:self.USI: ca05
2025-02-21 02:31:51,198:INFO:self._variable_keys: {'_ml_usecase', 'n_jobs_param', 'gpu_n_jobs_param', 'fold_groups_param', 'X_train', 'y_train', 'X_test', 'logging_param', '_available_plots', 'log_plots_param', 'exp_name_log', 'memory', 'y_test', 'y', 'is_multiclass', 'fix_imbalance', 'gpu_param', 'target_param', 'html_param', 'fold_generator', 'USI', 'pipeline', 'exp_id', 'data', 'X', 'idx', 'seed', 'fold_shuffle_param'}
2025-02-21 02:31:51,198:INFO:Checking environment
2025-02-21 02:31:51,198:INFO:python_version: 3.11.11
2025-02-21 02:31:51,198:INFO:python_build: ('main', 'Dec 11 2024 16:34:19')
2025-02-21 02:31:51,198:INFO:machine: AMD64
2025-02-21 02:31:51,226:INFO:platform: Windows-10-10.0.26100-SP0
2025-02-21 02:31:51,226:INFO:Memory: svmem(total=16855433216, available=7901409280, percent=53.1, used=8954023936, free=7901409280)
2025-02-21 02:31:51,226:INFO:Physical Core: 10
2025-02-21 02:31:51,226:INFO:Logical Core: 16
2025-02-21 02:31:51,226:INFO:Checking libraries
2025-02-21 02:31:51,226:INFO:System:
2025-02-21 02:31:51,226:INFO:    python: 3.11.11 | packaged by Anaconda, Inc. | (main, Dec 11 2024, 16:34:19) [MSC v.1929 64 bit (AMD64)]
2025-02-21 02:31:51,226:INFO:executable: C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\python.exe
2025-02-21 02:31:51,226:INFO:   machine: Windows-10-10.0.26100-SP0
2025-02-21 02:31:51,226:INFO:PyCaret required dependencies:
2025-02-21 02:31:51,257:INFO:                 pip: 25.0
2025-02-21 02:31:51,257:INFO:          setuptools: 75.8.0
2025-02-21 02:31:51,273:INFO:             pycaret: 3.3.2
2025-02-21 02:31:51,273:INFO:             IPython: 8.32.0
2025-02-21 02:31:51,273:INFO:          ipywidgets: 8.1.5
2025-02-21 02:31:51,273:INFO:                tqdm: 4.67.1
2025-02-21 02:31:51,273:INFO:               numpy: 1.24.4
2025-02-21 02:31:51,273:INFO:              pandas: 1.5.3
2025-02-21 02:31:51,273:INFO:              jinja2: 3.1.5
2025-02-21 02:31:51,273:INFO:               scipy: 1.11.4
2025-02-21 02:31:51,273:INFO:              joblib: 1.3.2
2025-02-21 02:31:51,273:INFO:             sklearn: 1.4.2
2025-02-21 02:31:51,273:INFO:                pyod: 2.0.3
2025-02-21 02:31:51,273:INFO:            imblearn: 0.13.0
2025-02-21 02:31:51,273:INFO:   category_encoders: 2.7.0
2025-02-21 02:31:51,273:INFO:            lightgbm: 4.6.0
2025-02-21 02:31:51,273:INFO:               numba: 0.61.0
2025-02-21 02:31:51,273:INFO:            requests: 2.32.3
2025-02-21 02:31:51,273:INFO:          matplotlib: 3.7.5
2025-02-21 02:31:51,273:INFO:          scikitplot: 0.3.7
2025-02-21 02:31:51,273:INFO:         yellowbrick: 1.5
2025-02-21 02:31:51,273:INFO:              plotly: 5.24.1
2025-02-21 02:31:51,273:INFO:    plotly-resampler: Not installed
2025-02-21 02:31:51,273:INFO:             kaleido: 0.2.1
2025-02-21 02:31:51,273:INFO:           schemdraw: 0.15
2025-02-21 02:31:51,273:INFO:         statsmodels: 0.14.4
2025-02-21 02:31:51,273:INFO:              sktime: 0.26.0
2025-02-21 02:31:51,273:INFO:               tbats: 1.1.3
2025-02-21 02:31:51,273:INFO:            pmdarima: 2.0.4
2025-02-21 02:31:51,273:INFO:              psutil: 7.0.0
2025-02-21 02:31:51,273:INFO:          markupsafe: 3.0.2
2025-02-21 02:31:51,273:INFO:             pickle5: Not installed
2025-02-21 02:31:51,273:INFO:         cloudpickle: 3.1.1
2025-02-21 02:31:51,273:INFO:         deprecation: 2.1.0
2025-02-21 02:31:51,273:INFO:              xxhash: 3.5.0
2025-02-21 02:31:51,273:INFO:           wurlitzer: Not installed
2025-02-21 02:31:51,273:INFO:PyCaret optional dependencies:
2025-02-21 02:31:51,289:INFO:                shap: Not installed
2025-02-21 02:31:51,289:INFO:           interpret: Not installed
2025-02-21 02:31:51,289:INFO:                umap: Not installed
2025-02-21 02:31:51,289:INFO:     ydata_profiling: Not installed
2025-02-21 02:31:51,289:INFO:  explainerdashboard: Not installed
2025-02-21 02:31:51,289:INFO:             autoviz: Not installed
2025-02-21 02:31:51,289:INFO:           fairlearn: Not installed
2025-02-21 02:31:51,289:INFO:          deepchecks: Not installed
2025-02-21 02:31:51,289:INFO:             xgboost: Not installed
2025-02-21 02:31:51,289:INFO:            catboost: Not installed
2025-02-21 02:31:51,289:INFO:              kmodes: Not installed
2025-02-21 02:31:51,289:INFO:             mlxtend: Not installed
2025-02-21 02:31:51,289:INFO:       statsforecast: Not installed
2025-02-21 02:31:51,289:INFO:        tune_sklearn: Not installed
2025-02-21 02:31:51,289:INFO:                 ray: Not installed
2025-02-21 02:31:51,289:INFO:            hyperopt: Not installed
2025-02-21 02:31:51,289:INFO:              optuna: Not installed
2025-02-21 02:31:51,289:INFO:               skopt: Not installed
2025-02-21 02:31:51,289:INFO:              mlflow: Not installed
2025-02-21 02:31:51,289:INFO:              gradio: Not installed
2025-02-21 02:31:51,289:INFO:             fastapi: Not installed
2025-02-21 02:31:51,289:INFO:             uvicorn: Not installed
2025-02-21 02:31:51,289:INFO:              m2cgen: Not installed
2025-02-21 02:31:51,289:INFO:           evidently: Not installed
2025-02-21 02:31:51,289:INFO:               fugue: Not installed
2025-02-21 02:31:51,289:INFO:           streamlit: Not installed
2025-02-21 02:31:51,289:INFO:             prophet: Not installed
2025-02-21 02:31:51,289:INFO:None
2025-02-21 02:31:51,289:INFO:Set up data.
2025-02-21 02:31:51,305:INFO:Set up folding strategy.
2025-02-21 02:31:51,305:INFO:Set up train/test split.
2025-02-21 02:31:51,305:INFO:Set up index.
2025-02-21 02:31:51,305:INFO:Assigning column types.
2025-02-21 02:31:51,305:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-02-21 02:31:51,418:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-21 02:31:51,424:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-02-21 02:31:51,489:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-21 02:31:51,489:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-21 02:31:51,584:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-21 02:31:51,584:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-02-21 02:31:51,621:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-21 02:31:51,621:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-21 02:31:51,621:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-02-21 02:31:51,673:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-02-21 02:31:51,701:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-21 02:31:51,701:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-21 02:31:51,740:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-02-21 02:31:51,771:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-21 02:31:51,773:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-21 02:31:51,773:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-02-21 02:31:51,935:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-21 02:31:51,935:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-21 02:31:52,101:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-21 02:31:52,101:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-21 02:31:52,105:INFO:Preparing preprocessing pipeline...
2025-02-21 02:31:52,107:INFO:Set up label encoding.
2025-02-21 02:31:52,107:INFO:Set up simple imputation.
2025-02-21 02:31:52,107:INFO:Set up feature normalization.
2025-02-21 02:31:52,107:INFO:Set up feature selection.
2025-02-21 02:31:52,246:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-21 02:31:52,246:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-21 02:31:52,317:INFO:Finished creating preprocessing pipeline.
2025-02-21 02:31:52,331:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\JUPYTE~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Area', 'Perimeter', 'Compactness',
                                             'Length', 'Width',
                                             'AsymmetryCoeff', 'Groove'],
                                    transformer=SimpleIm...
                                                                                         learning_rate=0.1,
                                                                                         max_depth=-1,
                                                                                         min_child_samples=20,
                                                                                         min_child_weight=0.001,
                                                                                         min_split_gain=0.0,
                                                                                         n_estimators=100,
                                                                                         n_jobs=None,
                                                                                         num_leaves=31,
                                                                                         objective=None,
                                                                                         random_state=None,
                                                                                         reg_alpha=0.0,
                                                                                         reg_lambda=0.0,
                                                                                         subsample=1.0,
                                                                                         subsample_for_bin=200000,
                                                                                         subsample_freq=0),
                                                                importance_getter='auto',
                                                                max_features=1,
                                                                norm_order=1,
                                                                prefit=False,
                                                                threshold=-inf)))],
         verbose=False)
2025-02-21 02:31:52,331:INFO:Creating final display dataframe.
2025-02-21 02:31:52,482:INFO:Setup _display_container:                     Description             Value
0                    Session id                42
1                        Target              Type
2                   Target type        Multiclass
3                Target mapping  1: 0, 2: 1, 3: 2
4           Original data shape          (159, 8)
5        Transformed data shape          (159, 2)
6   Transformed train set shape          (111, 2)
7    Transformed test set shape           (48, 2)
8              Numeric features                 7
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13                    Normalize              True
14             Normalize method            zscore
15            Feature selection              True
16     Feature selection method           classic
17  Feature selection estimator          lightgbm
18  Number of features selected               0.2
19               Fold Generator   StratifiedKFold
20                  Fold Number                10
21                     CPU Jobs                -1
22                      Use GPU             False
23               Log Experiment             False
24              Experiment Name  clf-default-name
25                          USI              ca05
2025-02-21 02:31:52,601:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-21 02:31:52,601:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-21 02:31:52,807:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-21 02:31:52,807:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-21 02:31:52,811:INFO:setup() successfully completed in 1.63s...............
2025-02-21 02:31:52,813:INFO:Initializing compare_models()
2025-02-21 02:31:52,813:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FBDAE613D0>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001FBDAE613D0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2025-02-21 02:31:52,813:INFO:Checking exceptions
2025-02-21 02:31:52,821:INFO:Preparing display monitor
2025-02-21 02:31:52,839:INFO:Initializing Logistic Regression
2025-02-21 02:31:52,839:INFO:Total runtime is 0.0 minutes
2025-02-21 02:31:52,839:INFO:SubProcess create_model() called ==================================
2025-02-21 02:31:52,839:INFO:Initializing create_model()
2025-02-21 02:31:52,839:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FBDAE613D0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FBDB282450>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-21 02:31:52,839:INFO:Checking exceptions
2025-02-21 02:31:52,839:INFO:Importing libraries
2025-02-21 02:31:52,839:INFO:Copying training dataset
2025-02-21 02:31:52,855:INFO:Defining folds
2025-02-21 02:31:52,855:INFO:Declaring metric variables
2025-02-21 02:31:52,855:INFO:Importing untrained model
2025-02-21 02:31:52,855:INFO:Logistic Regression Imported successfully
2025-02-21 02:31:52,855:INFO:Starting cross validation
2025-02-21 02:31:52,871:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-21 02:31:58,531:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:31:58,534:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:31:58,536:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:58,540:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:58,546:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:58,538:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:58,553:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:58,555:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:31:58,558:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:58,562:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:58,567:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:58,570:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:58,577:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:31:58,580:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:31:58,583:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:58,586:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:58,588:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:58,593:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:58,594:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:58,594:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:31:58,596:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:58,600:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:58,606:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:58,609:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:58,723:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:31:58,727:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:31:58,727:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:58,731:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:58,731:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:58,735:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:58,735:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:58,738:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:58,738:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:31:58,738:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:58,738:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:58,738:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-21 02:31:58,748:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:58,751:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:31:58,754:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:58,758:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:58,758:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:31:58,769:INFO:Calculating mean and std
2025-02-21 02:31:58,769:INFO:Creating metrics dataframe
2025-02-21 02:31:58,779:INFO:Uploading results into container
2025-02-21 02:31:58,779:INFO:Uploading model into container now
2025-02-21 02:31:58,781:INFO:_master_model_container: 1
2025-02-21 02:31:58,781:INFO:_display_container: 2
2025-02-21 02:31:58,782:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-02-21 02:31:58,782:INFO:create_model() successfully completed......................................
2025-02-21 02:31:58,918:INFO:SubProcess create_model() end ==================================
2025-02-21 02:31:58,918:INFO:Creating metrics dataframe
2025-02-21 02:31:58,932:INFO:Initializing K Neighbors Classifier
2025-02-21 02:31:58,932:INFO:Total runtime is 0.10154152313868205 minutes
2025-02-21 02:31:58,934:INFO:SubProcess create_model() called ==================================
2025-02-21 02:31:58,934:INFO:Initializing create_model()
2025-02-21 02:31:58,934:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FBDAE613D0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FBDB282450>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-21 02:31:58,934:INFO:Checking exceptions
2025-02-21 02:31:58,934:INFO:Importing libraries
2025-02-21 02:31:58,934:INFO:Copying training dataset
2025-02-21 02:31:58,934:INFO:Defining folds
2025-02-21 02:31:58,934:INFO:Declaring metric variables
2025-02-21 02:31:58,934:INFO:Importing untrained model
2025-02-21 02:31:58,934:INFO:K Neighbors Classifier Imported successfully
2025-02-21 02:31:58,934:INFO:Starting cross validation
2025-02-21 02:31:58,972:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-21 02:32:01,037:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:01,044:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:01,050:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:01,150:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:01,156:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:01,163:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:01,291:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:01,296:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:01,301:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:01,359:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:01,368:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:01,375:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:04,573:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:04,579:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:04,584:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:04,601:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:04,601:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:04,607:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:04,609:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:04,610:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:04,614:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:04,636:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:04,654:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:04,664:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:04,783:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:04,783:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:04,793:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:04,868:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:04,876:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:04,886:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:04,906:INFO:Calculating mean and std
2025-02-21 02:32:04,910:INFO:Creating metrics dataframe
2025-02-21 02:32:04,920:INFO:Uploading results into container
2025-02-21 02:32:04,922:INFO:Uploading model into container now
2025-02-21 02:32:04,924:INFO:_master_model_container: 2
2025-02-21 02:32:04,924:INFO:_display_container: 2
2025-02-21 02:32:04,924:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-02-21 02:32:04,924:INFO:create_model() successfully completed......................................
2025-02-21 02:32:05,065:INFO:SubProcess create_model() end ==================================
2025-02-21 02:32:05,065:INFO:Creating metrics dataframe
2025-02-21 02:32:05,083:INFO:Initializing Naive Bayes
2025-02-21 02:32:05,083:INFO:Total runtime is 0.20406731764475505 minutes
2025-02-21 02:32:05,085:INFO:SubProcess create_model() called ==================================
2025-02-21 02:32:05,085:INFO:Initializing create_model()
2025-02-21 02:32:05,085:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FBDAE613D0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FBDB282450>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-21 02:32:05,085:INFO:Checking exceptions
2025-02-21 02:32:05,085:INFO:Importing libraries
2025-02-21 02:32:05,085:INFO:Copying training dataset
2025-02-21 02:32:05,095:INFO:Defining folds
2025-02-21 02:32:05,095:INFO:Declaring metric variables
2025-02-21 02:32:05,095:INFO:Importing untrained model
2025-02-21 02:32:05,095:INFO:Naive Bayes Imported successfully
2025-02-21 02:32:05,095:INFO:Starting cross validation
2025-02-21 02:32:05,113:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-21 02:32:06,111:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:06,115:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:06,121:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:06,132:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:06,138:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:06,143:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:06,153:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:06,158:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:06,165:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:06,193:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:06,203:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:06,209:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:06,228:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:06,234:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:06,238:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:06,262:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:06,269:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:06,275:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:06,281:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:06,289:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:06,294:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:06,314:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:06,314:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:06,318:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:06,320:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:06,324:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:06,326:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:06,334:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:06,338:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:06,344:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:06,354:INFO:Calculating mean and std
2025-02-21 02:32:06,356:INFO:Creating metrics dataframe
2025-02-21 02:32:06,364:INFO:Uploading results into container
2025-02-21 02:32:06,366:INFO:Uploading model into container now
2025-02-21 02:32:06,366:INFO:_master_model_container: 3
2025-02-21 02:32:06,366:INFO:_display_container: 2
2025-02-21 02:32:06,366:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-02-21 02:32:06,366:INFO:create_model() successfully completed......................................
2025-02-21 02:32:06,493:INFO:SubProcess create_model() end ==================================
2025-02-21 02:32:06,493:INFO:Creating metrics dataframe
2025-02-21 02:32:06,515:INFO:Initializing Decision Tree Classifier
2025-02-21 02:32:06,515:INFO:Total runtime is 0.2279291073481242 minutes
2025-02-21 02:32:06,517:INFO:SubProcess create_model() called ==================================
2025-02-21 02:32:06,517:INFO:Initializing create_model()
2025-02-21 02:32:06,517:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FBDAE613D0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FBDB282450>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-21 02:32:06,517:INFO:Checking exceptions
2025-02-21 02:32:06,517:INFO:Importing libraries
2025-02-21 02:32:06,517:INFO:Copying training dataset
2025-02-21 02:32:06,527:INFO:Defining folds
2025-02-21 02:32:06,527:INFO:Declaring metric variables
2025-02-21 02:32:06,527:INFO:Importing untrained model
2025-02-21 02:32:06,529:INFO:Decision Tree Classifier Imported successfully
2025-02-21 02:32:06,529:INFO:Starting cross validation
2025-02-21 02:32:06,552:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-21 02:32:07,629:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:07,630:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:07,632:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:07,636:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:07,637:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:07,643:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:07,659:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:07,663:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:07,667:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:07,679:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:07,685:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:07,692:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:07,722:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:07,726:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:07,730:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:07,732:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:07,736:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:07,742:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:07,747:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:07,752:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:07,758:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:07,770:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:07,777:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:07,783:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:07,805:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:07,809:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:07,815:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:07,832:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:07,837:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:07,842:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:07,854:INFO:Calculating mean and std
2025-02-21 02:32:07,856:INFO:Creating metrics dataframe
2025-02-21 02:32:07,864:INFO:Uploading results into container
2025-02-21 02:32:07,866:INFO:Uploading model into container now
2025-02-21 02:32:07,866:INFO:_master_model_container: 4
2025-02-21 02:32:07,866:INFO:_display_container: 2
2025-02-21 02:32:07,866:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best')
2025-02-21 02:32:07,866:INFO:create_model() successfully completed......................................
2025-02-21 02:32:08,003:INFO:SubProcess create_model() end ==================================
2025-02-21 02:32:08,003:INFO:Creating metrics dataframe
2025-02-21 02:32:08,003:INFO:Initializing SVM - Linear Kernel
2025-02-21 02:32:08,003:INFO:Total runtime is 0.2527356783548991 minutes
2025-02-21 02:32:08,003:INFO:SubProcess create_model() called ==================================
2025-02-21 02:32:08,019:INFO:Initializing create_model()
2025-02-21 02:32:08,019:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FBDAE613D0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FBDB282450>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-21 02:32:08,019:INFO:Checking exceptions
2025-02-21 02:32:08,019:INFO:Importing libraries
2025-02-21 02:32:08,019:INFO:Copying training dataset
2025-02-21 02:32:08,019:INFO:Defining folds
2025-02-21 02:32:08,019:INFO:Declaring metric variables
2025-02-21 02:32:08,019:INFO:Importing untrained model
2025-02-21 02:32:08,019:INFO:SVM - Linear Kernel Imported successfully
2025-02-21 02:32:08,019:INFO:Starting cross validation
2025-02-21 02:32:08,058:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-21 02:32:08,941:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:32:08,943:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:32:08,944:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:08,948:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:08,950:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:32:08,950:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:08,954:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:08,954:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:08,956:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:08,958:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-21 02:32:08,962:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:08,962:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:08,971:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:08,995:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:32:08,995:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:32:08,997:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:08,999:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:09,000:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:32:09,005:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:09,005:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:09,005:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:09,007:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-21 02:32:09,011:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:09,011:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:09,011:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:09,015:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-21 02:32:09,017:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:09,031:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:32:09,035:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:09,041:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:09,046:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:09,064:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:32:09,068:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:09,074:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:09,077:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-21 02:32:09,079:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:09,102:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:32:09,104:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:09,109:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:09,111:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-21 02:32:09,115:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:09,118:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:32:09,120:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:09,127:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:09,131:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:09,147:INFO:Calculating mean and std
2025-02-21 02:32:09,147:INFO:Creating metrics dataframe
2025-02-21 02:32:09,154:INFO:Uploading results into container
2025-02-21 02:32:09,156:INFO:Uploading model into container now
2025-02-21 02:32:09,156:INFO:_master_model_container: 5
2025-02-21 02:32:09,156:INFO:_display_container: 2
2025-02-21 02:32:09,156:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=42, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-02-21 02:32:09,156:INFO:create_model() successfully completed......................................
2025-02-21 02:32:09,292:INFO:SubProcess create_model() end ==================================
2025-02-21 02:32:09,292:INFO:Creating metrics dataframe
2025-02-21 02:32:09,292:INFO:Initializing Ridge Classifier
2025-02-21 02:32:09,292:INFO:Total runtime is 0.27421864271163937 minutes
2025-02-21 02:32:09,308:INFO:SubProcess create_model() called ==================================
2025-02-21 02:32:09,308:INFO:Initializing create_model()
2025-02-21 02:32:09,308:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FBDAE613D0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FBDB282450>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-21 02:32:09,308:INFO:Checking exceptions
2025-02-21 02:32:09,308:INFO:Importing libraries
2025-02-21 02:32:09,308:INFO:Copying training dataset
2025-02-21 02:32:09,308:INFO:Defining folds
2025-02-21 02:32:09,308:INFO:Declaring metric variables
2025-02-21 02:32:09,308:INFO:Importing untrained model
2025-02-21 02:32:09,308:INFO:Ridge Classifier Imported successfully
2025-02-21 02:32:09,308:INFO:Starting cross validation
2025-02-21 02:32:09,345:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-21 02:32:10,138:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:32:10,142:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:10,148:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:10,151:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-21 02:32:10,156:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:10,162:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:32:10,166:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:10,173:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:10,176:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-21 02:32:10,180:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:10,213:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:32:10,216:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:10,221:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:10,225:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-21 02:32:10,227:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:10,247:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:32:10,251:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:32:10,255:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:10,257:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:10,262:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-21 02:32:10,264:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:10,266:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:10,268:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-21 02:32:10,272:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:10,286:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:32:10,288:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:10,306:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:10,306:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:32:10,310:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-21 02:32:10,310:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:10,312:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:10,318:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:10,320:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-21 02:32:10,322:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:10,330:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:32:10,332:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:32:10,334:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:10,334:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:10,340:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:10,342:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:10,342:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-21 02:32:10,344:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-21 02:32:10,346:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:10,349:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:10,349:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:32:10,351:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:10,357:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:10,361:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:10,379:INFO:Calculating mean and std
2025-02-21 02:32:10,381:INFO:Creating metrics dataframe
2025-02-21 02:32:10,387:INFO:Uploading results into container
2025-02-21 02:32:10,389:INFO:Uploading model into container now
2025-02-21 02:32:10,389:INFO:_master_model_container: 6
2025-02-21 02:32:10,389:INFO:_display_container: 2
2025-02-21 02:32:10,389:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=42, solver='auto',
                tol=0.0001)
2025-02-21 02:32:10,389:INFO:create_model() successfully completed......................................
2025-02-21 02:32:10,496:INFO:SubProcess create_model() end ==================================
2025-02-21 02:32:10,498:INFO:Creating metrics dataframe
2025-02-21 02:32:10,513:INFO:Initializing Random Forest Classifier
2025-02-21 02:32:10,513:INFO:Total runtime is 0.29457291364669796 minutes
2025-02-21 02:32:10,513:INFO:SubProcess create_model() called ==================================
2025-02-21 02:32:10,513:INFO:Initializing create_model()
2025-02-21 02:32:10,515:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FBDAE613D0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FBDB282450>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-21 02:32:10,515:INFO:Checking exceptions
2025-02-21 02:32:10,515:INFO:Importing libraries
2025-02-21 02:32:10,515:INFO:Copying training dataset
2025-02-21 02:32:10,524:INFO:Defining folds
2025-02-21 02:32:10,524:INFO:Declaring metric variables
2025-02-21 02:32:10,524:INFO:Importing untrained model
2025-02-21 02:32:10,524:INFO:Random Forest Classifier Imported successfully
2025-02-21 02:32:10,524:INFO:Starting cross validation
2025-02-21 02:32:10,545:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-21 02:32:12,057:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:12,064:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:12,070:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:12,072:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:12,079:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:12,086:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:12,101:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:12,111:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:12,120:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:12,129:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:12,137:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:12,146:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:12,162:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:12,169:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:12,176:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:12,178:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:12,184:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:12,193:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:12,205:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:12,213:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:12,219:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:12,298:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:12,306:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:12,314:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:12,316:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:12,316:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:12,330:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:12,368:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:12,378:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:12,388:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:12,409:INFO:Calculating mean and std
2025-02-21 02:32:12,409:INFO:Creating metrics dataframe
2025-02-21 02:32:12,409:INFO:Uploading results into container
2025-02-21 02:32:12,409:INFO:Uploading model into container now
2025-02-21 02:32:12,409:INFO:_master_model_container: 7
2025-02-21 02:32:12,409:INFO:_display_container: 2
2025-02-21 02:32:12,425:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2025-02-21 02:32:12,425:INFO:create_model() successfully completed......................................
2025-02-21 02:32:12,568:INFO:SubProcess create_model() end ==================================
2025-02-21 02:32:12,568:INFO:Creating metrics dataframe
2025-02-21 02:32:12,590:INFO:Initializing Quadratic Discriminant Analysis
2025-02-21 02:32:12,590:INFO:Total runtime is 0.3291760683059692 minutes
2025-02-21 02:32:12,590:INFO:SubProcess create_model() called ==================================
2025-02-21 02:32:12,590:INFO:Initializing create_model()
2025-02-21 02:32:12,590:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FBDAE613D0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FBDB282450>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-21 02:32:12,592:INFO:Checking exceptions
2025-02-21 02:32:12,592:INFO:Importing libraries
2025-02-21 02:32:12,592:INFO:Copying training dataset
2025-02-21 02:32:12,601:INFO:Defining folds
2025-02-21 02:32:12,601:INFO:Declaring metric variables
2025-02-21 02:32:12,601:INFO:Importing untrained model
2025-02-21 02:32:12,601:INFO:Quadratic Discriminant Analysis Imported successfully
2025-02-21 02:32:12,601:INFO:Starting cross validation
2025-02-21 02:32:12,618:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-21 02:32:13,578:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:32:13,581:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:13,586:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:13,592:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:13,609:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:32:13,611:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:13,615:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:13,619:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:13,638:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:32:13,640:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:13,643:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:13,648:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:13,683:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:32:13,687:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:13,691:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:13,698:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:13,719:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:32:13,721:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:13,729:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:13,740:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:32:13,742:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:13,742:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:13,749:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:13,758:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:13,763:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:32:13,768:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:13,772:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:13,777:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:13,799:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:32:13,801:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:13,801:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:32:13,805:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:13,807:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:13,811:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:13,811:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:13,817:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:13,823:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:32:13,825:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:13,831:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:13,837:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:13,847:INFO:Calculating mean and std
2025-02-21 02:32:13,849:INFO:Creating metrics dataframe
2025-02-21 02:32:13,855:INFO:Uploading results into container
2025-02-21 02:32:13,857:INFO:Uploading model into container now
2025-02-21 02:32:13,857:INFO:_master_model_container: 8
2025-02-21 02:32:13,857:INFO:_display_container: 2
2025-02-21 02:32:13,857:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-02-21 02:32:13,857:INFO:create_model() successfully completed......................................
2025-02-21 02:32:13,979:INFO:SubProcess create_model() end ==================================
2025-02-21 02:32:13,979:INFO:Creating metrics dataframe
2025-02-21 02:32:13,990:INFO:Initializing Ada Boost Classifier
2025-02-21 02:32:13,990:INFO:Total runtime is 0.3525158603986104 minutes
2025-02-21 02:32:13,990:INFO:SubProcess create_model() called ==================================
2025-02-21 02:32:13,990:INFO:Initializing create_model()
2025-02-21 02:32:13,990:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FBDAE613D0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FBDB282450>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-21 02:32:13,990:INFO:Checking exceptions
2025-02-21 02:32:13,990:INFO:Importing libraries
2025-02-21 02:32:13,990:INFO:Copying training dataset
2025-02-21 02:32:14,006:INFO:Defining folds
2025-02-21 02:32:14,006:INFO:Declaring metric variables
2025-02-21 02:32:14,006:INFO:Importing untrained model
2025-02-21 02:32:14,006:INFO:Ada Boost Classifier Imported successfully
2025-02-21 02:32:14,006:INFO:Starting cross validation
2025-02-21 02:32:14,040:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-21 02:32:14,817:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-21 02:32:14,828:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-21 02:32:14,872:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-21 02:32:14,874:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-21 02:32:14,892:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-21 02:32:14,892:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-21 02:32:15,068:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:32:15,071:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:15,077:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:15,077:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:32:15,079:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-21 02:32:15,081:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:15,083:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:15,094:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:15,102:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:15,117:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-21 02:32:15,137:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:32:15,139:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:32:15,139:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:15,141:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:15,147:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:15,148:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:15,153:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:15,153:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:15,157:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:32:15,158:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-21 02:32:15,160:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:15,165:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:32:15,168:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:15,168:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:15,170:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-21 02:32:15,174:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:15,178:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:15,205:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-21 02:32:15,252:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-21 02:32:15,384:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:32:15,388:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:15,397:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:15,406:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:15,417:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:32:15,422:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:15,429:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:15,437:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:15,469:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:32:15,470:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:15,480:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:15,484:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:15,516:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:32:15,521:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:15,521:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:15,531:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:15,552:INFO:Calculating mean and std
2025-02-21 02:32:15,552:INFO:Creating metrics dataframe
2025-02-21 02:32:15,563:INFO:Uploading results into container
2025-02-21 02:32:15,565:INFO:Uploading model into container now
2025-02-21 02:32:15,565:INFO:_master_model_container: 9
2025-02-21 02:32:15,567:INFO:_display_container: 2
2025-02-21 02:32:15,567:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=42)
2025-02-21 02:32:15,567:INFO:create_model() successfully completed......................................
2025-02-21 02:32:15,690:INFO:SubProcess create_model() end ==================================
2025-02-21 02:32:15,690:INFO:Creating metrics dataframe
2025-02-21 02:32:15,706:INFO:Initializing Gradient Boosting Classifier
2025-02-21 02:32:15,706:INFO:Total runtime is 0.3811112999916076 minutes
2025-02-21 02:32:15,706:INFO:SubProcess create_model() called ==================================
2025-02-21 02:32:15,706:INFO:Initializing create_model()
2025-02-21 02:32:15,706:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FBDAE613D0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FBDB282450>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-21 02:32:15,706:INFO:Checking exceptions
2025-02-21 02:32:15,706:INFO:Importing libraries
2025-02-21 02:32:15,706:INFO:Copying training dataset
2025-02-21 02:32:15,722:INFO:Defining folds
2025-02-21 02:32:15,722:INFO:Declaring metric variables
2025-02-21 02:32:15,722:INFO:Importing untrained model
2025-02-21 02:32:15,722:INFO:Gradient Boosting Classifier Imported successfully
2025-02-21 02:32:15,732:INFO:Starting cross validation
2025-02-21 02:32:15,751:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-21 02:32:17,361:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:32:17,365:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:17,365:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:32:17,370:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:17,375:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:17,380:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:17,390:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:17,396:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:17,427:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:32:17,441:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:17,446:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:32:17,447:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:17,449:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:17,454:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:17,455:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:17,460:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:32:17,464:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:17,468:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:17,473:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:17,477:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:32:17,479:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:17,479:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:17,483:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:17,483:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:17,954:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:32:17,958:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:17,960:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:17,965:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:18,003:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:32:18,007:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:18,012:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:32:18,014:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:18,016:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:18,019:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:18,019:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:18,022:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:18,042:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:32:18,044:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:18,052:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:18,059:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:18,080:INFO:Calculating mean and std
2025-02-21 02:32:18,082:INFO:Creating metrics dataframe
2025-02-21 02:32:18,088:INFO:Uploading results into container
2025-02-21 02:32:18,088:INFO:Uploading model into container now
2025-02-21 02:32:18,088:INFO:_master_model_container: 10
2025-02-21 02:32:18,088:INFO:_display_container: 2
2025-02-21 02:32:18,090:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-02-21 02:32:18,090:INFO:create_model() successfully completed......................................
2025-02-21 02:32:18,202:INFO:SubProcess create_model() end ==================================
2025-02-21 02:32:18,202:INFO:Creating metrics dataframe
2025-02-21 02:32:18,218:INFO:Initializing Linear Discriminant Analysis
2025-02-21 02:32:18,218:INFO:Total runtime is 0.4229765574137369 minutes
2025-02-21 02:32:18,218:INFO:SubProcess create_model() called ==================================
2025-02-21 02:32:18,218:INFO:Initializing create_model()
2025-02-21 02:32:18,218:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FBDAE613D0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FBDB282450>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-21 02:32:18,218:INFO:Checking exceptions
2025-02-21 02:32:18,218:INFO:Importing libraries
2025-02-21 02:32:18,218:INFO:Copying training dataset
2025-02-21 02:32:18,218:INFO:Defining folds
2025-02-21 02:32:18,233:INFO:Declaring metric variables
2025-02-21 02:32:18,233:INFO:Importing untrained model
2025-02-21 02:32:18,233:INFO:Linear Discriminant Analysis Imported successfully
2025-02-21 02:32:18,233:INFO:Starting cross validation
2025-02-21 02:32:18,252:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-21 02:32:19,339:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:32:19,339:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:32:19,341:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:19,343:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:19,347:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:19,347:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:19,353:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:19,357:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:19,386:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:32:19,388:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:19,394:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:19,399:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:19,403:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:32:19,405:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:32:19,405:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:19,409:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:19,412:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:19,414:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:19,423:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:19,423:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:19,445:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:32:19,449:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:19,449:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:32:19,453:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:19,455:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:19,459:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:19,463:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:19,468:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:19,472:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:32:19,476:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:19,482:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:19,488:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:19,492:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:32:19,495:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:19,501:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:19,505:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:19,509:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-21 02:32:19,513:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:19,517:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:19,522:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:19,535:INFO:Calculating mean and std
2025-02-21 02:32:19,537:INFO:Creating metrics dataframe
2025-02-21 02:32:19,544:INFO:Uploading results into container
2025-02-21 02:32:19,544:INFO:Uploading model into container now
2025-02-21 02:32:19,546:INFO:_master_model_container: 11
2025-02-21 02:32:19,546:INFO:_display_container: 2
2025-02-21 02:32:19,546:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-02-21 02:32:19,546:INFO:create_model() successfully completed......................................
2025-02-21 02:32:19,655:INFO:SubProcess create_model() end ==================================
2025-02-21 02:32:19,655:INFO:Creating metrics dataframe
2025-02-21 02:32:19,671:INFO:Initializing Extra Trees Classifier
2025-02-21 02:32:19,671:INFO:Total runtime is 0.4471948862075805 minutes
2025-02-21 02:32:19,671:INFO:SubProcess create_model() called ==================================
2025-02-21 02:32:19,671:INFO:Initializing create_model()
2025-02-21 02:32:19,671:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FBDAE613D0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FBDB282450>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-21 02:32:19,671:INFO:Checking exceptions
2025-02-21 02:32:19,671:INFO:Importing libraries
2025-02-21 02:32:19,671:INFO:Copying training dataset
2025-02-21 02:32:19,687:INFO:Defining folds
2025-02-21 02:32:19,687:INFO:Declaring metric variables
2025-02-21 02:32:19,687:INFO:Importing untrained model
2025-02-21 02:32:19,687:INFO:Extra Trees Classifier Imported successfully
2025-02-21 02:32:19,687:INFO:Starting cross validation
2025-02-21 02:32:19,733:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-21 02:32:20,964:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:20,973:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:20,980:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:20,980:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:20,988:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:20,998:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:21,016:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:21,022:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:21,030:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:21,041:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:21,047:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:21,054:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:21,054:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:21,059:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:21,063:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:21,089:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:21,099:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:21,104:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:21,161:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:21,171:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:21,175:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:21,204:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:21,204:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:21,218:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:21,218:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:21,223:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:21,223:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:21,285:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:21,296:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:21,299:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:21,327:INFO:Calculating mean and std
2025-02-21 02:32:21,327:INFO:Creating metrics dataframe
2025-02-21 02:32:21,331:INFO:Uploading results into container
2025-02-21 02:32:21,331:INFO:Uploading model into container now
2025-02-21 02:32:21,331:INFO:_master_model_container: 12
2025-02-21 02:32:21,331:INFO:_display_container: 2
2025-02-21 02:32:21,331:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False)
2025-02-21 02:32:21,331:INFO:create_model() successfully completed......................................
2025-02-21 02:32:21,474:INFO:SubProcess create_model() end ==================================
2025-02-21 02:32:21,474:INFO:Creating metrics dataframe
2025-02-21 02:32:21,490:INFO:Initializing Light Gradient Boosting Machine
2025-02-21 02:32:21,490:INFO:Total runtime is 0.47750778198242183 minutes
2025-02-21 02:32:21,490:INFO:SubProcess create_model() called ==================================
2025-02-21 02:32:21,490:INFO:Initializing create_model()
2025-02-21 02:32:21,490:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FBDAE613D0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FBDB282450>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-21 02:32:21,490:INFO:Checking exceptions
2025-02-21 02:32:21,490:INFO:Importing libraries
2025-02-21 02:32:21,490:INFO:Copying training dataset
2025-02-21 02:32:21,490:INFO:Defining folds
2025-02-21 02:32:21,490:INFO:Declaring metric variables
2025-02-21 02:32:21,490:INFO:Importing untrained model
2025-02-21 02:32:21,506:INFO:Light Gradient Boosting Machine Imported successfully
2025-02-21 02:32:21,506:INFO:Starting cross validation
2025-02-21 02:32:21,521:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-21 02:32:23,635:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:23,653:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:23,659:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:23,666:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:23,675:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:23,679:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:23,686:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:23,690:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:23,692:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:23,703:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:23,707:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:23,710:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:23,742:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:23,747:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:23,754:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:23,782:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:23,788:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:23,790:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:23,795:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:23,795:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:23,803:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:23,829:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:23,835:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:23,848:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:23,864:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:23,868:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:23,874:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:23,884:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:23,888:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:23,892:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-21 02:32:23,894:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:23,907:INFO:Calculating mean and std
2025-02-21 02:32:23,909:INFO:Creating metrics dataframe
2025-02-21 02:32:23,915:INFO:Uploading results into container
2025-02-21 02:32:23,917:INFO:Uploading model into container now
2025-02-21 02:32:23,917:INFO:_master_model_container: 13
2025-02-21 02:32:23,918:INFO:_display_container: 2
2025-02-21 02:32:23,918:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-02-21 02:32:23,918:INFO:create_model() successfully completed......................................
2025-02-21 02:32:24,028:INFO:SubProcess create_model() end ==================================
2025-02-21 02:32:24,028:INFO:Creating metrics dataframe
2025-02-21 02:32:24,048:INFO:Initializing Dummy Classifier
2025-02-21 02:32:24,048:INFO:Total runtime is 0.5201535701751708 minutes
2025-02-21 02:32:24,048:INFO:SubProcess create_model() called ==================================
2025-02-21 02:32:24,048:INFO:Initializing create_model()
2025-02-21 02:32:24,048:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FBDAE613D0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FBDB282450>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-21 02:32:24,048:INFO:Checking exceptions
2025-02-21 02:32:24,048:INFO:Importing libraries
2025-02-21 02:32:24,050:INFO:Copying training dataset
2025-02-21 02:32:24,055:INFO:Defining folds
2025-02-21 02:32:24,055:INFO:Declaring metric variables
2025-02-21 02:32:24,056:INFO:Importing untrained model
2025-02-21 02:32:24,056:INFO:Dummy Classifier Imported successfully
2025-02-21 02:32:24,056:INFO:Starting cross validation
2025-02-21 02:32:24,075:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-21 02:32:25,182:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:25,188:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:25,190:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-21 02:32:25,192:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:25,220:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:25,226:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:25,229:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-21 02:32:25,231:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:25,239:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:25,245:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:25,245:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:25,247:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-21 02:32:25,249:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-21 02:32:25,253:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:25,255:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:25,276:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:25,280:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:25,284:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-21 02:32:25,286:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:25,298:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:25,302:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:25,304:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-21 02:32:25,308:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:25,335:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:25,341:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:25,344:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-21 02:32:25,348:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:25,355:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:25,359:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:25,364:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-21 02:32:25,364:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-21 02:32:25,366:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:25,368:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:25,380:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:25,386:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:25,388:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-21 02:32:25,391:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:25,400:INFO:Calculating mean and std
2025-02-21 02:32:25,402:INFO:Creating metrics dataframe
2025-02-21 02:32:25,409:INFO:Uploading results into container
2025-02-21 02:32:25,409:INFO:Uploading model into container now
2025-02-21 02:32:25,411:INFO:_master_model_container: 14
2025-02-21 02:32:25,411:INFO:_display_container: 2
2025-02-21 02:32:25,411:INFO:DummyClassifier(constant=None, random_state=42, strategy='prior')
2025-02-21 02:32:25,411:INFO:create_model() successfully completed......................................
2025-02-21 02:32:25,533:INFO:SubProcess create_model() end ==================================
2025-02-21 02:32:25,533:INFO:Creating metrics dataframe
2025-02-21 02:32:25,558:INFO:Initializing create_model()
2025-02-21 02:32:25,558:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FBDAE613D0>, estimator=AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=42), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-21 02:32:25,558:INFO:Checking exceptions
2025-02-21 02:32:25,565:INFO:Importing libraries
2025-02-21 02:32:25,565:INFO:Copying training dataset
2025-02-21 02:32:25,565:INFO:Defining folds
2025-02-21 02:32:25,565:INFO:Declaring metric variables
2025-02-21 02:32:25,565:INFO:Importing untrained model
2025-02-21 02:32:25,565:INFO:Declaring custom model
2025-02-21 02:32:25,565:INFO:Ada Boost Classifier Imported successfully
2025-02-21 02:32:25,597:INFO:Cross validation set to False
2025-02-21 02:32:25,597:INFO:Fitting Model
2025-02-21 02:32:25,754:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000087 seconds.
2025-02-21 02:32:25,754:INFO:You can set `force_row_wise=true` to remove the overhead.
2025-02-21 02:32:25,754:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2025-02-21 02:32:25,756:INFO:[LightGBM] [Info] Total Bins 264
2025-02-21 02:32:25,756:INFO:[LightGBM] [Info] Number of data points in the train set: 111, number of used features: 7
2025-02-21 02:32:25,758:INFO:[LightGBM] [Info] Start training from score -1.098612
2025-02-21 02:32:25,758:INFO:[LightGBM] [Info] Start training from score -1.071944
2025-02-21 02:32:25,758:INFO:[LightGBM] [Info] Start training from score -1.126011
2025-02-21 02:32:25,758:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,758:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,758:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,760:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,760:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,760:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,760:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,760:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,762:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,762:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,762:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,762:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,762:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,762:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,762:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,764:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,764:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,764:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,764:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,764:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,764:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,764:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,764:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,766:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,766:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,766:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,766:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,766:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,766:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,766:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,766:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,766:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,766:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,766:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,766:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,766:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,768:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,768:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,768:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,768:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,768:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,768:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,768:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,768:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,768:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,770:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,770:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,770:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,770:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,770:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,770:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,772:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,772:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,772:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,772:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,772:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,772:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,772:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,772:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,772:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,772:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,774:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,774:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,774:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,774:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,774:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,774:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,774:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,774:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,774:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,774:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,776:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,776:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,776:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,776:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,776:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,776:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,776:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,776:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,776:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,776:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,778:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,778:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,778:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,778:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,778:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,778:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,778:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,778:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,778:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,778:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,780:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,780:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,780:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,780:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,780:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,780:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,780:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,780:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,780:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,780:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,782:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,782:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,782:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,782:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,782:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,782:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,782:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,782:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,782:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,782:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,782:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,784:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,784:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,784:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,784:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,784:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,784:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,784:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,784:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,786:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,786:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,786:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,786:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,786:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,786:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,786:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,786:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,786:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,788:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,788:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,788:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,788:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,788:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,788:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,788:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,788:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,788:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,788:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,790:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,790:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,790:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,790:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,790:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,790:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,790:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,790:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,792:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,792:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,792:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,792:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,792:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,792:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,792:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,792:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,792:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,794:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,794:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,794:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,794:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,794:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,794:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,794:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,794:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,794:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,796:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,796:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,796:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,796:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,796:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,796:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,796:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,796:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,796:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,796:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,798:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,798:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,798:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,798:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,798:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,798:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,798:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,798:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,798:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,800:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,800:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,800:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,800:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,800:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,800:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,800:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,802:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,802:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,802:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,802:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,802:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,802:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,802:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,802:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,804:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,804:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,804:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,804:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,804:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,804:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,804:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,804:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,806:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,806:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,806:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,806:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,806:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,806:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,806:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,806:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,806:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,808:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,808:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,808:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,808:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,808:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,808:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,808:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,808:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,808:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,810:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,810:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,810:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,810:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,810:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,810:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,810:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,810:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,810:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,810:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,812:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,812:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,812:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,812:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,812:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,812:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,812:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,812:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,814:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,814:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,814:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,814:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,814:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,814:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,814:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,814:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,814:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,816:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,816:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,816:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,816:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,816:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,816:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,816:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,817:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,817:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,817:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,817:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,817:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,817:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,817:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,817:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,817:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,819:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,819:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,819:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,819:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,819:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,819:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,819:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,819:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,819:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,819:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,819:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,821:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,821:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,821:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,821:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,821:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,821:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,821:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,821:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,821:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,821:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,821:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,823:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,823:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,823:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,823:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,823:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,823:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,823:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,823:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,823:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,823:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-21 02:32:25,853:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-21 02:32:26,008:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=42)
2025-02-21 02:32:26,008:INFO:create_model() successfully completed......................................
2025-02-21 02:32:26,167:INFO:_master_model_container: 14
2025-02-21 02:32:26,167:INFO:_display_container: 2
2025-02-21 02:32:26,167:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=42)
2025-02-21 02:32:26,167:INFO:compare_models() successfully completed......................................
2025-02-21 02:32:26,167:INFO:Initializing evaluate_model()
2025-02-21 02:32:26,167:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FBDAE613D0>, estimator=AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=42), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2025-02-21 02:32:26,167:INFO:Initializing plot_model()
2025-02-21 02:32:26,167:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FBDAE613D0>, estimator=AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=42), plot=pipeline, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2025-02-21 02:32:26,167:INFO:Checking exceptions
2025-02-21 02:32:26,183:INFO:Preloading libraries
2025-02-21 02:32:26,187:INFO:Copying training dataset
2025-02-21 02:32:26,187:INFO:Plot type: pipeline
2025-02-21 02:32:26,537:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py:582: UserWarning: Matplotlib is currently using agg, which is a non-GUI backend, so cannot show the figure.
  plt.show()

2025-02-21 02:32:26,539:INFO:Visual Rendered Successfully
2025-02-21 02:32:26,667:INFO:plot_model() successfully completed......................................
2025-02-21 02:32:26,683:INFO:Initializing plot_model()
2025-02-21 02:32:26,683:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FBDAE613D0>, estimator=AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=42), plot=confusion_matrix, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2025-02-21 02:32:26,683:INFO:Checking exceptions
2025-02-21 02:32:26,683:INFO:Preloading libraries
2025-02-21 02:32:26,700:INFO:Copying training dataset
2025-02-21 02:32:26,700:INFO:Plot type: confusion_matrix
2025-02-21 02:32:26,984:INFO:Fitting Model
2025-02-21 02:32:26,984:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but AdaBoostClassifier was fitted with feature names
  warnings.warn(

2025-02-21 02:32:26,984:INFO:Scoring test/hold-out set
2025-02-21 02:32:27,053:INFO:Saving 'Confusion Matrix.png'
2025-02-21 02:32:27,395:INFO:Visual Rendered Successfully
2025-02-21 02:32:27,531:INFO:plot_model() successfully completed......................................
2025-02-21 02:32:27,531:INFO:Initializing plot_model()
2025-02-21 02:32:27,531:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FBDAE613D0>, estimator=AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=42), plot=auc, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2025-02-21 02:32:27,531:INFO:Checking exceptions
2025-02-21 02:32:27,547:INFO:Preloading libraries
2025-02-21 02:32:27,563:INFO:Copying training dataset
2025-02-21 02:32:27,563:INFO:Plot type: auc
2025-02-21 02:32:27,909:INFO:Fitting Model
2025-02-21 02:32:27,911:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but AdaBoostClassifier was fitted with feature names
  warnings.warn(

2025-02-21 02:32:27,911:INFO:Scoring test/hold-out set
2025-02-21 02:32:27,964:INFO:Saving 'AUC.png'
2025-02-21 02:32:28,603:INFO:Visual Rendered Successfully
2025-02-21 02:32:28,727:INFO:plot_model() successfully completed......................................
2025-02-21 02:32:28,734:INFO:Initializing plot_model()
2025-02-21 02:32:28,734:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FBDAE613D0>, estimator=AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=42), plot=feature, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2025-02-21 02:32:28,734:INFO:Checking exceptions
2025-02-21 02:32:28,738:INFO:Preloading libraries
2025-02-21 02:32:28,742:INFO:Copying training dataset
2025-02-21 02:32:28,742:INFO:Plot type: feature
2025-02-21 02:32:28,742:WARNING:No coef_ found. Trying feature_importances_
2025-02-21 02:32:28,849:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py:1867: UserWarning: Matplotlib is currently using agg, which is a non-GUI backend, so cannot show the figure.
  plt.show()

2025-02-21 02:32:28,849:INFO:Visual Rendered Successfully
2025-02-21 02:32:28,954:INFO:plot_model() successfully completed......................................
2025-02-21 02:32:28,957:INFO:Initializing predict_model()
2025-02-21 02:32:28,957:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FBDAE613D0>, estimator=AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=42), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FBDB1EC360>)
2025-02-21 02:32:28,957:INFO:Checking exceptions
2025-02-21 02:32:28,957:INFO:Preloading libraries
2025-02-21 02:32:29,162:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:29,166:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:29,169:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-21 02:32:29,377:INFO:Initializing save_model()
2025-02-21 02:32:29,377:INFO:save_model(model=AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=42), model_name=C:\Users\Jupyter Files Only\Downloads\mlops-assignment\xinrui\models\final_wheat_seeds_model, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\JUPYTE~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Area', 'Perimeter', 'Compactness',
                                             'Length', 'Width',
                                             'AsymmetryCoeff', 'Groove'],
                                    transformer=SimpleIm...
                                                                                         learning_rate=0.1,
                                                                                         max_depth=-1,
                                                                                         min_child_samples=20,
                                                                                         min_child_weight=0.001,
                                                                                         min_split_gain=0.0,
                                                                                         n_estimators=100,
                                                                                         n_jobs=None,
                                                                                         num_leaves=31,
                                                                                         objective=None,
                                                                                         random_state=None,
                                                                                         reg_alpha=0.0,
                                                                                         reg_lambda=0.0,
                                                                                         subsample=1.0,
                                                                                         subsample_for_bin=200000,
                                                                                         subsample_freq=0),
                                                                importance_getter='auto',
                                                                max_features=1,
                                                                norm_order=1,
                                                                prefit=False,
                                                                threshold=-inf)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-02-21 02:32:29,377:INFO:Adding model into prep_pipe
2025-02-21 02:32:29,474:INFO:C:\Users\Jupyter Files Only\Downloads\mlops-assignment\xinrui\models\final_wheat_seeds_model.pkl saved in current working directory
2025-02-21 02:32:29,498:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Area', 'Perimeter', 'Compactness',
                                             'Length', 'Width',
                                             'AsymmetryCoeff', 'Groove'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_va...
                                                                                         num_leaves=31,
                                                                                         objective=None,
                                                                                         random_state=None,
                                                                                         reg_alpha=0.0,
                                                                                         reg_lambda=0.0,
                                                                                         subsample=1.0,
                                                                                         subsample_for_bin=200000,
                                                                                         subsample_freq=0),
                                                                importance_getter='auto',
                                                                max_features=1,
                                                                norm_order=1,
                                                                prefit=False,
                                                                threshold=-inf))),
                ('trained_model',
                 AdaBoostClassifier(algorithm='SAMME.R', estimator=None,
                                    learning_rate=1.0, n_estimators=50,
                                    random_state=42))],
         verbose=False)
2025-02-21 02:32:29,498:INFO:save_model() successfully completed......................................
2025-02-21 11:36:54,917:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-21 11:36:54,917:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-21 11:36:54,917:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-21 11:36:54,917:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-21 11:36:55,023:WARNING:C:\Users\forwo\Downloads\dekai-mlops-assignment\mlops-assignment\dekai\src\preprocess.py:7: UserWarning: 
The version_base parameter is not specified.
Please specify a compatability version level, or None.
Will assume defaults for version 1.1
  @hydra.main(config_path="configs", config_name="config")

2025-02-21 11:36:55,233:WARNING:C:\Users\forwo\Downloads\dekai-mlops-assignment\venv\lib\site-packages\hydra\_internal\hydra.py:119: UserWarning: Future Hydra versions will no longer change working directory at job runtime by default.
See https://hydra.cc/docs/1.2/upgrades/1.1_to_1.2/changes_to_job_working_dir/ for more information.
  ret = run_job(

2025-02-21 11:45:38,726:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-21 11:45:38,726:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-21 11:45:38,726:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-21 11:45:38,727:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-21 11:45:38,837:WARNING:C:\Users\forwo\Downloads\dekai-mlops-assignment\mlops-assignment\dekai\src\preprocess.py:8: UserWarning: 
The version_base parameter is not specified.
Please specify a compatability version level, or None.
Will assume defaults for version 1.1
  @hydra.main(config_path="configs", config_name="config")

2025-02-21 11:45:39,048:WARNING:C:\Users\forwo\Downloads\dekai-mlops-assignment\venv\lib\site-packages\hydra\_internal\hydra.py:119: UserWarning: Future Hydra versions will no longer change working directory at job runtime by default.
See https://hydra.cc/docs/1.2/upgrades/1.1_to_1.2/changes_to_job_working_dir/ for more information.
  ret = run_job(

2025-02-21 11:45:39,120:INFO:PyCaret RegressionExperiment
2025-02-21 11:45:39,120:INFO:Logging name: reg-default-name
2025-02-21 11:45:39,120:INFO:ML Usecase: MLUsecase.REGRESSION
2025-02-21 11:45:39,120:INFO:version 3.3.2
2025-02-21 11:45:39,120:INFO:Initializing setup()
2025-02-21 11:45:39,120:INFO:self.USI: 2981
2025-02-21 11:45:39,120:INFO:self._variable_keys: {'y_train', '_ml_usecase', 'exp_id', 'X_train', 'log_plots_param', 'y', 'gpu_param', '_available_plots', 'fold_shuffle_param', 'fold_generator', 'idx', 'seed', 'pipeline', 'gpu_n_jobs_param', 'memory', 'fold_groups_param', 'y_test', 'X', 'X_test', 'n_jobs_param', 'html_param', 'data', 'USI', 'exp_name_log', 'transform_target_param', 'target_param', 'logging_param'}
2025-02-21 11:45:39,120:INFO:Checking environment
2025-02-21 11:45:39,120:INFO:python_version: 3.10.2
2025-02-21 11:45:39,120:INFO:python_build: ('tags/v3.10.2:a58ebcc', 'Jan 17 2022 14:12:15')
2025-02-21 11:45:39,120:INFO:machine: AMD64
2025-02-21 11:45:39,129:INFO:platform: Windows-10-10.0.26100-SP0
2025-02-21 11:45:39,133:INFO:Memory: svmem(total=16542732288, available=4538937344, percent=72.6, used=12003794944, free=4538937344)
2025-02-21 11:45:39,133:INFO:Physical Core: 8
2025-02-21 11:45:39,133:INFO:Logical Core: 16
2025-02-21 11:45:39,133:INFO:Checking libraries
2025-02-21 11:45:39,133:INFO:System:
2025-02-21 11:45:39,133:INFO:    python: 3.10.2 (tags/v3.10.2:a58ebcc, Jan 17 2022, 14:12:15) [MSC v.1929 64 bit (AMD64)]
2025-02-21 11:45:39,133:INFO:executable: C:\Users\forwo\Downloads\dekai-mlops-assignment\venv\Scripts\python.exe
2025-02-21 11:45:39,134:INFO:   machine: Windows-10-10.0.26100-SP0
2025-02-21 11:45:39,134:INFO:PyCaret required dependencies:
2025-02-21 11:45:39,153:INFO:                 pip: 25.0.1
2025-02-21 11:45:39,153:INFO:          setuptools: 60.2.0
2025-02-21 11:45:39,153:INFO:             pycaret: 3.3.2
2025-02-21 11:45:39,153:INFO:             IPython: 8.32.0
2025-02-21 11:45:39,153:INFO:          ipywidgets: 8.1.5
2025-02-21 11:45:39,153:INFO:                tqdm: 4.67.1
2025-02-21 11:45:39,153:INFO:               numpy: 1.26.4
2025-02-21 11:45:39,153:INFO:              pandas: 2.1.4
2025-02-21 11:45:39,153:INFO:              jinja2: 3.1.5
2025-02-21 11:45:39,153:INFO:               scipy: 1.11.4
2025-02-21 11:45:39,153:INFO:              joblib: 1.3.2
2025-02-21 11:45:39,153:INFO:             sklearn: 1.4.2
2025-02-21 11:45:39,153:INFO:                pyod: 2.0.3
2025-02-21 11:45:39,153:INFO:            imblearn: 0.13.0
2025-02-21 11:45:39,153:INFO:   category_encoders: 2.7.0
2025-02-21 11:45:39,153:INFO:            lightgbm: 4.6.0
2025-02-21 11:45:39,153:INFO:               numba: 0.61.0
2025-02-21 11:45:39,153:INFO:            requests: 2.32.3
2025-02-21 11:45:39,153:INFO:          matplotlib: 3.7.5
2025-02-21 11:45:39,154:INFO:          scikitplot: 0.3.7
2025-02-21 11:45:39,154:INFO:         yellowbrick: 1.5
2025-02-21 11:45:39,154:INFO:              plotly: 5.24.1
2025-02-21 11:45:39,154:INFO:    plotly-resampler: Not installed
2025-02-21 11:45:39,154:INFO:             kaleido: 0.2.1
2025-02-21 11:45:39,154:INFO:           schemdraw: 0.15
2025-02-21 11:45:39,154:INFO:         statsmodels: 0.14.4
2025-02-21 11:45:39,154:INFO:              sktime: 0.26.0
2025-02-21 11:45:39,154:INFO:               tbats: 1.1.3
2025-02-21 11:45:39,154:INFO:            pmdarima: 2.0.4
2025-02-21 11:45:39,154:INFO:              psutil: 7.0.0
2025-02-21 11:45:39,154:INFO:          markupsafe: 3.0.2
2025-02-21 11:45:39,154:INFO:             pickle5: Not installed
2025-02-21 11:45:39,154:INFO:         cloudpickle: 3.1.1
2025-02-21 11:45:39,154:INFO:         deprecation: 2.1.0
2025-02-21 11:45:39,154:INFO:              xxhash: 3.5.0
2025-02-21 11:45:39,154:INFO:           wurlitzer: Not installed
2025-02-21 11:45:39,154:INFO:PyCaret optional dependencies:
2025-02-21 11:45:39,167:INFO:                shap: Not installed
2025-02-21 11:45:39,167:INFO:           interpret: Not installed
2025-02-21 11:45:39,167:INFO:                umap: Not installed
2025-02-21 11:45:39,167:INFO:     ydata_profiling: Not installed
2025-02-21 11:45:39,167:INFO:  explainerdashboard: Not installed
2025-02-21 11:45:39,167:INFO:             autoviz: Not installed
2025-02-21 11:45:39,167:INFO:           fairlearn: Not installed
2025-02-21 11:45:39,167:INFO:          deepchecks: Not installed
2025-02-21 11:45:39,167:INFO:             xgboost: Not installed
2025-02-21 11:45:39,167:INFO:            catboost: Not installed
2025-02-21 11:45:39,167:INFO:              kmodes: Not installed
2025-02-21 11:45:39,168:INFO:             mlxtend: Not installed
2025-02-21 11:45:39,168:INFO:       statsforecast: Not installed
2025-02-21 11:45:39,168:INFO:        tune_sklearn: Not installed
2025-02-21 11:45:39,168:INFO:                 ray: Not installed
2025-02-21 11:45:39,168:INFO:            hyperopt: Not installed
2025-02-21 11:45:39,168:INFO:              optuna: Not installed
2025-02-21 11:45:39,168:INFO:               skopt: Not installed
2025-02-21 11:45:39,168:INFO:              mlflow: Not installed
2025-02-21 11:45:39,168:INFO:              gradio: Not installed
2025-02-21 11:45:39,168:INFO:             fastapi: Not installed
2025-02-21 11:45:39,168:INFO:             uvicorn: Not installed
2025-02-21 11:45:39,168:INFO:              m2cgen: Not installed
2025-02-21 11:45:39,168:INFO:           evidently: Not installed
2025-02-21 11:45:39,168:INFO:               fugue: Not installed
2025-02-21 11:45:39,168:INFO:           streamlit: Not installed
2025-02-21 11:45:39,168:INFO:             prophet: Not installed
2025-02-21 11:45:39,168:INFO:None
2025-02-21 11:45:39,168:INFO:Set up data.
2025-02-21 11:45:39,177:INFO:Set up folding strategy.
2025-02-21 11:45:39,177:INFO:Set up train/test split.
2025-02-21 11:45:39,182:INFO:Set up index.
2025-02-21 11:45:39,182:INFO:Assigning column types.
2025-02-21 11:45:39,185:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-02-21 11:45:39,185:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-02-21 11:45:39,189:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-02-21 11:45:39,192:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-02-21 11:45:39,242:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-21 11:45:39,279:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-21 11:45:39,279:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-21 11:45:39,279:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-21 11:45:39,280:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-02-21 11:45:39,283:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-02-21 11:45:39,287:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-02-21 11:45:39,334:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-21 11:45:39,368:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-21 11:45:39,369:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-21 11:45:39,369:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-21 11:45:39,369:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2025-02-21 11:45:39,373:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-02-21 11:45:39,377:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-02-21 11:45:39,424:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-21 11:45:39,461:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-21 11:45:39,462:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-21 11:45:39,462:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-21 11:45:39,466:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-02-21 11:45:39,470:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-02-21 11:45:39,516:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-21 11:45:39,553:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-21 11:45:39,553:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-21 11:45:39,553:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-21 11:45:39,554:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2025-02-21 11:45:39,561:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-02-21 11:45:39,611:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-21 11:45:39,646:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-21 11:45:39,647:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-21 11:45:39,647:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-21 11:45:39,654:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-02-21 11:45:39,701:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-21 11:45:39,738:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-21 11:45:39,738:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-21 11:45:39,739:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-21 11:45:39,739:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2025-02-21 11:45:39,795:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-21 11:45:39,830:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-21 11:45:39,830:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-21 11:45:39,830:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-21 11:45:39,884:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-21 11:45:39,921:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-21 11:45:39,921:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-21 11:45:39,921:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-21 11:45:39,922:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-02-21 11:45:39,979:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-21 11:45:40,018:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-21 11:45:40,018:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-21 11:45:40,073:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-21 11:45:40,108:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-21 11:45:40,108:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-21 11:45:40,109:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2025-02-21 11:45:40,198:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-21 11:45:40,199:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-21 11:45:40,288:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-21 11:45:40,288:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-21 11:45:40,290:INFO:Preparing preprocessing pipeline...
2025-02-21 11:45:40,290:INFO:Set up simple imputation.
2025-02-21 11:45:40,293:INFO:Set up encoding of categorical features.
2025-02-21 11:45:40,293:INFO:Set up removing multicollinearity.
2025-02-21 11:45:40,293:INFO:Set up removing outliers.
2025-02-21 11:45:40,293:INFO:Set up column transformation.
2025-02-21 11:45:40,293:INFO:Set up feature normalization.
2025-02-21 11:45:40,723:INFO:Finished creating preprocessing pipeline.
2025-02-21 11:45:40,733:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\forwo\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Rooms', 'Distance', 'Bathroom',
                                             'Car', 'Landsize', 'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Type', 'CouncilArea', 'Region'],
                                    transformer=SimpleImputer(strategy='most_frequent'...
                                                              handle_missing='return_nan'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=123))),
                ('transformation',
                 TransformerWrapper(transformer=PowerTransformer(standardize=False))),
                ('normalize',
                 TransformerWrapper(transformer=StandardScaler()))])
2025-02-21 11:45:40,733:INFO:Creating final display dataframe.
2025-02-21 11:45:41,395:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target             Price
2                   Target type        Regression
3           Original data shape       (10864, 10)
4        Transformed data shape       (10483, 19)
5   Transformed train set shape        (7223, 19)
6    Transformed test set shape        (3260, 19)
7              Numeric features                 6
8          Categorical features                 3
9      Rows with missing values             10.2%
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                25
15              Encoding method              None
16     Remove multicollinearity              True
17  Multicollinearity threshold               0.9
18              Remove outliers              True
19           Outliers threshold              0.05
20               Transformation              True
21        Transformation method       yeo-johnson
22                    Normalize              True
23             Normalize method            zscore
24               Fold Generator             KFold
25                  Fold Number                10
26                     CPU Jobs                -1
27                      Use GPU             False
28               Log Experiment             False
29              Experiment Name  reg-default-name
30                          USI              2981
2025-02-21 11:45:41,492:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-21 11:45:41,493:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-21 11:45:41,588:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-21 11:45:41,588:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-21 11:45:41,589:INFO:setup() successfully completed in 2.48s...............
2025-02-25 01:19:37,887:INFO:PyCaret RegressionExperiment
2025-02-25 01:19:37,887:INFO:Logging name: reg-default-name
2025-02-25 01:19:37,887:INFO:ML Usecase: MLUsecase.REGRESSION
2025-02-25 01:19:37,887:INFO:version 3.3.2
2025-02-25 01:19:37,887:INFO:Initializing setup()
2025-02-25 01:19:37,887:INFO:self.USI: 7320
2025-02-25 01:19:37,887:INFO:self._variable_keys: {'gpu_param', 'data', 'pipeline', '_available_plots', '_ml_usecase', 'logging_param', 'USI', 'html_param', 'fold_generator', 'log_plots_param', 'gpu_n_jobs_param', 'fold_shuffle_param', 'X_test', 'X', 'seed', 'n_jobs_param', 'y_test', 'exp_id', 'X_train', 'fold_groups_param', 'memory', 'exp_name_log', 'idx', 'transform_target_param', 'y', 'y_train', 'target_param'}
2025-02-25 01:19:37,887:INFO:Checking environment
2025-02-25 01:19:37,887:INFO:python_version: 3.10.2
2025-02-25 01:19:37,887:INFO:python_build: ('tags/v3.10.2:a58ebcc', 'Jan 17 2022 14:12:15')
2025-02-25 01:19:37,887:INFO:machine: AMD64
2025-02-25 01:19:37,895:INFO:platform: Windows-10-10.0.26100-SP0
2025-02-25 01:19:37,900:INFO:Memory: svmem(total=16542732288, available=6112346112, percent=63.1, used=10430386176, free=6112346112)
2025-02-25 01:19:37,900:INFO:Physical Core: 8
2025-02-25 01:19:37,900:INFO:Logical Core: 16
2025-02-25 01:19:37,900:INFO:Checking libraries
2025-02-25 01:19:37,900:INFO:System:
2025-02-25 01:19:37,901:INFO:    python: 3.10.2 (tags/v3.10.2:a58ebcc, Jan 17 2022, 14:12:15) [MSC v.1929 64 bit (AMD64)]
2025-02-25 01:19:37,901:INFO:executable: C:\Users\forwo\Downloads\dekai-mlops-assignment\venv\Scripts\python.exe
2025-02-25 01:19:37,901:INFO:   machine: Windows-10-10.0.26100-SP0
2025-02-25 01:19:37,901:INFO:PyCaret required dependencies:
2025-02-25 01:19:37,962:INFO:                 pip: 25.0.1
2025-02-25 01:19:37,962:INFO:          setuptools: 60.2.0
2025-02-25 01:19:37,962:INFO:             pycaret: 3.3.2
2025-02-25 01:19:37,962:INFO:             IPython: 8.32.0
2025-02-25 01:19:37,962:INFO:          ipywidgets: 8.1.5
2025-02-25 01:19:37,962:INFO:                tqdm: 4.67.1
2025-02-25 01:19:37,962:INFO:               numpy: 1.26.4
2025-02-25 01:19:37,962:INFO:              pandas: 2.1.4
2025-02-25 01:19:37,962:INFO:              jinja2: 3.1.5
2025-02-25 01:19:37,962:INFO:               scipy: 1.11.4
2025-02-25 01:19:37,962:INFO:              joblib: 1.3.2
2025-02-25 01:19:37,962:INFO:             sklearn: 1.4.2
2025-02-25 01:19:37,962:INFO:                pyod: 2.0.3
2025-02-25 01:19:37,962:INFO:            imblearn: 0.13.0
2025-02-25 01:19:37,962:INFO:   category_encoders: 2.7.0
2025-02-25 01:19:37,962:INFO:            lightgbm: 4.6.0
2025-02-25 01:19:37,962:INFO:               numba: 0.61.0
2025-02-25 01:19:37,962:INFO:            requests: 2.32.3
2025-02-25 01:19:37,962:INFO:          matplotlib: 3.7.5
2025-02-25 01:19:37,962:INFO:          scikitplot: 0.3.7
2025-02-25 01:19:37,962:INFO:         yellowbrick: 1.5
2025-02-25 01:19:37,962:INFO:              plotly: 5.24.1
2025-02-25 01:19:37,962:INFO:    plotly-resampler: Not installed
2025-02-25 01:19:37,962:INFO:             kaleido: 0.2.1
2025-02-25 01:19:37,962:INFO:           schemdraw: 0.15
2025-02-25 01:19:37,962:INFO:         statsmodels: 0.14.4
2025-02-25 01:19:37,962:INFO:              sktime: 0.26.0
2025-02-25 01:19:37,962:INFO:               tbats: 1.1.3
2025-02-25 01:19:37,962:INFO:            pmdarima: 2.0.4
2025-02-25 01:19:37,962:INFO:              psutil: 7.0.0
2025-02-25 01:19:37,962:INFO:          markupsafe: 3.0.2
2025-02-25 01:19:37,962:INFO:             pickle5: Not installed
2025-02-25 01:19:37,962:INFO:         cloudpickle: 3.1.1
2025-02-25 01:19:37,962:INFO:         deprecation: 2.1.0
2025-02-25 01:19:37,962:INFO:              xxhash: 3.5.0
2025-02-25 01:19:37,962:INFO:           wurlitzer: Not installed
2025-02-25 01:19:37,962:INFO:PyCaret optional dependencies:
2025-02-25 01:19:37,974:INFO:                shap: Not installed
2025-02-25 01:19:37,974:INFO:           interpret: Not installed
2025-02-25 01:19:37,974:INFO:                umap: Not installed
2025-02-25 01:19:37,974:INFO:     ydata_profiling: Not installed
2025-02-25 01:19:37,974:INFO:  explainerdashboard: Not installed
2025-02-25 01:19:37,974:INFO:             autoviz: Not installed
2025-02-25 01:19:37,974:INFO:           fairlearn: Not installed
2025-02-25 01:19:37,975:INFO:          deepchecks: Not installed
2025-02-25 01:19:37,975:INFO:             xgboost: Not installed
2025-02-25 01:19:37,975:INFO:            catboost: Not installed
2025-02-25 01:19:37,975:INFO:              kmodes: Not installed
2025-02-25 01:19:37,975:INFO:             mlxtend: Not installed
2025-02-25 01:19:37,975:INFO:       statsforecast: Not installed
2025-02-25 01:19:37,975:INFO:        tune_sklearn: Not installed
2025-02-25 01:19:37,975:INFO:                 ray: Not installed
2025-02-25 01:19:37,975:INFO:            hyperopt: Not installed
2025-02-25 01:19:37,975:INFO:              optuna: Not installed
2025-02-25 01:19:37,975:INFO:               skopt: Not installed
2025-02-25 01:19:37,975:INFO:              mlflow: 2.20.2
2025-02-25 01:19:37,975:INFO:              gradio: Not installed
2025-02-25 01:19:37,975:INFO:             fastapi: Not installed
2025-02-25 01:19:37,975:INFO:             uvicorn: Not installed
2025-02-25 01:19:37,975:INFO:              m2cgen: Not installed
2025-02-25 01:19:37,975:INFO:           evidently: Not installed
2025-02-25 01:19:37,975:INFO:               fugue: Not installed
2025-02-25 01:19:37,975:INFO:           streamlit: Not installed
2025-02-25 01:19:37,975:INFO:             prophet: Not installed
2025-02-25 01:19:37,975:INFO:None
2025-02-25 01:19:37,975:INFO:Set up data.
2025-02-25 01:19:37,984:INFO:Set up folding strategy.
2025-02-25 01:19:37,984:INFO:Set up train/test split.
2025-02-25 01:19:38,013:INFO:Set up index.
2025-02-25 01:19:38,013:INFO:Assigning column types.
2025-02-25 01:19:38,016:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-02-25 01:19:38,016:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-02-25 01:19:38,020:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-02-25 01:19:38,024:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-02-25 01:19:38,070:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-25 01:19:38,104:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-25 01:19:38,104:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-25 01:19:38,104:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-25 01:19:38,105:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-02-25 01:19:38,108:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-02-25 01:19:38,111:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-02-25 01:19:38,157:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-25 01:19:38,192:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-25 01:19:38,193:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-25 01:19:38,193:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-25 01:19:38,193:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2025-02-25 01:19:38,196:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-02-25 01:19:38,199:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-02-25 01:19:38,244:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-25 01:19:38,278:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-25 01:19:38,279:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-25 01:19:38,279:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-25 01:19:38,282:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-02-25 01:19:38,286:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-02-25 01:19:38,331:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-25 01:19:38,365:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-25 01:19:38,365:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-25 01:19:38,365:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-25 01:19:38,366:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2025-02-25 01:19:38,373:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-02-25 01:19:38,417:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-25 01:19:38,452:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-25 01:19:38,452:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-25 01:19:38,452:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-25 01:19:38,460:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-02-25 01:19:38,504:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-25 01:19:38,539:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-25 01:19:38,540:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-25 01:19:38,540:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-25 01:19:38,540:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2025-02-25 01:19:38,592:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-25 01:19:38,628:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-25 01:19:38,628:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-25 01:19:38,628:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-25 01:19:38,682:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-25 01:19:38,722:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-25 01:19:38,722:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-25 01:19:38,722:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-25 01:19:38,723:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-02-25 01:19:38,780:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-25 01:19:38,820:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-25 01:19:38,820:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-25 01:19:38,879:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-25 01:19:38,917:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-25 01:19:38,918:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-25 01:19:38,918:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2025-02-25 01:19:39,008:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-25 01:19:39,008:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-25 01:19:39,095:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-25 01:19:39,095:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-25 01:19:39,108:INFO:Preparing preprocessing pipeline...
2025-02-25 01:19:39,108:INFO:Set up simple imputation.
2025-02-25 01:19:39,111:INFO:Set up encoding of categorical features.
2025-02-25 01:19:39,111:INFO:Set up removing multicollinearity.
2025-02-25 01:19:39,111:INFO:Set up removing outliers.
2025-02-25 01:19:39,111:INFO:Set up column transformation.
2025-02-25 01:19:39,111:INFO:Set up feature normalization.
2025-02-25 01:19:39,335:INFO:Finished creating preprocessing pipeline.
2025-02-25 01:19:39,346:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\forwo\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Rooms', 'Distance', 'Bathroom',
                                             'Car', 'Landsize', 'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Type', 'CouncilArea', 'Region'],
                                    transformer=SimpleImputer(strategy='most_frequent'...
                                                              handle_missing='return_nan'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=123))),
                ('transformation',
                 TransformerWrapper(transformer=PowerTransformer(standardize=False))),
                ('normalize',
                 TransformerWrapper(transformer=StandardScaler()))])
2025-02-25 01:19:39,346:INFO:Creating final display dataframe.
2025-02-25 01:19:39,607:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target             Price
2                   Target type        Regression
3           Original data shape       (10864, 10)
4        Transformed data shape       (10483, 19)
5   Transformed train set shape        (7223, 19)
6    Transformed test set shape        (3260, 19)
7              Numeric features                 6
8          Categorical features                 3
9      Rows with missing values             10.2%
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                25
15              Encoding method              None
16     Remove multicollinearity              True
17  Multicollinearity threshold               0.9
18              Remove outliers              True
19           Outliers threshold              0.05
20               Transformation              True
21        Transformation method       yeo-johnson
22                    Normalize              True
23             Normalize method            zscore
24               Fold Generator             KFold
25                  Fold Number                10
26                     CPU Jobs                -1
27                      Use GPU             False
28               Log Experiment             False
29              Experiment Name  reg-default-name
30                          USI              7320
2025-02-25 01:19:39,697:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-25 01:19:39,697:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-25 01:19:39,788:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-25 01:19:39,789:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-25 01:19:39,789:INFO:setup() successfully completed in 1.93s...............
2025-02-25 18:31:02,164:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-25 18:31:02,165:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-25 18:31:02,165:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-25 18:31:02,165:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-25 18:31:04,463:INFO:PyCaret ClassificationExperiment
2025-02-25 18:31:04,464:INFO:Logging name: clf-default-name
2025-02-25 18:31:04,464:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-02-25 18:31:04,464:INFO:version 3.3.2
2025-02-25 18:31:04,464:INFO:Initializing setup()
2025-02-25 18:31:04,464:INFO:self.USI: 8b67
2025-02-25 18:31:04,464:INFO:self._variable_keys: {'gpu_param', 'logging_param', 'pipeline', 'X_train', 'is_multiclass', 'gpu_n_jobs_param', 'fold_generator', 'memory', 'y', 'html_param', 'log_plots_param', '_ml_usecase', 'y_train', 'exp_name_log', 'n_jobs_param', 'idx', '_available_plots', 'data', 'y_test', 'fold_shuffle_param', 'X', 'USI', 'target_param', 'exp_id', 'fold_groups_param', 'fix_imbalance', 'seed', 'X_test'}
2025-02-25 18:31:04,464:INFO:Checking environment
2025-02-25 18:31:04,464:INFO:python_version: 3.10.2
2025-02-25 18:31:04,464:INFO:python_build: ('tags/v3.10.2:a58ebcc', 'Jan 17 2022 14:12:15')
2025-02-25 18:31:04,464:INFO:machine: AMD64
2025-02-25 18:31:04,471:INFO:platform: Windows-10-10.0.26100-SP0
2025-02-25 18:31:04,476:INFO:Memory: svmem(total=16542732288, available=6157250560, percent=62.8, used=10385481728, free=6157250560)
2025-02-25 18:31:04,476:INFO:Physical Core: 8
2025-02-25 18:31:04,476:INFO:Logical Core: 16
2025-02-25 18:31:04,476:INFO:Checking libraries
2025-02-25 18:31:04,476:INFO:System:
2025-02-25 18:31:04,476:INFO:    python: 3.10.2 (tags/v3.10.2:a58ebcc, Jan 17 2022, 14:12:15) [MSC v.1929 64 bit (AMD64)]
2025-02-25 18:31:04,476:INFO:executable: C:\Users\forwo\Downloads\dekai-mlops-assignment\venv\Scripts\python.exe
2025-02-25 18:31:04,476:INFO:   machine: Windows-10-10.0.26100-SP0
2025-02-25 18:31:04,477:INFO:PyCaret required dependencies:
2025-02-25 18:31:04,547:INFO:                 pip: 25.0.1
2025-02-25 18:31:04,547:INFO:          setuptools: 60.2.0
2025-02-25 18:31:04,547:INFO:             pycaret: 3.3.2
2025-02-25 18:31:04,547:INFO:             IPython: 8.32.0
2025-02-25 18:31:04,547:INFO:          ipywidgets: 8.1.5
2025-02-25 18:31:04,547:INFO:                tqdm: 4.67.1
2025-02-25 18:31:04,547:INFO:               numpy: 1.26.4
2025-02-25 18:31:04,547:INFO:              pandas: 2.1.4
2025-02-25 18:31:04,547:INFO:              jinja2: 3.1.5
2025-02-25 18:31:04,547:INFO:               scipy: 1.11.4
2025-02-25 18:31:04,548:INFO:              joblib: 1.3.2
2025-02-25 18:31:04,548:INFO:             sklearn: 1.4.2
2025-02-25 18:31:04,548:INFO:                pyod: 2.0.3
2025-02-25 18:31:04,548:INFO:            imblearn: 0.13.0
2025-02-25 18:31:04,548:INFO:   category_encoders: 2.7.0
2025-02-25 18:31:04,548:INFO:            lightgbm: 4.6.0
2025-02-25 18:31:04,548:INFO:               numba: 0.61.0
2025-02-25 18:31:04,548:INFO:            requests: 2.32.3
2025-02-25 18:31:04,548:INFO:          matplotlib: 3.7.5
2025-02-25 18:31:04,548:INFO:          scikitplot: 0.3.7
2025-02-25 18:31:04,548:INFO:         yellowbrick: 1.5
2025-02-25 18:31:04,548:INFO:              plotly: 5.24.1
2025-02-25 18:31:04,548:INFO:    plotly-resampler: Not installed
2025-02-25 18:31:04,548:INFO:             kaleido: 0.2.1
2025-02-25 18:31:04,548:INFO:           schemdraw: 0.15
2025-02-25 18:31:04,548:INFO:         statsmodels: 0.14.4
2025-02-25 18:31:04,548:INFO:              sktime: 0.26.0
2025-02-25 18:31:04,548:INFO:               tbats: 1.1.3
2025-02-25 18:31:04,548:INFO:            pmdarima: 2.0.4
2025-02-25 18:31:04,548:INFO:              psutil: 7.0.0
2025-02-25 18:31:04,548:INFO:          markupsafe: 3.0.2
2025-02-25 18:31:04,548:INFO:             pickle5: Not installed
2025-02-25 18:31:04,548:INFO:         cloudpickle: 3.1.1
2025-02-25 18:31:04,548:INFO:         deprecation: 2.1.0
2025-02-25 18:31:04,548:INFO:              xxhash: 3.5.0
2025-02-25 18:31:04,548:INFO:           wurlitzer: Not installed
2025-02-25 18:31:04,548:INFO:PyCaret optional dependencies:
2025-02-25 18:31:04,560:INFO:                shap: Not installed
2025-02-25 18:31:04,561:INFO:           interpret: Not installed
2025-02-25 18:31:04,561:INFO:                umap: Not installed
2025-02-25 18:31:04,561:INFO:     ydata_profiling: Not installed
2025-02-25 18:31:04,561:INFO:  explainerdashboard: Not installed
2025-02-25 18:31:04,561:INFO:             autoviz: Not installed
2025-02-25 18:31:04,561:INFO:           fairlearn: Not installed
2025-02-25 18:31:04,561:INFO:          deepchecks: Not installed
2025-02-25 18:31:04,561:INFO:             xgboost: Not installed
2025-02-25 18:31:04,561:INFO:            catboost: Not installed
2025-02-25 18:31:04,561:INFO:              kmodes: Not installed
2025-02-25 18:31:04,561:INFO:             mlxtend: Not installed
2025-02-25 18:31:04,561:INFO:       statsforecast: Not installed
2025-02-25 18:31:04,561:INFO:        tune_sklearn: Not installed
2025-02-25 18:31:04,561:INFO:                 ray: Not installed
2025-02-25 18:31:04,561:INFO:            hyperopt: Not installed
2025-02-25 18:31:04,561:INFO:              optuna: Not installed
2025-02-25 18:31:04,561:INFO:               skopt: Not installed
2025-02-25 18:31:04,561:INFO:              mlflow: 2.20.2
2025-02-25 18:31:04,561:INFO:              gradio: Not installed
2025-02-25 18:31:04,561:INFO:             fastapi: Not installed
2025-02-25 18:31:04,561:INFO:             uvicorn: Not installed
2025-02-25 18:31:04,561:INFO:              m2cgen: Not installed
2025-02-25 18:31:04,561:INFO:           evidently: Not installed
2025-02-25 18:31:04,561:INFO:               fugue: Not installed
2025-02-25 18:31:04,561:INFO:           streamlit: Not installed
2025-02-25 18:31:04,561:INFO:             prophet: Not installed
2025-02-25 18:31:04,561:INFO:None
2025-02-25 18:31:04,561:INFO:Set up data.
2025-02-25 18:31:04,569:INFO:Set up folding strategy.
2025-02-25 18:31:04,569:INFO:Set up train/test split.
2025-02-25 18:36:07,148:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-25 18:36:07,148:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-25 18:36:07,148:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-25 18:36:07,148:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-25 18:51:02,137:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-25 18:51:02,138:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-25 18:51:02,138:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-25 18:51:02,138:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-25 18:54:11,686:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-25 18:54:11,687:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-25 18:54:11,687:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-25 18:54:11,687:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-25 18:54:11,973:INFO:PyCaret RegressionExperiment
2025-02-25 18:54:11,973:INFO:Logging name: Dekai_Melbourne_Residential_price_predictions
2025-02-25 18:54:11,973:INFO:ML Usecase: MLUsecase.REGRESSION
2025-02-25 18:54:11,973:INFO:version 3.3.2
2025-02-25 18:54:11,973:INFO:Initializing setup()
2025-02-25 18:54:11,973:INFO:self.USI: 21ef
2025-02-25 18:54:11,973:INFO:self._variable_keys: {'idx', 'y', 'logging_param', 'target_param', 'data', 'exp_name_log', 'memory', 'fold_groups_param', 'exp_id', 'pipeline', 'seed', 'fold_generator', 'transform_target_param', 'html_param', 'gpu_param', '_ml_usecase', 'fold_shuffle_param', 'n_jobs_param', 'gpu_n_jobs_param', '_available_plots', 'log_plots_param', 'y_test', 'y_train', 'X_train', 'X_test', 'USI', 'X'}
2025-02-25 18:54:11,973:INFO:Checking environment
2025-02-25 18:54:11,973:INFO:python_version: 3.10.2
2025-02-25 18:54:11,973:INFO:python_build: ('tags/v3.10.2:a58ebcc', 'Jan 17 2022 14:12:15')
2025-02-25 18:54:11,973:INFO:machine: AMD64
2025-02-25 18:54:11,981:INFO:platform: Windows-10-10.0.26100-SP0
2025-02-25 18:54:11,985:INFO:Memory: svmem(total=16542732288, available=5649158144, percent=65.9, used=10893574144, free=5649158144)
2025-02-25 18:54:11,985:INFO:Physical Core: 8
2025-02-25 18:54:11,985:INFO:Logical Core: 16
2025-02-25 18:54:11,985:INFO:Checking libraries
2025-02-25 18:54:11,985:INFO:System:
2025-02-25 18:54:11,985:INFO:    python: 3.10.2 (tags/v3.10.2:a58ebcc, Jan 17 2022, 14:12:15) [MSC v.1929 64 bit (AMD64)]
2025-02-25 18:54:11,985:INFO:executable: C:\Users\forwo\Downloads\dekai-mlops-assignment\venv\Scripts\python.exe
2025-02-25 18:54:11,985:INFO:   machine: Windows-10-10.0.26100-SP0
2025-02-25 18:54:11,985:INFO:PyCaret required dependencies:
2025-02-25 18:54:12,006:INFO:                 pip: 25.0.1
2025-02-25 18:54:12,006:INFO:          setuptools: 60.2.0
2025-02-25 18:54:12,006:INFO:             pycaret: 3.3.2
2025-02-25 18:54:12,006:INFO:             IPython: 8.32.0
2025-02-25 18:54:12,006:INFO:          ipywidgets: 8.1.5
2025-02-25 18:54:12,006:INFO:                tqdm: 4.67.1
2025-02-25 18:54:12,006:INFO:               numpy: 1.26.4
2025-02-25 18:54:12,006:INFO:              pandas: 2.1.4
2025-02-25 18:54:12,006:INFO:              jinja2: 3.1.5
2025-02-25 18:54:12,006:INFO:               scipy: 1.11.4
2025-02-25 18:54:12,006:INFO:              joblib: 1.3.2
2025-02-25 18:54:12,006:INFO:             sklearn: 1.4.2
2025-02-25 18:54:12,006:INFO:                pyod: 2.0.3
2025-02-25 18:54:12,006:INFO:            imblearn: 0.13.0
2025-02-25 18:54:12,007:INFO:   category_encoders: 2.7.0
2025-02-25 18:54:12,007:INFO:            lightgbm: 4.6.0
2025-02-25 18:54:12,007:INFO:               numba: 0.61.0
2025-02-25 18:54:12,007:INFO:            requests: 2.32.3
2025-02-25 18:54:12,007:INFO:          matplotlib: 3.7.5
2025-02-25 18:54:12,007:INFO:          scikitplot: 0.3.7
2025-02-25 18:54:12,007:INFO:         yellowbrick: 1.5
2025-02-25 18:54:12,007:INFO:              plotly: 5.24.1
2025-02-25 18:54:12,007:INFO:    plotly-resampler: Not installed
2025-02-25 18:54:12,007:INFO:             kaleido: 0.2.1
2025-02-25 18:54:12,007:INFO:           schemdraw: 0.15
2025-02-25 18:54:12,007:INFO:         statsmodels: 0.14.4
2025-02-25 18:54:12,007:INFO:              sktime: 0.26.0
2025-02-25 18:54:12,007:INFO:               tbats: 1.1.3
2025-02-25 18:54:12,007:INFO:            pmdarima: 2.0.4
2025-02-25 18:54:12,007:INFO:              psutil: 7.0.0
2025-02-25 18:54:12,007:INFO:          markupsafe: 3.0.2
2025-02-25 18:54:12,007:INFO:             pickle5: Not installed
2025-02-25 18:54:12,007:INFO:         cloudpickle: 3.1.1
2025-02-25 18:54:12,007:INFO:         deprecation: 2.1.0
2025-02-25 18:54:12,007:INFO:              xxhash: 3.5.0
2025-02-25 18:54:12,007:INFO:           wurlitzer: Not installed
2025-02-25 18:54:12,007:INFO:PyCaret optional dependencies:
2025-02-25 18:54:12,020:INFO:                shap: Not installed
2025-02-25 18:54:12,020:INFO:           interpret: Not installed
2025-02-25 18:54:12,020:INFO:                umap: Not installed
2025-02-25 18:54:12,020:INFO:     ydata_profiling: Not installed
2025-02-25 18:54:12,020:INFO:  explainerdashboard: Not installed
2025-02-25 18:54:12,020:INFO:             autoviz: Not installed
2025-02-25 18:54:12,020:INFO:           fairlearn: Not installed
2025-02-25 18:54:12,020:INFO:          deepchecks: Not installed
2025-02-25 18:54:12,020:INFO:             xgboost: Not installed
2025-02-25 18:54:12,020:INFO:            catboost: Not installed
2025-02-25 18:54:12,020:INFO:              kmodes: Not installed
2025-02-25 18:54:12,020:INFO:             mlxtend: Not installed
2025-02-25 18:54:12,020:INFO:       statsforecast: Not installed
2025-02-25 18:54:12,020:INFO:        tune_sklearn: Not installed
2025-02-25 18:54:12,020:INFO:                 ray: Not installed
2025-02-25 18:54:12,020:INFO:            hyperopt: Not installed
2025-02-25 18:54:12,021:INFO:              optuna: Not installed
2025-02-25 18:54:12,021:INFO:               skopt: Not installed
2025-02-25 18:54:12,021:INFO:              mlflow: 2.20.2
2025-02-25 18:54:12,021:INFO:              gradio: Not installed
2025-02-25 18:54:12,021:INFO:             fastapi: Not installed
2025-02-25 18:54:12,021:INFO:             uvicorn: Not installed
2025-02-25 18:54:12,021:INFO:              m2cgen: Not installed
2025-02-25 18:54:12,021:INFO:           evidently: Not installed
2025-02-25 18:54:12,021:INFO:               fugue: Not installed
2025-02-25 18:54:12,021:INFO:           streamlit: Not installed
2025-02-25 18:54:12,021:INFO:             prophet: Not installed
2025-02-25 18:54:12,021:INFO:None
2025-02-25 18:54:12,021:INFO:Set up data.
2025-02-25 18:54:12,039:INFO:Set up folding strategy.
2025-02-25 18:54:12,039:INFO:Set up train/test split.
2025-02-25 18:54:12,085:INFO:Set up index.
2025-02-25 18:54:12,086:INFO:Assigning column types.
2025-02-25 18:54:12,090:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-02-25 18:54:12,090:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-02-25 18:54:12,095:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-02-25 18:54:12,098:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-02-25 18:54:12,147:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-25 18:54:12,182:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-25 18:54:12,182:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-25 18:54:12,182:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-25 18:54:12,183:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-02-25 18:54:12,185:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-02-25 18:54:12,188:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-02-25 18:54:12,235:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-25 18:54:12,270:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-25 18:54:12,271:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-25 18:54:12,271:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-25 18:54:12,271:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2025-02-25 18:54:12,275:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-02-25 18:54:12,279:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-02-25 18:54:12,328:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-25 18:54:12,366:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-25 18:54:12,366:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-25 18:54:12,366:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-25 18:54:12,371:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-02-25 18:54:12,374:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-02-25 18:54:12,417:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-25 18:54:12,450:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-25 18:54:12,450:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-25 18:54:12,451:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-25 18:54:12,451:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2025-02-25 18:54:12,458:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-02-25 18:54:12,501:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-25 18:54:12,534:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-25 18:54:12,535:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-25 18:54:12,535:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-25 18:54:12,542:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-02-25 18:54:12,585:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-25 18:54:12,619:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-25 18:54:12,619:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-25 18:54:12,619:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-25 18:54:12,619:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2025-02-25 18:54:12,670:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-25 18:54:12,703:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-25 18:54:12,703:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-25 18:54:12,703:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-25 18:54:12,753:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-25 18:54:12,788:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-25 18:54:12,788:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-25 18:54:12,788:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-25 18:54:12,788:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-02-25 18:54:12,839:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-25 18:54:12,872:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-25 18:54:12,872:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-25 18:54:12,923:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-25 18:54:12,957:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-25 18:54:12,957:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-25 18:54:12,957:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2025-02-25 18:54:13,043:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-25 18:54:13,043:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-25 18:54:13,131:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-25 18:54:13,131:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-25 18:54:13,147:INFO:Preparing preprocessing pipeline...
2025-02-25 18:54:13,148:INFO:Set up simple imputation.
2025-02-25 18:54:13,151:INFO:Set up encoding of categorical features.
2025-02-25 18:54:13,151:INFO:Set up removing multicollinearity.
2025-02-25 18:54:13,151:INFO:Set up removing outliers.
2025-02-25 18:54:13,151:INFO:Set up column transformation.
2025-02-25 18:54:13,151:INFO:Set up feature normalization.
2025-02-25 18:54:13,593:INFO:Finished creating preprocessing pipeline.
2025-02-25 18:54:13,603:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\forwo\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Rooms', 'Distance', 'Bathroom',
                                             'Car', 'Landsize', 'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Type', 'CouncilArea', 'Region'],
                                    transformer=SimpleImputer(strategy='most_frequent'...
                                                              handle_missing='return_nan'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=123))),
                ('transformation',
                 TransformerWrapper(transformer=PowerTransformer(standardize=False))),
                ('normalize',
                 TransformerWrapper(transformer=StandardScaler()))])
2025-02-25 18:54:13,603:INFO:Creating final display dataframe.
2025-02-25 18:54:14,267:INFO:Setup _display_container:                     Description                                          Value
0                    Session id                                            123
1                        Target                                          Price
2                   Target type                                     Regression
3           Original data shape                                    (10864, 10)
4        Transformed data shape                                    (10483, 19)
5   Transformed train set shape                                     (7223, 19)
6    Transformed test set shape                                     (3260, 19)
7              Numeric features                                              6
8          Categorical features                                              3
9      Rows with missing values                                          10.2%
10                   Preprocess                                           True
11              Imputation type                                         simple
12           Numeric imputation                                           mean
13       Categorical imputation                                           mode
14     Maximum one-hot encoding                                             25
15              Encoding method                                           None
16     Remove multicollinearity                                           True
17  Multicollinearity threshold                                            0.9
18              Remove outliers                                           True
19           Outliers threshold                                           0.05
20               Transformation                                           True
21        Transformation method                                    yeo-johnson
22                    Normalize                                           True
23             Normalize method                                         zscore
24               Fold Generator                                          KFold
25                  Fold Number                                             10
26                     CPU Jobs                                             -1
27                      Use GPU                                          False
28               Log Experiment                                          False
29              Experiment Name  Dekai_Melbourne_Residential_price_predictions
30                          USI                                           21ef
2025-02-25 18:54:14,366:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-25 18:54:14,367:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-25 18:54:14,462:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-25 18:54:14,462:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-25 18:54:14,462:INFO:setup() successfully completed in 2.5s...............
2025-02-25 18:54:14,463:INFO:Initializing compare_models()
2025-02-25 18:54:14,463:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023F5644B100>, include=None, fold=None, round=4, cross_validation=True, sort=RMSE, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x0000023F5644B100>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'RMSE', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2025-02-25 18:54:14,463:INFO:Checking exceptions
2025-02-25 18:54:14,465:INFO:Preparing display monitor
2025-02-25 18:54:14,469:INFO:Initializing Linear Regression
2025-02-25 18:54:14,469:INFO:Total runtime is 0.0 minutes
2025-02-25 18:54:14,469:INFO:SubProcess create_model() called ==================================
2025-02-25 18:54:14,469:INFO:Initializing create_model()
2025-02-25 18:54:14,469:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023F5644B100>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023F569F2F80>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-25 18:54:14,469:INFO:Checking exceptions
2025-02-25 18:54:14,469:INFO:Importing libraries
2025-02-25 18:54:14,469:INFO:Copying training dataset
2025-02-25 18:54:14,474:INFO:Defining folds
2025-02-25 18:54:14,474:INFO:Declaring metric variables
2025-02-25 18:54:14,474:INFO:Importing untrained model
2025-02-25 18:54:14,474:INFO:Linear Regression Imported successfully
2025-02-25 18:54:14,474:INFO:Starting cross validation
2025-02-25 18:54:14,486:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-25 18:54:19,747:INFO:Calculating mean and std
2025-02-25 18:54:19,749:INFO:Creating metrics dataframe
2025-02-25 18:54:19,751:INFO:Uploading results into container
2025-02-25 18:54:19,752:INFO:Uploading model into container now
2025-02-25 18:54:19,753:INFO:_master_model_container: 1
2025-02-25 18:54:19,753:INFO:_display_container: 2
2025-02-25 18:54:19,753:INFO:LinearRegression(n_jobs=-1)
2025-02-25 18:54:19,753:INFO:create_model() successfully completed......................................
2025-02-25 18:54:19,929:INFO:SubProcess create_model() end ==================================
2025-02-25 18:54:19,929:INFO:Creating metrics dataframe
2025-02-25 18:54:19,931:INFO:Initializing Lasso Regression
2025-02-25 18:54:19,931:INFO:Total runtime is 0.09103853702545166 minutes
2025-02-25 18:54:19,931:INFO:SubProcess create_model() called ==================================
2025-02-25 18:54:19,931:INFO:Initializing create_model()
2025-02-25 18:54:19,931:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023F5644B100>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023F569F2F80>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-25 18:54:19,931:INFO:Checking exceptions
2025-02-25 18:54:19,931:INFO:Importing libraries
2025-02-25 18:54:19,932:INFO:Copying training dataset
2025-02-25 18:54:19,936:INFO:Defining folds
2025-02-25 18:54:19,937:INFO:Declaring metric variables
2025-02-25 18:54:19,937:INFO:Importing untrained model
2025-02-25 18:54:19,937:INFO:Lasso Regression Imported successfully
2025-02-25 18:54:19,937:INFO:Starting cross validation
2025-02-25 18:54:19,944:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-25 18:54:20,731:WARNING:C:\Users\forwo\Downloads\dekai-mlops-assignment\venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.050e+12, tolerance: 2.411e+11
  model = cd_fast.enet_coordinate_descent(

2025-02-25 18:54:20,739:WARNING:C:\Users\forwo\Downloads\dekai-mlops-assignment\venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.778e+12, tolerance: 2.414e+11
  model = cd_fast.enet_coordinate_descent(

2025-02-25 18:54:23,378:WARNING:C:\Users\forwo\Downloads\dekai-mlops-assignment\venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.040e+13, tolerance: 2.309e+11
  model = cd_fast.enet_coordinate_descent(

2025-02-25 18:54:23,385:WARNING:C:\Users\forwo\Downloads\dekai-mlops-assignment\venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.420e+12, tolerance: 2.421e+11
  model = cd_fast.enet_coordinate_descent(

2025-02-25 18:54:23,395:WARNING:C:\Users\forwo\Downloads\dekai-mlops-assignment\venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.671e+12, tolerance: 2.471e+11
  model = cd_fast.enet_coordinate_descent(

2025-02-25 18:54:23,408:WARNING:C:\Users\forwo\Downloads\dekai-mlops-assignment\venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.615e+12, tolerance: 2.369e+11
  model = cd_fast.enet_coordinate_descent(

2025-02-25 18:54:23,414:WARNING:C:\Users\forwo\Downloads\dekai-mlops-assignment\venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.086e+12, tolerance: 2.451e+11
  model = cd_fast.enet_coordinate_descent(

2025-02-25 18:54:23,463:WARNING:C:\Users\forwo\Downloads\dekai-mlops-assignment\venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.909e+12, tolerance: 2.398e+11
  model = cd_fast.enet_coordinate_descent(

2025-02-25 18:54:23,501:INFO:Calculating mean and std
2025-02-25 18:54:23,502:INFO:Creating metrics dataframe
2025-02-25 18:54:23,504:INFO:Uploading results into container
2025-02-25 18:54:23,504:INFO:Uploading model into container now
2025-02-25 18:54:23,505:INFO:_master_model_container: 2
2025-02-25 18:54:23,505:INFO:_display_container: 2
2025-02-25 18:54:23,505:INFO:Lasso(random_state=123)
2025-02-25 18:54:23,505:INFO:create_model() successfully completed......................................
2025-02-25 18:54:23,623:INFO:SubProcess create_model() end ==================================
2025-02-25 18:54:23,623:INFO:Creating metrics dataframe
2025-02-25 18:54:23,626:INFO:Initializing Ridge Regression
2025-02-25 18:54:23,626:INFO:Total runtime is 0.1526153604189555 minutes
2025-02-25 18:54:23,626:INFO:SubProcess create_model() called ==================================
2025-02-25 18:54:23,627:INFO:Initializing create_model()
2025-02-25 18:54:23,627:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023F5644B100>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023F569F2F80>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-25 18:54:23,627:INFO:Checking exceptions
2025-02-25 18:54:23,627:INFO:Importing libraries
2025-02-25 18:54:23,627:INFO:Copying training dataset
2025-02-25 18:54:23,631:INFO:Defining folds
2025-02-25 18:54:23,631:INFO:Declaring metric variables
2025-02-25 18:54:23,631:INFO:Importing untrained model
2025-02-25 18:54:23,631:INFO:Ridge Regression Imported successfully
2025-02-25 18:54:23,631:INFO:Starting cross validation
2025-02-25 18:54:23,638:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-25 18:54:24,361:INFO:Calculating mean and std
2025-02-25 18:54:24,362:INFO:Creating metrics dataframe
2025-02-25 18:54:24,363:INFO:Uploading results into container
2025-02-25 18:54:24,364:INFO:Uploading model into container now
2025-02-25 18:54:24,364:INFO:_master_model_container: 3
2025-02-25 18:54:24,364:INFO:_display_container: 2
2025-02-25 18:54:24,364:INFO:Ridge(random_state=123)
2025-02-25 18:54:24,365:INFO:create_model() successfully completed......................................
2025-02-25 18:54:24,478:INFO:SubProcess create_model() end ==================================
2025-02-25 18:54:24,478:INFO:Creating metrics dataframe
2025-02-25 18:54:24,481:INFO:Initializing Elastic Net
2025-02-25 18:54:24,481:INFO:Total runtime is 0.16686230500539145 minutes
2025-02-25 18:54:24,481:INFO:SubProcess create_model() called ==================================
2025-02-25 18:54:24,481:INFO:Initializing create_model()
2025-02-25 18:54:24,481:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023F5644B100>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023F569F2F80>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-25 18:54:24,481:INFO:Checking exceptions
2025-02-25 18:54:24,481:INFO:Importing libraries
2025-02-25 18:54:24,481:INFO:Copying training dataset
2025-02-25 18:54:24,485:INFO:Defining folds
2025-02-25 18:54:24,485:INFO:Declaring metric variables
2025-02-25 18:54:24,485:INFO:Importing untrained model
2025-02-25 18:54:24,485:INFO:Elastic Net Imported successfully
2025-02-25 18:54:24,485:INFO:Starting cross validation
2025-02-25 18:54:24,492:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-25 18:54:25,183:INFO:Calculating mean and std
2025-02-25 18:54:25,184:INFO:Creating metrics dataframe
2025-02-25 18:54:25,185:INFO:Uploading results into container
2025-02-25 18:54:25,186:INFO:Uploading model into container now
2025-02-25 18:54:25,186:INFO:_master_model_container: 4
2025-02-25 18:54:25,186:INFO:_display_container: 2
2025-02-25 18:54:25,186:INFO:ElasticNet(random_state=123)
2025-02-25 18:54:25,186:INFO:create_model() successfully completed......................................
2025-02-25 18:54:25,297:INFO:SubProcess create_model() end ==================================
2025-02-25 18:54:25,297:INFO:Creating metrics dataframe
2025-02-25 18:54:25,299:INFO:Initializing Least Angle Regression
2025-02-25 18:54:25,299:INFO:Total runtime is 0.18050334850947064 minutes
2025-02-25 18:54:25,299:INFO:SubProcess create_model() called ==================================
2025-02-25 18:54:25,299:INFO:Initializing create_model()
2025-02-25 18:54:25,299:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023F5644B100>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023F569F2F80>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-25 18:54:25,299:INFO:Checking exceptions
2025-02-25 18:54:25,299:INFO:Importing libraries
2025-02-25 18:54:25,299:INFO:Copying training dataset
2025-02-25 18:54:25,304:INFO:Defining folds
2025-02-25 18:54:25,304:INFO:Declaring metric variables
2025-02-25 18:54:25,304:INFO:Importing untrained model
2025-02-25 18:54:25,304:INFO:Least Angle Regression Imported successfully
2025-02-25 18:54:25,304:INFO:Starting cross validation
2025-02-25 18:54:25,311:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-25 18:54:26,055:INFO:Calculating mean and std
2025-02-25 18:54:26,055:INFO:Creating metrics dataframe
2025-02-25 18:54:26,057:INFO:Uploading results into container
2025-02-25 18:54:26,057:INFO:Uploading model into container now
2025-02-25 18:54:26,057:INFO:_master_model_container: 5
2025-02-25 18:54:26,057:INFO:_display_container: 2
2025-02-25 18:54:26,058:INFO:Lars(random_state=123)
2025-02-25 18:54:26,058:INFO:create_model() successfully completed......................................
2025-02-25 18:54:26,170:INFO:SubProcess create_model() end ==================================
2025-02-25 18:54:26,170:INFO:Creating metrics dataframe
2025-02-25 18:54:26,172:INFO:Initializing Lasso Least Angle Regression
2025-02-25 18:54:26,172:INFO:Total runtime is 0.1950515111287435 minutes
2025-02-25 18:54:26,172:INFO:SubProcess create_model() called ==================================
2025-02-25 18:54:26,172:INFO:Initializing create_model()
2025-02-25 18:54:26,172:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023F5644B100>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023F569F2F80>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-25 18:54:26,172:INFO:Checking exceptions
2025-02-25 18:54:26,172:INFO:Importing libraries
2025-02-25 18:54:26,172:INFO:Copying training dataset
2025-02-25 18:54:26,178:INFO:Defining folds
2025-02-25 18:54:26,178:INFO:Declaring metric variables
2025-02-25 18:54:26,178:INFO:Importing untrained model
2025-02-25 18:54:26,178:INFO:Lasso Least Angle Regression Imported successfully
2025-02-25 18:54:26,178:INFO:Starting cross validation
2025-02-25 18:54:26,184:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-25 18:54:26,902:INFO:Calculating mean and std
2025-02-25 18:54:26,903:INFO:Creating metrics dataframe
2025-02-25 18:54:26,905:INFO:Uploading results into container
2025-02-25 18:54:26,905:INFO:Uploading model into container now
2025-02-25 18:54:26,905:INFO:_master_model_container: 6
2025-02-25 18:54:26,905:INFO:_display_container: 2
2025-02-25 18:54:26,906:INFO:LassoLars(random_state=123)
2025-02-25 18:54:26,906:INFO:create_model() successfully completed......................................
2025-02-25 18:54:27,016:INFO:SubProcess create_model() end ==================================
2025-02-25 18:54:27,016:INFO:Creating metrics dataframe
2025-02-25 18:54:27,018:INFO:Initializing Orthogonal Matching Pursuit
2025-02-25 18:54:27,018:INFO:Total runtime is 0.20915221373240153 minutes
2025-02-25 18:54:27,018:INFO:SubProcess create_model() called ==================================
2025-02-25 18:54:27,018:INFO:Initializing create_model()
2025-02-25 18:54:27,018:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023F5644B100>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023F569F2F80>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-25 18:54:27,018:INFO:Checking exceptions
2025-02-25 18:54:27,018:INFO:Importing libraries
2025-02-25 18:54:27,018:INFO:Copying training dataset
2025-02-25 18:54:27,023:INFO:Defining folds
2025-02-25 18:54:27,023:INFO:Declaring metric variables
2025-02-25 18:54:27,023:INFO:Importing untrained model
2025-02-25 18:54:27,023:INFO:Orthogonal Matching Pursuit Imported successfully
2025-02-25 18:54:27,024:INFO:Starting cross validation
2025-02-25 18:54:27,030:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-25 18:54:27,751:INFO:Calculating mean and std
2025-02-25 18:54:27,752:INFO:Creating metrics dataframe
2025-02-25 18:54:27,753:INFO:Uploading results into container
2025-02-25 18:54:27,753:INFO:Uploading model into container now
2025-02-25 18:54:27,753:INFO:_master_model_container: 7
2025-02-25 18:54:27,755:INFO:_display_container: 2
2025-02-25 18:54:27,755:INFO:OrthogonalMatchingPursuit()
2025-02-25 18:54:27,755:INFO:create_model() successfully completed......................................
2025-02-25 18:54:27,865:INFO:SubProcess create_model() end ==================================
2025-02-25 18:54:27,865:INFO:Creating metrics dataframe
2025-02-25 18:54:27,867:INFO:Initializing Bayesian Ridge
2025-02-25 18:54:27,867:INFO:Total runtime is 0.22330671946207684 minutes
2025-02-25 18:54:27,867:INFO:SubProcess create_model() called ==================================
2025-02-25 18:54:27,867:INFO:Initializing create_model()
2025-02-25 18:54:27,867:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023F5644B100>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023F569F2F80>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-25 18:54:27,868:INFO:Checking exceptions
2025-02-25 18:54:27,868:INFO:Importing libraries
2025-02-25 18:54:27,868:INFO:Copying training dataset
2025-02-25 18:54:27,872:INFO:Defining folds
2025-02-25 18:54:27,872:INFO:Declaring metric variables
2025-02-25 18:54:27,873:INFO:Importing untrained model
2025-02-25 18:54:27,873:INFO:Bayesian Ridge Imported successfully
2025-02-25 18:54:27,873:INFO:Starting cross validation
2025-02-25 18:54:27,878:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-25 18:54:28,595:INFO:Calculating mean and std
2025-02-25 18:54:28,596:INFO:Creating metrics dataframe
2025-02-25 18:54:28,597:INFO:Uploading results into container
2025-02-25 18:54:28,597:INFO:Uploading model into container now
2025-02-25 18:54:28,598:INFO:_master_model_container: 8
2025-02-25 18:54:28,598:INFO:_display_container: 2
2025-02-25 18:54:28,598:INFO:BayesianRidge()
2025-02-25 18:54:28,598:INFO:create_model() successfully completed......................................
2025-02-25 18:54:28,708:INFO:SubProcess create_model() end ==================================
2025-02-25 18:54:28,708:INFO:Creating metrics dataframe
2025-02-25 18:54:28,711:INFO:Initializing Passive Aggressive Regressor
2025-02-25 18:54:28,711:INFO:Total runtime is 0.23736533721288047 minutes
2025-02-25 18:54:28,711:INFO:SubProcess create_model() called ==================================
2025-02-25 18:54:28,711:INFO:Initializing create_model()
2025-02-25 18:54:28,711:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023F5644B100>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023F569F2F80>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-25 18:54:28,711:INFO:Checking exceptions
2025-02-25 18:54:28,711:INFO:Importing libraries
2025-02-25 18:54:28,711:INFO:Copying training dataset
2025-02-25 18:54:28,715:INFO:Defining folds
2025-02-25 18:54:28,715:INFO:Declaring metric variables
2025-02-25 18:54:28,716:INFO:Importing untrained model
2025-02-25 18:54:28,716:INFO:Passive Aggressive Regressor Imported successfully
2025-02-25 18:54:28,716:INFO:Starting cross validation
2025-02-25 18:54:28,722:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-25 18:54:30,081:INFO:Calculating mean and std
2025-02-25 18:54:30,082:INFO:Creating metrics dataframe
2025-02-25 18:54:30,083:INFO:Uploading results into container
2025-02-25 18:54:30,084:INFO:Uploading model into container now
2025-02-25 18:54:30,084:INFO:_master_model_container: 9
2025-02-25 18:54:30,084:INFO:_display_container: 2
2025-02-25 18:54:30,084:INFO:PassiveAggressiveRegressor(random_state=123)
2025-02-25 18:54:30,084:INFO:create_model() successfully completed......................................
2025-02-25 18:54:30,203:INFO:SubProcess create_model() end ==================================
2025-02-25 18:54:30,203:INFO:Creating metrics dataframe
2025-02-25 18:54:30,205:INFO:Initializing Huber Regressor
2025-02-25 18:54:30,205:INFO:Total runtime is 0.2622702479362488 minutes
2025-02-25 18:54:30,206:INFO:SubProcess create_model() called ==================================
2025-02-25 18:54:30,206:INFO:Initializing create_model()
2025-02-25 18:54:30,206:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023F5644B100>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023F569F2F80>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-25 18:54:30,206:INFO:Checking exceptions
2025-02-25 18:54:30,206:INFO:Importing libraries
2025-02-25 18:54:30,206:INFO:Copying training dataset
2025-02-25 18:54:30,211:INFO:Defining folds
2025-02-25 18:54:30,212:INFO:Declaring metric variables
2025-02-25 18:54:30,212:INFO:Importing untrained model
2025-02-25 18:54:30,212:INFO:Huber Regressor Imported successfully
2025-02-25 18:54:30,212:INFO:Starting cross validation
2025-02-25 18:54:30,219:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-25 18:54:31,075:INFO:Calculating mean and std
2025-02-25 18:54:31,076:INFO:Creating metrics dataframe
2025-02-25 18:54:31,078:INFO:Uploading results into container
2025-02-25 18:54:31,078:INFO:Uploading model into container now
2025-02-25 18:54:31,079:INFO:_master_model_container: 10
2025-02-25 18:54:31,079:INFO:_display_container: 2
2025-02-25 18:54:31,079:INFO:HuberRegressor()
2025-02-25 18:54:31,079:INFO:create_model() successfully completed......................................
2025-02-25 18:54:31,188:INFO:SubProcess create_model() end ==================================
2025-02-25 18:54:31,188:INFO:Creating metrics dataframe
2025-02-25 18:54:31,192:INFO:Initializing K Neighbors Regressor
2025-02-25 18:54:31,192:INFO:Total runtime is 0.27871584097544355 minutes
2025-02-25 18:54:31,192:INFO:SubProcess create_model() called ==================================
2025-02-25 18:54:31,192:INFO:Initializing create_model()
2025-02-25 18:54:31,192:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023F5644B100>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023F569F2F80>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-25 18:54:31,192:INFO:Checking exceptions
2025-02-25 18:54:31,192:INFO:Importing libraries
2025-02-25 18:54:31,192:INFO:Copying training dataset
2025-02-25 18:54:31,196:INFO:Defining folds
2025-02-25 18:54:31,196:INFO:Declaring metric variables
2025-02-25 18:54:31,196:INFO:Importing untrained model
2025-02-25 18:54:31,196:INFO:K Neighbors Regressor Imported successfully
2025-02-25 18:54:31,197:INFO:Starting cross validation
2025-02-25 18:54:31,204:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-25 18:54:32,075:INFO:Calculating mean and std
2025-02-25 18:54:32,076:INFO:Creating metrics dataframe
2025-02-25 18:54:32,078:INFO:Uploading results into container
2025-02-25 18:54:32,078:INFO:Uploading model into container now
2025-02-25 18:54:32,078:INFO:_master_model_container: 11
2025-02-25 18:54:32,078:INFO:_display_container: 2
2025-02-25 18:54:32,079:INFO:KNeighborsRegressor(n_jobs=-1)
2025-02-25 18:54:32,079:INFO:create_model() successfully completed......................................
2025-02-25 18:54:32,189:INFO:SubProcess create_model() end ==================================
2025-02-25 18:54:32,189:INFO:Creating metrics dataframe
2025-02-25 18:54:32,191:INFO:Initializing Decision Tree Regressor
2025-02-25 18:54:32,191:INFO:Total runtime is 0.2953693389892578 minutes
2025-02-25 18:54:32,191:INFO:SubProcess create_model() called ==================================
2025-02-25 18:54:32,191:INFO:Initializing create_model()
2025-02-25 18:54:32,192:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023F5644B100>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023F569F2F80>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-25 18:54:32,192:INFO:Checking exceptions
2025-02-25 18:54:32,192:INFO:Importing libraries
2025-02-25 18:54:32,192:INFO:Copying training dataset
2025-02-25 18:54:32,196:INFO:Defining folds
2025-02-25 18:54:32,196:INFO:Declaring metric variables
2025-02-25 18:54:32,197:INFO:Importing untrained model
2025-02-25 18:54:32,197:INFO:Decision Tree Regressor Imported successfully
2025-02-25 18:54:32,197:INFO:Starting cross validation
2025-02-25 18:54:32,203:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-25 18:54:32,941:INFO:Calculating mean and std
2025-02-25 18:54:32,941:INFO:Creating metrics dataframe
2025-02-25 18:54:32,943:INFO:Uploading results into container
2025-02-25 18:54:32,943:INFO:Uploading model into container now
2025-02-25 18:54:32,944:INFO:_master_model_container: 12
2025-02-25 18:54:32,944:INFO:_display_container: 2
2025-02-25 18:54:32,944:INFO:DecisionTreeRegressor(random_state=123)
2025-02-25 18:54:32,944:INFO:create_model() successfully completed......................................
2025-02-25 18:54:33,055:INFO:SubProcess create_model() end ==================================
2025-02-25 18:54:33,055:INFO:Creating metrics dataframe
2025-02-25 18:54:33,059:INFO:Initializing Random Forest Regressor
2025-02-25 18:54:33,059:INFO:Total runtime is 0.30983065764109297 minutes
2025-02-25 18:54:33,059:INFO:SubProcess create_model() called ==================================
2025-02-25 18:54:33,059:INFO:Initializing create_model()
2025-02-25 18:54:33,059:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023F5644B100>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023F569F2F80>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-25 18:54:33,059:INFO:Checking exceptions
2025-02-25 18:54:33,059:INFO:Importing libraries
2025-02-25 18:54:33,059:INFO:Copying training dataset
2025-02-25 18:54:33,065:INFO:Defining folds
2025-02-25 18:54:33,065:INFO:Declaring metric variables
2025-02-25 18:54:33,065:INFO:Importing untrained model
2025-02-25 18:54:33,066:INFO:Random Forest Regressor Imported successfully
2025-02-25 18:54:33,066:INFO:Starting cross validation
2025-02-25 18:54:33,074:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-25 18:54:36,242:INFO:Calculating mean and std
2025-02-25 18:54:36,243:INFO:Creating metrics dataframe
2025-02-25 18:54:36,246:INFO:Uploading results into container
2025-02-25 18:54:36,246:INFO:Uploading model into container now
2025-02-25 18:54:36,247:INFO:_master_model_container: 13
2025-02-25 18:54:36,247:INFO:_display_container: 2
2025-02-25 18:54:36,247:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2025-02-25 18:54:36,247:INFO:create_model() successfully completed......................................
2025-02-25 18:54:36,393:INFO:SubProcess create_model() end ==================================
2025-02-25 18:54:36,394:INFO:Creating metrics dataframe
2025-02-25 18:54:36,396:INFO:Initializing Extra Trees Regressor
2025-02-25 18:54:36,396:INFO:Total runtime is 0.3654574275016785 minutes
2025-02-25 18:54:36,396:INFO:SubProcess create_model() called ==================================
2025-02-25 18:54:36,396:INFO:Initializing create_model()
2025-02-25 18:54:36,396:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023F5644B100>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023F569F2F80>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-25 18:54:36,396:INFO:Checking exceptions
2025-02-25 18:54:36,396:INFO:Importing libraries
2025-02-25 18:54:36,396:INFO:Copying training dataset
2025-02-25 18:54:36,402:INFO:Defining folds
2025-02-25 18:54:36,402:INFO:Declaring metric variables
2025-02-25 18:54:36,402:INFO:Importing untrained model
2025-02-25 18:54:36,403:INFO:Extra Trees Regressor Imported successfully
2025-02-25 18:54:36,403:INFO:Starting cross validation
2025-02-25 18:54:36,408:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-25 18:54:38,964:INFO:Calculating mean and std
2025-02-25 18:54:38,965:INFO:Creating metrics dataframe
2025-02-25 18:54:38,967:INFO:Uploading results into container
2025-02-25 18:54:38,967:INFO:Uploading model into container now
2025-02-25 18:54:38,968:INFO:_master_model_container: 14
2025-02-25 18:54:38,968:INFO:_display_container: 2
2025-02-25 18:54:38,968:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2025-02-25 18:54:38,968:INFO:create_model() successfully completed......................................
2025-02-25 18:54:39,117:INFO:SubProcess create_model() end ==================================
2025-02-25 18:54:39,117:INFO:Creating metrics dataframe
2025-02-25 18:54:39,119:INFO:Initializing AdaBoost Regressor
2025-02-25 18:54:39,119:INFO:Total runtime is 0.41082844336827595 minutes
2025-02-25 18:54:39,119:INFO:SubProcess create_model() called ==================================
2025-02-25 18:54:39,120:INFO:Initializing create_model()
2025-02-25 18:54:39,120:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023F5644B100>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023F569F2F80>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-25 18:54:39,120:INFO:Checking exceptions
2025-02-25 18:54:39,120:INFO:Importing libraries
2025-02-25 18:54:39,120:INFO:Copying training dataset
2025-02-25 18:54:39,127:INFO:Defining folds
2025-02-25 18:54:39,127:INFO:Declaring metric variables
2025-02-25 18:54:39,127:INFO:Importing untrained model
2025-02-25 18:54:39,127:INFO:AdaBoost Regressor Imported successfully
2025-02-25 18:54:39,128:INFO:Starting cross validation
2025-02-25 18:54:39,135:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-25 18:54:40,398:INFO:Calculating mean and std
2025-02-25 18:54:40,398:INFO:Creating metrics dataframe
2025-02-25 18:54:40,401:INFO:Uploading results into container
2025-02-25 18:54:40,401:INFO:Uploading model into container now
2025-02-25 18:54:40,401:INFO:_master_model_container: 15
2025-02-25 18:54:40,401:INFO:_display_container: 2
2025-02-25 18:54:40,402:INFO:AdaBoostRegressor(random_state=123)
2025-02-25 18:54:40,402:INFO:create_model() successfully completed......................................
2025-02-25 18:54:40,511:INFO:SubProcess create_model() end ==================================
2025-02-25 18:54:40,511:INFO:Creating metrics dataframe
2025-02-25 18:54:40,513:INFO:Initializing Gradient Boosting Regressor
2025-02-25 18:54:40,513:INFO:Total runtime is 0.4340645432472229 minutes
2025-02-25 18:54:40,513:INFO:SubProcess create_model() called ==================================
2025-02-25 18:54:40,513:INFO:Initializing create_model()
2025-02-25 18:54:40,513:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023F5644B100>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023F569F2F80>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-25 18:54:40,513:INFO:Checking exceptions
2025-02-25 18:54:40,513:INFO:Importing libraries
2025-02-25 18:54:40,513:INFO:Copying training dataset
2025-02-25 18:54:40,517:INFO:Defining folds
2025-02-25 18:54:40,517:INFO:Declaring metric variables
2025-02-25 18:54:40,517:INFO:Importing untrained model
2025-02-25 18:54:40,518:INFO:Gradient Boosting Regressor Imported successfully
2025-02-25 18:54:40,518:INFO:Starting cross validation
2025-02-25 18:54:40,524:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-25 18:54:41,984:INFO:Calculating mean and std
2025-02-25 18:54:41,985:INFO:Creating metrics dataframe
2025-02-25 18:54:41,987:INFO:Uploading results into container
2025-02-25 18:54:41,988:INFO:Uploading model into container now
2025-02-25 18:54:41,988:INFO:_master_model_container: 16
2025-02-25 18:54:41,988:INFO:_display_container: 2
2025-02-25 18:54:41,988:INFO:GradientBoostingRegressor(random_state=123)
2025-02-25 18:54:41,988:INFO:create_model() successfully completed......................................
2025-02-25 18:54:42,099:INFO:SubProcess create_model() end ==================================
2025-02-25 18:54:42,100:INFO:Creating metrics dataframe
2025-02-25 18:54:42,101:INFO:Initializing Light Gradient Boosting Machine
2025-02-25 18:54:42,102:INFO:Total runtime is 0.46055375337600707 minutes
2025-02-25 18:54:42,102:INFO:SubProcess create_model() called ==================================
2025-02-25 18:54:42,102:INFO:Initializing create_model()
2025-02-25 18:54:42,102:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023F5644B100>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023F569F2F80>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-25 18:54:42,102:INFO:Checking exceptions
2025-02-25 18:54:42,102:INFO:Importing libraries
2025-02-25 18:54:42,102:INFO:Copying training dataset
2025-02-25 18:54:42,107:INFO:Defining folds
2025-02-25 18:54:42,107:INFO:Declaring metric variables
2025-02-25 18:54:42,107:INFO:Importing untrained model
2025-02-25 18:54:42,108:INFO:Light Gradient Boosting Machine Imported successfully
2025-02-25 18:54:42,108:INFO:Starting cross validation
2025-02-25 18:54:42,114:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-25 18:54:43,964:INFO:Calculating mean and std
2025-02-25 18:54:43,966:INFO:Creating metrics dataframe
2025-02-25 18:54:43,968:INFO:Uploading results into container
2025-02-25 18:54:43,969:INFO:Uploading model into container now
2025-02-25 18:54:43,969:INFO:_master_model_container: 17
2025-02-25 18:54:43,969:INFO:_display_container: 2
2025-02-25 18:54:43,969:INFO:LGBMRegressor(n_jobs=-1, random_state=123)
2025-02-25 18:54:43,970:INFO:create_model() successfully completed......................................
2025-02-25 18:54:44,110:INFO:SubProcess create_model() end ==================================
2025-02-25 18:54:44,110:INFO:Creating metrics dataframe
2025-02-25 18:54:44,112:INFO:Initializing Dummy Regressor
2025-02-25 18:54:44,112:INFO:Total runtime is 0.49405841827392577 minutes
2025-02-25 18:54:44,112:INFO:SubProcess create_model() called ==================================
2025-02-25 18:54:44,113:INFO:Initializing create_model()
2025-02-25 18:54:44,113:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023F5644B100>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023F569F2F80>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-25 18:54:44,113:INFO:Checking exceptions
2025-02-25 18:54:44,113:INFO:Importing libraries
2025-02-25 18:54:44,113:INFO:Copying training dataset
2025-02-25 18:54:44,118:INFO:Defining folds
2025-02-25 18:54:44,118:INFO:Declaring metric variables
2025-02-25 18:54:44,118:INFO:Importing untrained model
2025-02-25 18:54:44,119:INFO:Dummy Regressor Imported successfully
2025-02-25 18:54:44,119:INFO:Starting cross validation
2025-02-25 18:54:44,126:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-25 18:54:44,836:INFO:Calculating mean and std
2025-02-25 18:54:44,837:INFO:Creating metrics dataframe
2025-02-25 18:54:44,838:INFO:Uploading results into container
2025-02-25 18:54:44,838:INFO:Uploading model into container now
2025-02-25 18:54:44,840:INFO:_master_model_container: 18
2025-02-25 18:54:44,840:INFO:_display_container: 2
2025-02-25 18:54:44,840:INFO:DummyRegressor()
2025-02-25 18:54:44,840:INFO:create_model() successfully completed......................................
2025-02-25 18:54:44,953:INFO:SubProcess create_model() end ==================================
2025-02-25 18:54:44,953:INFO:Creating metrics dataframe
2025-02-25 18:54:44,977:WARNING:C:\Users\forwo\Downloads\dekai-mlops-assignment\venv\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2025-02-25 18:54:44,979:INFO:Initializing create_model()
2025-02-25 18:54:44,979:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023F5644B100>, estimator=LGBMRegressor(n_jobs=-1, random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-25 18:54:44,979:INFO:Checking exceptions
2025-02-25 18:54:44,979:INFO:Importing libraries
2025-02-25 18:54:44,979:INFO:Copying training dataset
2025-02-25 18:54:44,984:INFO:Defining folds
2025-02-25 18:54:44,984:INFO:Declaring metric variables
2025-02-25 18:54:44,984:INFO:Importing untrained model
2025-02-25 18:54:44,984:INFO:Declaring custom model
2025-02-25 18:54:44,985:INFO:Light Gradient Boosting Machine Imported successfully
2025-02-25 18:54:44,992:INFO:Cross validation set to False
2025-02-25 18:54:44,992:INFO:Fitting Model
2025-02-25 18:54:45,322:INFO:[LightGBM] [Warning] Found whitespace in feature_names, replace with underlines
2025-02-25 18:54:45,323:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000347 seconds.
2025-02-25 18:54:45,324:INFO:You can set `force_row_wise=true` to remove the overhead.
2025-02-25 18:54:45,324:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2025-02-25 18:54:45,324:INFO:[LightGBM] [Info] Total Bins 619
2025-02-25 18:54:45,324:INFO:[LightGBM] [Info] Number of data points in the train set: 7223, number of used features: 15
2025-02-25 18:54:45,324:INFO:[LightGBM] [Info] Start training from score 1059058.031150
2025-02-25 18:54:45,411:INFO:LGBMRegressor(n_jobs=-1, random_state=123)
2025-02-25 18:54:45,411:INFO:create_model() successfully completed......................................
2025-02-25 18:54:45,554:INFO:_master_model_container: 18
2025-02-25 18:54:45,556:INFO:_display_container: 2
2025-02-25 18:54:45,556:INFO:LGBMRegressor(n_jobs=-1, random_state=123)
2025-02-25 18:54:45,556:INFO:compare_models() successfully completed......................................
2025-02-25 18:54:45,557:INFO:Initializing tune_model()
2025-02-25 18:54:45,557:INFO:tune_model(estimator=LGBMRegressor(n_jobs=-1, random_state=123), fold=None, round=4, n_iter=10, custom_grid=None, optimize=RMSE, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023F5644B100>)
2025-02-25 18:54:45,557:INFO:Checking exceptions
2025-02-25 18:54:45,560:INFO:Copying training dataset
2025-02-25 18:54:45,564:INFO:Checking base model
2025-02-25 18:54:45,564:INFO:Base model : Light Gradient Boosting Machine
2025-02-25 18:54:45,564:INFO:Declaring metric variables
2025-02-25 18:54:45,565:INFO:Defining Hyperparameters
2025-02-25 18:54:45,686:INFO:Tuning with n_jobs=-1
2025-02-25 18:54:45,686:INFO:Initializing RandomizedSearchCV
2025-02-25 18:55:24,779:INFO:best_params: {'actual_estimator__reg_lambda': 3, 'actual_estimator__reg_alpha': 2, 'actual_estimator__num_leaves': 70, 'actual_estimator__n_estimators': 260, 'actual_estimator__min_split_gain': 0.9, 'actual_estimator__min_child_samples': 41, 'actual_estimator__learning_rate': 0.1, 'actual_estimator__feature_fraction': 0.4, 'actual_estimator__bagging_freq': 2, 'actual_estimator__bagging_fraction': 0.6}
2025-02-25 18:55:24,779:INFO:Hyperparameter search completed
2025-02-25 18:55:24,779:INFO:SubProcess create_model() called ==================================
2025-02-25 18:55:24,780:INFO:Initializing create_model()
2025-02-25 18:55:24,780:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023F5644B100>, estimator=LGBMRegressor(n_jobs=-1, random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023F5655EEF0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'reg_lambda': 3, 'reg_alpha': 2, 'num_leaves': 70, 'n_estimators': 260, 'min_split_gain': 0.9, 'min_child_samples': 41, 'learning_rate': 0.1, 'feature_fraction': 0.4, 'bagging_freq': 2, 'bagging_fraction': 0.6})
2025-02-25 18:55:24,780:INFO:Checking exceptions
2025-02-25 18:55:24,780:INFO:Importing libraries
2025-02-25 18:55:24,780:INFO:Copying training dataset
2025-02-25 18:55:24,790:INFO:Defining folds
2025-02-25 18:55:24,790:INFO:Declaring metric variables
2025-02-25 18:55:24,790:INFO:Importing untrained model
2025-02-25 18:55:24,790:INFO:Declaring custom model
2025-02-25 18:55:24,792:INFO:Light Gradient Boosting Machine Imported successfully
2025-02-25 18:55:24,792:INFO:Starting cross validation
2025-02-25 18:55:24,808:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-25 18:55:30,590:INFO:Calculating mean and std
2025-02-25 18:55:30,591:INFO:Creating metrics dataframe
2025-02-25 18:55:30,593:INFO:Finalizing model
2025-02-25 18:55:30,977:INFO:[LightGBM] [Warning] feature_fraction is set=0.4, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.4
2025-02-25 18:55:30,977:INFO:[LightGBM] [Warning] bagging_fraction is set=0.6, subsample=1.0 will be ignored. Current value: bagging_fraction=0.6
2025-02-25 18:55:30,977:INFO:[LightGBM] [Warning] bagging_freq is set=2, subsample_freq=0 will be ignored. Current value: bagging_freq=2
2025-02-25 18:55:30,982:INFO:[LightGBM] [Warning] Found whitespace in feature_names, replace with underlines
2025-02-25 18:55:30,982:INFO:[LightGBM] [Warning] feature_fraction is set=0.4, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.4
2025-02-25 18:55:30,982:INFO:[LightGBM] [Warning] bagging_fraction is set=0.6, subsample=1.0 will be ignored. Current value: bagging_fraction=0.6
2025-02-25 18:55:30,982:INFO:[LightGBM] [Warning] bagging_freq is set=2, subsample_freq=0 will be ignored. Current value: bagging_freq=2
2025-02-25 18:55:30,984:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000282 seconds.
2025-02-25 18:55:30,984:INFO:You can set `force_row_wise=true` to remove the overhead.
2025-02-25 18:55:30,984:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2025-02-25 18:55:30,984:INFO:[LightGBM] [Info] Total Bins 619
2025-02-25 18:55:30,984:INFO:[LightGBM] [Info] Number of data points in the train set: 7223, number of used features: 15
2025-02-25 18:55:30,985:INFO:[LightGBM] [Info] Start training from score 1059058.031150
2025-02-25 18:55:30,986:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 18:55:30,987:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 18:55:30,990:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 18:55:30,992:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 18:55:30,993:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 18:55:30,994:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 18:55:30,995:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 18:55:30,998:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 18:55:31,000:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 18:55:31,002:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 18:55:31,004:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 18:55:31,005:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 18:55:31,008:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 18:55:31,010:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 18:55:31,013:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 18:55:31,014:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 18:55:31,016:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 18:55:31,018:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 18:55:31,020:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 18:55:31,022:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 18:55:31,024:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 18:55:31,028:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 18:55:31,031:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 18:55:31,033:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 18:55:31,035:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 18:55:31,041:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 18:55:31,044:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 18:55:31,048:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 18:55:31,051:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 18:55:31,058:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 18:55:31,059:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 18:55:31,060:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 18:55:31,063:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 18:55:31,065:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 18:55:31,076:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 18:55:31,078:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 18:55:31,082:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 18:55:31,085:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 18:55:31,093:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 18:55:31,096:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 18:55:31,098:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 18:55:31,101:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 18:55:31,106:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 18:55:31,120:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 18:55:31,122:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 18:55:31,125:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 18:55:31,126:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 18:55:31,132:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 18:55:31,139:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 18:55:31,144:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 18:55:31,154:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 18:55:31,159:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 18:55:31,162:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 18:55:31,164:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 18:55:31,166:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 18:55:31,167:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 18:55:31,168:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 18:55:31,178:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 18:55:31,185:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 18:55:31,189:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 18:55:31,191:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 18:55:31,194:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 18:55:31,196:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 18:55:31,204:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 18:55:31,222:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 18:55:31,227:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 18:55:31,230:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 18:55:31,245:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 18:55:31,248:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 18:55:31,249:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 18:55:31,251:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 18:55:31,254:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 18:55:31,256:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 18:55:31,260:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 18:55:31,275:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 18:55:31,282:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 18:55:31,286:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 18:55:31,295:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 18:55:31,302:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 18:55:31,309:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 18:55:31,310:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 18:55:31,311:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 18:55:31,323:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 18:55:31,325:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 18:55:31,329:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 18:55:31,331:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 18:55:31,361:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 18:55:31,383:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 18:55:31,391:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 18:55:31,402:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 18:55:31,407:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 18:55:31,413:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 18:55:31,418:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 18:55:31,421:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 18:55:31,424:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 18:55:31,425:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 18:55:31,426:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 18:55:31,427:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 18:55:31,433:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 18:55:31,435:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 18:55:31,437:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 18:55:31,442:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 18:55:31,443:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 18:55:31,450:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 18:55:31,457:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 18:55:31,461:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 18:55:31,463:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 18:55:31,465:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 18:55:31,468:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 18:55:31,470:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 18:55:31,472:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 18:55:31,474:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 18:55:31,478:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 18:55:31,481:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 18:55:31,483:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 18:55:31,490:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 18:55:31,493:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 18:55:31,494:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 18:55:31,502:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 18:55:31,502:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 18:55:31,510:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 18:55:31,524:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 18:55:31,525:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 18:55:31,530:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 18:55:31,536:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 18:55:31,538:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 18:55:31,547:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 18:55:31,553:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 18:55:31,555:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 18:55:31,557:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 18:55:31,558:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 18:55:31,565:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 18:55:31,591:INFO:Uploading results into container
2025-02-25 18:55:31,592:INFO:Uploading model into container now
2025-02-25 18:55:31,592:INFO:_master_model_container: 19
2025-02-25 18:55:31,592:INFO:_display_container: 3
2025-02-25 18:55:31,593:INFO:LGBMRegressor(bagging_fraction=0.6, bagging_freq=2, feature_fraction=0.4,
              min_child_samples=41, min_split_gain=0.9, n_estimators=260,
              n_jobs=-1, num_leaves=70, random_state=123, reg_alpha=2,
              reg_lambda=3)
2025-02-25 18:55:31,593:INFO:create_model() successfully completed......................................
2025-02-25 18:55:31,733:INFO:SubProcess create_model() end ==================================
2025-02-25 18:55:31,733:INFO:choose_better activated
2025-02-25 18:55:31,734:INFO:SubProcess create_model() called ==================================
2025-02-25 18:55:31,734:INFO:Initializing create_model()
2025-02-25 18:55:31,734:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023F5644B100>, estimator=LGBMRegressor(n_jobs=-1, random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-25 18:55:31,734:INFO:Checking exceptions
2025-02-25 18:55:31,735:INFO:Importing libraries
2025-02-25 18:55:31,735:INFO:Copying training dataset
2025-02-25 18:55:31,740:INFO:Defining folds
2025-02-25 18:55:31,740:INFO:Declaring metric variables
2025-02-25 18:55:31,740:INFO:Importing untrained model
2025-02-25 18:55:31,740:INFO:Declaring custom model
2025-02-25 18:55:31,741:INFO:Light Gradient Boosting Machine Imported successfully
2025-02-25 18:55:31,741:INFO:Starting cross validation
2025-02-25 18:55:31,748:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-25 18:55:33,550:INFO:Calculating mean and std
2025-02-25 18:55:33,551:INFO:Creating metrics dataframe
2025-02-25 18:55:33,553:INFO:Finalizing model
2025-02-25 18:55:33,922:INFO:[LightGBM] [Warning] Found whitespace in feature_names, replace with underlines
2025-02-25 18:55:33,923:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000773 seconds.
2025-02-25 18:55:33,923:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-02-25 18:55:33,923:INFO:[LightGBM] [Info] Total Bins 619
2025-02-25 18:55:33,924:INFO:[LightGBM] [Info] Number of data points in the train set: 7223, number of used features: 15
2025-02-25 18:55:33,924:INFO:[LightGBM] [Info] Start training from score 1059058.031150
2025-02-25 18:55:34,002:INFO:Uploading results into container
2025-02-25 18:55:34,003:INFO:Uploading model into container now
2025-02-25 18:55:34,004:INFO:_master_model_container: 20
2025-02-25 18:55:34,004:INFO:_display_container: 4
2025-02-25 18:55:34,004:INFO:LGBMRegressor(n_jobs=-1, random_state=123)
2025-02-25 18:55:34,004:INFO:create_model() successfully completed......................................
2025-02-25 18:55:34,134:INFO:SubProcess create_model() end ==================================
2025-02-25 18:55:34,135:INFO:LGBMRegressor(n_jobs=-1, random_state=123) result for RMSE is 298241.0856
2025-02-25 18:55:34,135:INFO:LGBMRegressor(bagging_fraction=0.6, bagging_freq=2, feature_fraction=0.4,
              min_child_samples=41, min_split_gain=0.9, n_estimators=260,
              n_jobs=-1, num_leaves=70, random_state=123, reg_alpha=2,
              reg_lambda=3) result for RMSE is 298098.797
2025-02-25 18:55:34,135:INFO:LGBMRegressor(bagging_fraction=0.6, bagging_freq=2, feature_fraction=0.4,
              min_child_samples=41, min_split_gain=0.9, n_estimators=260,
              n_jobs=-1, num_leaves=70, random_state=123, reg_alpha=2,
              reg_lambda=3) is best model
2025-02-25 18:55:34,135:INFO:choose_better completed
2025-02-25 18:55:34,142:INFO:_master_model_container: 20
2025-02-25 18:55:34,142:INFO:_display_container: 3
2025-02-25 18:55:34,142:INFO:LGBMRegressor(bagging_fraction=0.6, bagging_freq=2, feature_fraction=0.4,
              min_child_samples=41, min_split_gain=0.9, n_estimators=260,
              n_jobs=-1, num_leaves=70, random_state=123, reg_alpha=2,
              reg_lambda=3)
2025-02-25 18:55:34,142:INFO:tune_model() successfully completed......................................
2025-02-25 18:55:34,254:INFO:Initializing evaluate_model()
2025-02-25 18:55:34,254:INFO:evaluate_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023F5644B100>, estimator=LGBMRegressor(bagging_fraction=0.6, bagging_freq=2, feature_fraction=0.4,
              min_child_samples=41, min_split_gain=0.9, n_estimators=260,
              n_jobs=-1, num_leaves=70, random_state=123, reg_alpha=2,
              reg_lambda=3), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2025-02-25 18:55:34,260:INFO:Initializing plot_model()
2025-02-25 18:55:34,260:INFO:plot_model(plot=pipeline, fold=KFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=LGBMRegressor(bagging_fraction=0.6, bagging_freq=2, feature_fraction=0.4,
              min_child_samples=41, min_split_gain=0.9, n_estimators=260,
              n_jobs=-1, num_leaves=70, random_state=123, reg_alpha=2,
              reg_lambda=3), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023F5644B100>, system=True)
2025-02-25 18:55:34,260:INFO:Checking exceptions
2025-02-25 18:55:34,262:INFO:Preloading libraries
2025-02-25 18:55:34,283:INFO:Copying training dataset
2025-02-25 18:55:34,283:INFO:Plot type: pipeline
2025-02-25 18:55:49,284:INFO:Visual Rendered Successfully
2025-02-25 18:55:49,426:INFO:plot_model() successfully completed......................................
2025-02-25 18:55:49,428:INFO:Initializing plot_model()
2025-02-25 18:55:49,429:INFO:plot_model(plot=residuals, fold=None, verbose=True, display=None, display_format=None, estimator=LGBMRegressor(bagging_fraction=0.6, bagging_freq=2, feature_fraction=0.4,
              min_child_samples=41, min_split_gain=0.9, n_estimators=260,
              n_jobs=-1, num_leaves=70, random_state=123, reg_alpha=2,
              reg_lambda=3), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023F5644B100>, system=True)
2025-02-25 18:55:49,429:INFO:Checking exceptions
2025-02-25 18:55:49,431:INFO:Preloading libraries
2025-02-25 18:55:49,454:INFO:Copying training dataset
2025-02-25 18:55:49,454:INFO:Plot type: residuals
2025-02-25 18:55:50,028:INFO:Fitting Model
2025-02-25 18:55:50,028:INFO:[LightGBM] [Warning] feature_fraction is set=0.4, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.4
2025-02-25 18:55:50,028:INFO:[LightGBM] [Warning] bagging_fraction is set=0.6, subsample=1.0 will be ignored. Current value: bagging_fraction=0.6
2025-02-25 18:55:50,030:INFO:[LightGBM] [Warning] bagging_freq is set=2, subsample_freq=0 will be ignored. Current value: bagging_freq=2
2025-02-25 18:55:50,061:INFO:[LightGBM] [Warning] feature_fraction is set=0.4, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.4
2025-02-25 18:55:50,061:INFO:[LightGBM] [Warning] bagging_fraction is set=0.6, subsample=1.0 will be ignored. Current value: bagging_fraction=0.6
2025-02-25 18:55:50,061:INFO:[LightGBM] [Warning] bagging_freq is set=2, subsample_freq=0 will be ignored. Current value: bagging_freq=2
2025-02-25 18:55:50,138:INFO:Scoring test/hold-out set
2025-02-25 18:55:50,140:INFO:[LightGBM] [Warning] feature_fraction is set=0.4, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.4
2025-02-25 18:55:50,141:INFO:[LightGBM] [Warning] bagging_fraction is set=0.6, subsample=1.0 will be ignored. Current value: bagging_fraction=0.6
2025-02-25 18:55:50,141:INFO:[LightGBM] [Warning] bagging_freq is set=2, subsample_freq=0 will be ignored. Current value: bagging_freq=2
2025-02-25 18:55:50,154:INFO:[LightGBM] [Warning] feature_fraction is set=0.4, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.4
2025-02-25 18:55:50,154:INFO:[LightGBM] [Warning] bagging_fraction is set=0.6, subsample=1.0 will be ignored. Current value: bagging_fraction=0.6
2025-02-25 18:55:50,154:INFO:[LightGBM] [Warning] bagging_freq is set=2, subsample_freq=0 will be ignored. Current value: bagging_freq=2
2025-02-25 18:55:50,209:INFO:Saving 'Residuals.png'
2025-02-25 18:55:50,695:INFO:Visual Rendered Successfully
2025-02-25 18:55:50,839:INFO:plot_model() successfully completed......................................
2025-02-25 18:55:50,840:INFO:Initializing plot_model()
2025-02-25 18:55:50,840:INFO:plot_model(plot=error, fold=None, verbose=True, display=None, display_format=None, estimator=LGBMRegressor(bagging_fraction=0.6, bagging_freq=2, feature_fraction=0.4,
              min_child_samples=41, min_split_gain=0.9, n_estimators=260,
              n_jobs=-1, num_leaves=70, random_state=123, reg_alpha=2,
              reg_lambda=3), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023F5644B100>, system=True)
2025-02-25 18:55:50,840:INFO:Checking exceptions
2025-02-25 18:55:50,842:INFO:Preloading libraries
2025-02-25 18:55:50,861:INFO:Copying training dataset
2025-02-25 18:55:50,861:INFO:Plot type: error
2025-02-25 18:55:51,261:INFO:Fitting Model
2025-02-25 18:55:51,262:INFO:Scoring test/hold-out set
2025-02-25 18:55:51,263:INFO:[LightGBM] [Warning] feature_fraction is set=0.4, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.4
2025-02-25 18:55:51,263:INFO:[LightGBM] [Warning] bagging_fraction is set=0.6, subsample=1.0 will be ignored. Current value: bagging_fraction=0.6
2025-02-25 18:55:51,263:INFO:[LightGBM] [Warning] bagging_freq is set=2, subsample_freq=0 will be ignored. Current value: bagging_freq=2
2025-02-25 18:55:51,274:INFO:[LightGBM] [Warning] feature_fraction is set=0.4, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.4
2025-02-25 18:55:51,274:INFO:[LightGBM] [Warning] bagging_fraction is set=0.6, subsample=1.0 will be ignored. Current value: bagging_fraction=0.6
2025-02-25 18:55:51,274:INFO:[LightGBM] [Warning] bagging_freq is set=2, subsample_freq=0 will be ignored. Current value: bagging_freq=2
2025-02-25 18:55:51,302:INFO:Saving 'Prediction Error.png'
2025-02-25 18:55:51,515:INFO:Visual Rendered Successfully
2025-02-25 18:55:51,673:INFO:plot_model() successfully completed......................................
2025-02-25 18:55:51,674:INFO:Initializing plot_model()
2025-02-25 18:55:51,674:INFO:plot_model(plot=feature, fold=None, verbose=True, display=None, display_format=None, estimator=LGBMRegressor(bagging_fraction=0.6, bagging_freq=2, feature_fraction=0.4,
              min_child_samples=41, min_split_gain=0.9, n_estimators=260,
              n_jobs=-1, num_leaves=70, random_state=123, reg_alpha=2,
              reg_lambda=3), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023F5644B100>, system=True)
2025-02-25 18:55:51,674:INFO:Checking exceptions
2025-02-25 18:55:51,676:INFO:Preloading libraries
2025-02-25 18:55:51,701:INFO:Copying training dataset
2025-02-25 18:55:51,702:INFO:Plot type: feature
2025-02-25 18:55:51,703:WARNING:No coef_ found. Trying feature_importances_
2025-02-25 18:55:51,898:INFO:Saving 'Feature Importance.png'
2025-02-25 18:55:52,001:INFO:Visual Rendered Successfully
2025-02-25 18:55:52,120:INFO:plot_model() successfully completed......................................
2025-02-25 18:55:52,132:INFO:Initializing save_model()
2025-02-25 18:55:52,132:INFO:save_model(model=LGBMRegressor(bagging_fraction=0.6, bagging_freq=2, feature_fraction=0.4,
              min_child_samples=41, min_split_gain=0.9, n_estimators=260,
              n_jobs=-1, num_leaves=70, random_state=123, reg_alpha=2,
              reg_lambda=3), model_name=C:\Users\forwo\Downloads\dekai-mlops-assignment\mlops-assignment\dekai\src\dekai/models/Dekai_Melbourne_Residential_price_predictions\without_mlfow, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\forwo\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Rooms', 'Distance', 'Bathroom',
                                             'Car', 'Landsize', 'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Type', 'CouncilArea', 'Region'],
                                    transformer=SimpleImputer(strategy='most_frequent'...
                                                              handle_missing='return_nan'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=123))),
                ('transformation',
                 TransformerWrapper(transformer=PowerTransformer(standardize=False))),
                ('normalize',
                 TransformerWrapper(transformer=StandardScaler()))]), verbose=True, use_case=MLUsecase.REGRESSION, kwargs={})
2025-02-25 18:55:52,132:INFO:Adding model into prep_pipe
2025-02-25 18:55:52,193:INFO:C:\Users\forwo\Downloads\dekai-mlops-assignment\mlops-assignment\dekai\src\dekai/models/Dekai_Melbourne_Residential_price_predictions\without_mlfow.pkl saved in current working directory
2025-02-25 18:55:52,213:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Rooms', 'Distance', 'Bathroom',
                                             'Car', 'Landsize', 'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Type', 'CouncilArea', 'Region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrappe...
                ('transformation',
                 TransformerWrapper(transformer=PowerTransformer(standardize=False))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 LGBMRegressor(bagging_fraction=0.6, bagging_freq=2,
                               feature_fraction=0.4, min_child_samples=41,
                               min_split_gain=0.9, n_estimators=260, n_jobs=-1,
                               num_leaves=70, random_state=123, reg_alpha=2,
                               reg_lambda=3))])
2025-02-25 18:55:52,214:INFO:save_model() successfully completed......................................
2025-02-25 19:07:50,379:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-25 19:07:50,379:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-25 19:07:50,379:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-25 19:07:50,379:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-25 19:09:12,664:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-25 19:09:12,664:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-25 19:09:12,664:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-25 19:09:12,664:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-25 19:09:12,974:INFO:PyCaret RegressionExperiment
2025-02-25 19:09:12,974:INFO:Logging name: Dekai_Melbourne_Residential_price_predictions
2025-02-25 19:09:12,974:INFO:ML Usecase: MLUsecase.REGRESSION
2025-02-25 19:09:12,974:INFO:version 3.3.2
2025-02-25 19:09:12,974:INFO:Initializing setup()
2025-02-25 19:09:12,974:INFO:self.USI: f9e5
2025-02-25 19:09:12,974:INFO:self._variable_keys: {'logging_param', 'gpu_n_jobs_param', 'n_jobs_param', 'memory', 'X_train', 'fold_groups_param', 'fold_shuffle_param', 'y_train', '_available_plots', 'y', 'X_test', 'html_param', 'transform_target_param', 'target_param', 'log_plots_param', 'exp_name_log', 'idx', 'X', 'USI', 'data', 'exp_id', 'pipeline', '_ml_usecase', 'gpu_param', 'fold_generator', 'y_test', 'seed'}
2025-02-25 19:09:12,974:INFO:Checking environment
2025-02-25 19:09:12,974:INFO:python_version: 3.10.2
2025-02-25 19:09:12,974:INFO:python_build: ('tags/v3.10.2:a58ebcc', 'Jan 17 2022 14:12:15')
2025-02-25 19:09:12,974:INFO:machine: AMD64
2025-02-25 19:09:12,984:INFO:platform: Windows-10-10.0.26100-SP0
2025-02-25 19:09:12,988:INFO:Memory: svmem(total=16542732288, available=6069284864, percent=63.3, used=10473447424, free=6069284864)
2025-02-25 19:09:12,988:INFO:Physical Core: 8
2025-02-25 19:09:12,988:INFO:Logical Core: 16
2025-02-25 19:09:12,988:INFO:Checking libraries
2025-02-25 19:09:12,988:INFO:System:
2025-02-25 19:09:12,988:INFO:    python: 3.10.2 (tags/v3.10.2:a58ebcc, Jan 17 2022, 14:12:15) [MSC v.1929 64 bit (AMD64)]
2025-02-25 19:09:12,988:INFO:executable: C:\Users\forwo\Downloads\dekai-mlops-assignment\venv\Scripts\python.exe
2025-02-25 19:09:12,988:INFO:   machine: Windows-10-10.0.26100-SP0
2025-02-25 19:09:12,988:INFO:PyCaret required dependencies:
2025-02-25 19:09:13,012:INFO:                 pip: 25.0.1
2025-02-25 19:09:13,012:INFO:          setuptools: 60.2.0
2025-02-25 19:09:13,012:INFO:             pycaret: 3.3.2
2025-02-25 19:09:13,012:INFO:             IPython: 8.32.0
2025-02-25 19:09:13,012:INFO:          ipywidgets: 8.1.5
2025-02-25 19:09:13,012:INFO:                tqdm: 4.67.1
2025-02-25 19:09:13,012:INFO:               numpy: 1.26.4
2025-02-25 19:09:13,012:INFO:              pandas: 2.1.4
2025-02-25 19:09:13,012:INFO:              jinja2: 3.1.5
2025-02-25 19:09:13,012:INFO:               scipy: 1.11.4
2025-02-25 19:09:13,012:INFO:              joblib: 1.3.2
2025-02-25 19:09:13,012:INFO:             sklearn: 1.4.2
2025-02-25 19:09:13,013:INFO:                pyod: 2.0.3
2025-02-25 19:09:13,013:INFO:            imblearn: 0.13.0
2025-02-25 19:09:13,013:INFO:   category_encoders: 2.7.0
2025-02-25 19:09:13,013:INFO:            lightgbm: 4.6.0
2025-02-25 19:09:13,013:INFO:               numba: 0.61.0
2025-02-25 19:09:13,013:INFO:            requests: 2.32.3
2025-02-25 19:09:13,013:INFO:          matplotlib: 3.7.5
2025-02-25 19:09:13,013:INFO:          scikitplot: 0.3.7
2025-02-25 19:09:13,013:INFO:         yellowbrick: 1.5
2025-02-25 19:09:13,013:INFO:              plotly: 5.24.1
2025-02-25 19:09:13,013:INFO:    plotly-resampler: Not installed
2025-02-25 19:09:13,013:INFO:             kaleido: 0.2.1
2025-02-25 19:09:13,013:INFO:           schemdraw: 0.15
2025-02-25 19:09:13,013:INFO:         statsmodels: 0.14.4
2025-02-25 19:09:13,013:INFO:              sktime: 0.26.0
2025-02-25 19:09:13,013:INFO:               tbats: 1.1.3
2025-02-25 19:09:13,013:INFO:            pmdarima: 2.0.4
2025-02-25 19:09:13,013:INFO:              psutil: 7.0.0
2025-02-25 19:09:13,013:INFO:          markupsafe: 3.0.2
2025-02-25 19:09:13,013:INFO:             pickle5: Not installed
2025-02-25 19:09:13,013:INFO:         cloudpickle: 3.1.1
2025-02-25 19:09:13,013:INFO:         deprecation: 2.1.0
2025-02-25 19:09:13,013:INFO:              xxhash: 3.5.0
2025-02-25 19:09:13,013:INFO:           wurlitzer: Not installed
2025-02-25 19:09:13,013:INFO:PyCaret optional dependencies:
2025-02-25 19:09:13,026:INFO:                shap: Not installed
2025-02-25 19:09:13,026:INFO:           interpret: Not installed
2025-02-25 19:09:13,026:INFO:                umap: Not installed
2025-02-25 19:09:13,026:INFO:     ydata_profiling: Not installed
2025-02-25 19:09:13,026:INFO:  explainerdashboard: Not installed
2025-02-25 19:09:13,027:INFO:             autoviz: Not installed
2025-02-25 19:09:13,027:INFO:           fairlearn: Not installed
2025-02-25 19:09:13,027:INFO:          deepchecks: Not installed
2025-02-25 19:09:13,027:INFO:             xgboost: Not installed
2025-02-25 19:09:13,027:INFO:            catboost: Not installed
2025-02-25 19:09:13,027:INFO:              kmodes: Not installed
2025-02-25 19:09:13,027:INFO:             mlxtend: Not installed
2025-02-25 19:09:13,027:INFO:       statsforecast: Not installed
2025-02-25 19:09:13,027:INFO:        tune_sklearn: Not installed
2025-02-25 19:09:13,027:INFO:                 ray: Not installed
2025-02-25 19:09:13,027:INFO:            hyperopt: Not installed
2025-02-25 19:09:13,027:INFO:              optuna: Not installed
2025-02-25 19:09:13,027:INFO:               skopt: Not installed
2025-02-25 19:09:13,027:INFO:              mlflow: 2.20.2
2025-02-25 19:09:13,027:INFO:              gradio: Not installed
2025-02-25 19:09:13,027:INFO:             fastapi: Not installed
2025-02-25 19:09:13,027:INFO:             uvicorn: Not installed
2025-02-25 19:09:13,027:INFO:              m2cgen: Not installed
2025-02-25 19:09:13,027:INFO:           evidently: Not installed
2025-02-25 19:09:13,027:INFO:               fugue: Not installed
2025-02-25 19:09:13,027:INFO:           streamlit: Not installed
2025-02-25 19:09:13,027:INFO:             prophet: Not installed
2025-02-25 19:09:13,027:INFO:None
2025-02-25 19:09:13,027:INFO:Set up data.
2025-02-25 19:09:13,035:INFO:Set up folding strategy.
2025-02-25 19:09:13,035:INFO:Set up train/test split.
2025-02-25 19:09:13,042:INFO:Set up index.
2025-02-25 19:09:13,043:INFO:Assigning column types.
2025-02-25 19:09:13,046:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-02-25 19:09:13,046:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-02-25 19:09:13,050:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-02-25 19:09:13,054:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-02-25 19:09:13,116:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-25 19:09:13,149:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-25 19:09:13,149:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-25 19:09:13,149:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-25 19:09:13,150:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-02-25 19:09:13,153:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-02-25 19:09:13,156:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-02-25 19:09:13,202:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-25 19:09:13,237:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-25 19:09:13,238:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-25 19:09:13,238:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-25 19:09:13,238:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2025-02-25 19:09:13,243:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-02-25 19:09:13,246:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-02-25 19:09:13,293:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-25 19:09:13,326:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-25 19:09:13,327:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-25 19:09:13,327:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-25 19:09:13,331:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-02-25 19:09:13,334:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-02-25 19:09:13,379:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-25 19:09:13,412:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-25 19:09:13,413:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-25 19:09:13,413:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-25 19:09:13,413:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2025-02-25 19:09:13,420:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-02-25 19:09:13,476:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-25 19:09:13,526:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-25 19:09:13,526:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-25 19:09:13,527:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-25 19:09:13,537:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-02-25 19:09:13,596:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-25 19:09:13,633:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-25 19:09:13,634:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-25 19:09:13,634:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-25 19:09:13,634:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2025-02-25 19:09:13,689:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-25 19:09:13,727:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-25 19:09:13,728:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-25 19:09:13,728:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-25 19:09:13,790:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-25 19:09:13,832:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-25 19:09:13,833:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-25 19:09:13,833:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-25 19:09:13,833:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-02-25 19:09:13,891:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-25 19:09:13,928:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-25 19:09:13,928:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-25 19:09:13,986:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-25 19:09:14,024:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-25 19:09:14,024:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-25 19:09:14,024:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2025-02-25 19:09:14,122:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-25 19:09:14,122:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-25 19:09:14,220:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-25 19:09:14,220:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-25 19:09:14,222:INFO:Preparing preprocessing pipeline...
2025-02-25 19:09:14,222:INFO:Set up simple imputation.
2025-02-25 19:09:14,226:INFO:Set up encoding of categorical features.
2025-02-25 19:09:14,226:INFO:Set up removing multicollinearity.
2025-02-25 19:09:14,226:INFO:Set up removing outliers.
2025-02-25 19:09:14,226:INFO:Set up column transformation.
2025-02-25 19:09:14,226:INFO:Set up feature normalization.
2025-02-25 19:09:14,445:INFO:Finished creating preprocessing pipeline.
2025-02-25 19:09:14,455:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\forwo\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Rooms', 'Distance', 'Bathroom',
                                             'Car', 'Landsize', 'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Type', 'CouncilArea', 'Region'],
                                    transformer=SimpleImputer(strategy='most_frequent'...
                                                              handle_missing='return_nan'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=123))),
                ('transformation',
                 TransformerWrapper(transformer=PowerTransformer(standardize=False))),
                ('normalize',
                 TransformerWrapper(transformer=StandardScaler()))])
2025-02-25 19:09:14,455:INFO:Creating final display dataframe.
2025-02-25 19:09:14,740:INFO:Setup _display_container:                     Description                                          Value
0                    Session id                                            123
1                        Target                                          Price
2                   Target type                                     Regression
3           Original data shape                                    (10864, 10)
4        Transformed data shape                                    (10483, 19)
5   Transformed train set shape                                     (7223, 19)
6    Transformed test set shape                                     (3260, 19)
7              Numeric features                                              6
8          Categorical features                                              3
9      Rows with missing values                                          10.2%
10                   Preprocess                                           True
11              Imputation type                                         simple
12           Numeric imputation                                           mean
13       Categorical imputation                                           mode
14     Maximum one-hot encoding                                             25
15              Encoding method                                           None
16     Remove multicollinearity                                           True
17  Multicollinearity threshold                                            0.9
18              Remove outliers                                           True
19           Outliers threshold                                           0.05
20               Transformation                                           True
21        Transformation method                                    yeo-johnson
22                    Normalize                                           True
23             Normalize method                                         zscore
24               Fold Generator                                          KFold
25                  Fold Number                                             10
26                     CPU Jobs                                             -1
27                      Use GPU                                          False
28               Log Experiment                                          False
29              Experiment Name  Dekai_Melbourne_Residential_price_predictions
30                          USI                                           f9e5
2025-02-25 19:09:14,843:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-25 19:09:14,843:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-25 19:09:14,935:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-25 19:09:14,935:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-25 19:09:14,936:INFO:setup() successfully completed in 1.97s...............
2025-02-25 19:09:14,936:INFO:Initializing compare_models()
2025-02-25 19:09:14,936:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000019A09EF28F0>, include=None, fold=None, round=4, cross_validation=True, sort=RMSE, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x0000019A09EF28F0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'RMSE', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2025-02-25 19:09:14,936:INFO:Checking exceptions
2025-02-25 19:09:14,939:INFO:Preparing display monitor
2025-02-25 19:09:14,941:INFO:Initializing Linear Regression
2025-02-25 19:09:14,941:INFO:Total runtime is 0.0 minutes
2025-02-25 19:09:14,941:INFO:SubProcess create_model() called ==================================
2025-02-25 19:09:14,941:INFO:Initializing create_model()
2025-02-25 19:09:14,941:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000019A09EF28F0>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000019A0A833760>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-25 19:09:14,941:INFO:Checking exceptions
2025-02-25 19:09:14,941:INFO:Importing libraries
2025-02-25 19:09:14,941:INFO:Copying training dataset
2025-02-25 19:09:14,945:INFO:Defining folds
2025-02-25 19:09:14,946:INFO:Declaring metric variables
2025-02-25 19:09:14,946:INFO:Importing untrained model
2025-02-25 19:09:14,946:INFO:Linear Regression Imported successfully
2025-02-25 19:09:14,946:INFO:Starting cross validation
2025-02-25 19:09:14,952:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-25 19:09:20,410:INFO:Calculating mean and std
2025-02-25 19:09:20,412:INFO:Creating metrics dataframe
2025-02-25 19:09:20,415:INFO:Uploading results into container
2025-02-25 19:09:20,416:INFO:Uploading model into container now
2025-02-25 19:09:20,416:INFO:_master_model_container: 1
2025-02-25 19:09:20,417:INFO:_display_container: 2
2025-02-25 19:09:20,417:INFO:LinearRegression(n_jobs=-1)
2025-02-25 19:09:20,417:INFO:create_model() successfully completed......................................
2025-02-25 19:09:20,593:INFO:SubProcess create_model() end ==================================
2025-02-25 19:09:20,593:INFO:Creating metrics dataframe
2025-02-25 19:09:20,595:INFO:Initializing Lasso Regression
2025-02-25 19:09:20,595:INFO:Total runtime is 0.09422907829284669 minutes
2025-02-25 19:09:20,595:INFO:SubProcess create_model() called ==================================
2025-02-25 19:09:20,595:INFO:Initializing create_model()
2025-02-25 19:09:20,595:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000019A09EF28F0>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000019A0A833760>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-25 19:09:20,596:INFO:Checking exceptions
2025-02-25 19:09:20,596:INFO:Importing libraries
2025-02-25 19:09:20,596:INFO:Copying training dataset
2025-02-25 19:09:20,600:INFO:Defining folds
2025-02-25 19:09:20,600:INFO:Declaring metric variables
2025-02-25 19:09:20,600:INFO:Importing untrained model
2025-02-25 19:09:20,600:INFO:Lasso Regression Imported successfully
2025-02-25 19:09:20,600:INFO:Starting cross validation
2025-02-25 19:09:20,601:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-25 19:09:21,353:WARNING:C:\Users\forwo\Downloads\dekai-mlops-assignment\venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.050e+12, tolerance: 2.411e+11
  model = cd_fast.enet_coordinate_descent(

2025-02-25 19:09:21,360:WARNING:C:\Users\forwo\Downloads\dekai-mlops-assignment\venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.980e+12, tolerance: 2.392e+11
  model = cd_fast.enet_coordinate_descent(

2025-02-25 19:09:21,379:WARNING:C:\Users\forwo\Downloads\dekai-mlops-assignment\venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.778e+12, tolerance: 2.414e+11
  model = cd_fast.enet_coordinate_descent(

2025-02-25 19:09:24,016:WARNING:C:\Users\forwo\Downloads\dekai-mlops-assignment\venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.040e+13, tolerance: 2.309e+11
  model = cd_fast.enet_coordinate_descent(

2025-02-25 19:09:24,028:WARNING:C:\Users\forwo\Downloads\dekai-mlops-assignment\venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.086e+12, tolerance: 2.451e+11
  model = cd_fast.enet_coordinate_descent(

2025-02-25 19:09:24,032:WARNING:C:\Users\forwo\Downloads\dekai-mlops-assignment\venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.909e+12, tolerance: 2.398e+11
  model = cd_fast.enet_coordinate_descent(

2025-02-25 19:09:24,032:WARNING:C:\Users\forwo\Downloads\dekai-mlops-assignment\venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.615e+12, tolerance: 2.369e+11
  model = cd_fast.enet_coordinate_descent(

2025-02-25 19:09:24,046:WARNING:C:\Users\forwo\Downloads\dekai-mlops-assignment\venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.671e+12, tolerance: 2.471e+11
  model = cd_fast.enet_coordinate_descent(

2025-02-25 19:09:24,050:WARNING:C:\Users\forwo\Downloads\dekai-mlops-assignment\venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.420e+12, tolerance: 2.421e+11
  model = cd_fast.enet_coordinate_descent(

2025-02-25 19:09:24,102:INFO:Calculating mean and std
2025-02-25 19:09:24,103:INFO:Creating metrics dataframe
2025-02-25 19:09:24,107:INFO:Uploading results into container
2025-02-25 19:09:24,107:INFO:Uploading model into container now
2025-02-25 19:09:24,108:INFO:_master_model_container: 2
2025-02-25 19:09:24,108:INFO:_display_container: 2
2025-02-25 19:09:24,108:INFO:Lasso(random_state=123)
2025-02-25 19:09:24,108:INFO:create_model() successfully completed......................................
2025-02-25 19:09:24,256:INFO:SubProcess create_model() end ==================================
2025-02-25 19:09:24,256:INFO:Creating metrics dataframe
2025-02-25 19:09:24,259:INFO:Initializing Ridge Regression
2025-02-25 19:09:24,259:INFO:Total runtime is 0.15529384215672812 minutes
2025-02-25 19:09:24,259:INFO:SubProcess create_model() called ==================================
2025-02-25 19:09:24,259:INFO:Initializing create_model()
2025-02-25 19:09:24,259:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000019A09EF28F0>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000019A0A833760>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-25 19:09:24,259:INFO:Checking exceptions
2025-02-25 19:09:24,259:INFO:Importing libraries
2025-02-25 19:09:24,259:INFO:Copying training dataset
2025-02-25 19:09:24,264:INFO:Defining folds
2025-02-25 19:09:24,264:INFO:Declaring metric variables
2025-02-25 19:09:24,264:INFO:Importing untrained model
2025-02-25 19:09:24,264:INFO:Ridge Regression Imported successfully
2025-02-25 19:09:24,265:INFO:Starting cross validation
2025-02-25 19:09:24,266:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-25 19:09:24,980:INFO:Calculating mean and std
2025-02-25 19:09:24,981:INFO:Creating metrics dataframe
2025-02-25 19:09:24,982:INFO:Uploading results into container
2025-02-25 19:09:24,982:INFO:Uploading model into container now
2025-02-25 19:09:24,983:INFO:_master_model_container: 3
2025-02-25 19:09:24,983:INFO:_display_container: 2
2025-02-25 19:09:24,983:INFO:Ridge(random_state=123)
2025-02-25 19:09:24,983:INFO:create_model() successfully completed......................................
2025-02-25 19:09:25,096:INFO:SubProcess create_model() end ==================================
2025-02-25 19:09:25,096:INFO:Creating metrics dataframe
2025-02-25 19:09:25,099:INFO:Initializing Elastic Net
2025-02-25 19:09:25,099:INFO:Total runtime is 0.16929251352945965 minutes
2025-02-25 19:09:25,099:INFO:SubProcess create_model() called ==================================
2025-02-25 19:09:25,099:INFO:Initializing create_model()
2025-02-25 19:09:25,099:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000019A09EF28F0>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000019A0A833760>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-25 19:09:25,099:INFO:Checking exceptions
2025-02-25 19:09:25,099:INFO:Importing libraries
2025-02-25 19:09:25,099:INFO:Copying training dataset
2025-02-25 19:09:25,103:INFO:Defining folds
2025-02-25 19:09:25,103:INFO:Declaring metric variables
2025-02-25 19:09:25,103:INFO:Importing untrained model
2025-02-25 19:09:25,103:INFO:Elastic Net Imported successfully
2025-02-25 19:09:25,105:INFO:Starting cross validation
2025-02-25 19:09:25,106:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-25 19:09:25,810:INFO:Calculating mean and std
2025-02-25 19:09:25,811:INFO:Creating metrics dataframe
2025-02-25 19:09:25,812:INFO:Uploading results into container
2025-02-25 19:09:25,813:INFO:Uploading model into container now
2025-02-25 19:09:25,813:INFO:_master_model_container: 4
2025-02-25 19:09:25,813:INFO:_display_container: 2
2025-02-25 19:09:25,813:INFO:ElasticNet(random_state=123)
2025-02-25 19:09:25,813:INFO:create_model() successfully completed......................................
2025-02-25 19:09:25,925:INFO:SubProcess create_model() end ==================================
2025-02-25 19:09:25,925:INFO:Creating metrics dataframe
2025-02-25 19:09:25,927:INFO:Initializing Least Angle Regression
2025-02-25 19:09:25,927:INFO:Total runtime is 0.18309344450632734 minutes
2025-02-25 19:09:25,927:INFO:SubProcess create_model() called ==================================
2025-02-25 19:09:25,927:INFO:Initializing create_model()
2025-02-25 19:09:25,927:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000019A09EF28F0>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000019A0A833760>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-25 19:09:25,928:INFO:Checking exceptions
2025-02-25 19:09:25,928:INFO:Importing libraries
2025-02-25 19:09:25,928:INFO:Copying training dataset
2025-02-25 19:09:25,932:INFO:Defining folds
2025-02-25 19:09:25,932:INFO:Declaring metric variables
2025-02-25 19:09:25,932:INFO:Importing untrained model
2025-02-25 19:09:25,932:INFO:Least Angle Regression Imported successfully
2025-02-25 19:09:25,932:INFO:Starting cross validation
2025-02-25 19:09:25,933:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-25 19:09:26,647:INFO:Calculating mean and std
2025-02-25 19:09:26,648:INFO:Creating metrics dataframe
2025-02-25 19:09:26,650:INFO:Uploading results into container
2025-02-25 19:09:26,650:INFO:Uploading model into container now
2025-02-25 19:09:26,651:INFO:_master_model_container: 5
2025-02-25 19:09:26,651:INFO:_display_container: 2
2025-02-25 19:09:26,651:INFO:Lars(random_state=123)
2025-02-25 19:09:26,651:INFO:create_model() successfully completed......................................
2025-02-25 19:09:26,762:INFO:SubProcess create_model() end ==================================
2025-02-25 19:09:26,762:INFO:Creating metrics dataframe
2025-02-25 19:09:26,764:INFO:Initializing Lasso Least Angle Regression
2025-02-25 19:09:26,764:INFO:Total runtime is 0.19705340464909873 minutes
2025-02-25 19:09:26,764:INFO:SubProcess create_model() called ==================================
2025-02-25 19:09:26,764:INFO:Initializing create_model()
2025-02-25 19:09:26,764:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000019A09EF28F0>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000019A0A833760>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-25 19:09:26,764:INFO:Checking exceptions
2025-02-25 19:09:26,764:INFO:Importing libraries
2025-02-25 19:09:26,764:INFO:Copying training dataset
2025-02-25 19:09:26,769:INFO:Defining folds
2025-02-25 19:09:26,769:INFO:Declaring metric variables
2025-02-25 19:09:26,769:INFO:Importing untrained model
2025-02-25 19:09:26,770:INFO:Lasso Least Angle Regression Imported successfully
2025-02-25 19:09:26,770:INFO:Starting cross validation
2025-02-25 19:09:26,771:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-25 19:09:27,495:INFO:Calculating mean and std
2025-02-25 19:09:27,496:INFO:Creating metrics dataframe
2025-02-25 19:09:27,498:INFO:Uploading results into container
2025-02-25 19:09:27,498:INFO:Uploading model into container now
2025-02-25 19:09:27,499:INFO:_master_model_container: 6
2025-02-25 19:09:27,499:INFO:_display_container: 2
2025-02-25 19:09:27,499:INFO:LassoLars(random_state=123)
2025-02-25 19:09:27,499:INFO:create_model() successfully completed......................................
2025-02-25 19:09:27,610:INFO:SubProcess create_model() end ==================================
2025-02-25 19:09:27,610:INFO:Creating metrics dataframe
2025-02-25 19:09:27,612:INFO:Initializing Orthogonal Matching Pursuit
2025-02-25 19:09:27,612:INFO:Total runtime is 0.21118539969126385 minutes
2025-02-25 19:09:27,612:INFO:SubProcess create_model() called ==================================
2025-02-25 19:09:27,613:INFO:Initializing create_model()
2025-02-25 19:09:27,613:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000019A09EF28F0>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000019A0A833760>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-25 19:09:27,613:INFO:Checking exceptions
2025-02-25 19:09:27,613:INFO:Importing libraries
2025-02-25 19:09:27,613:INFO:Copying training dataset
2025-02-25 19:09:27,618:INFO:Defining folds
2025-02-25 19:09:27,618:INFO:Declaring metric variables
2025-02-25 19:09:27,618:INFO:Importing untrained model
2025-02-25 19:09:27,618:INFO:Orthogonal Matching Pursuit Imported successfully
2025-02-25 19:09:27,618:INFO:Starting cross validation
2025-02-25 19:09:27,619:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-25 19:09:28,345:INFO:Calculating mean and std
2025-02-25 19:09:28,346:INFO:Creating metrics dataframe
2025-02-25 19:09:28,348:INFO:Uploading results into container
2025-02-25 19:09:28,348:INFO:Uploading model into container now
2025-02-25 19:09:28,348:INFO:_master_model_container: 7
2025-02-25 19:09:28,348:INFO:_display_container: 2
2025-02-25 19:09:28,349:INFO:OrthogonalMatchingPursuit()
2025-02-25 19:09:28,349:INFO:create_model() successfully completed......................................
2025-02-25 19:09:28,459:INFO:SubProcess create_model() end ==================================
2025-02-25 19:09:28,459:INFO:Creating metrics dataframe
2025-02-25 19:09:28,461:INFO:Initializing Bayesian Ridge
2025-02-25 19:09:28,461:INFO:Total runtime is 0.22533616622289024 minutes
2025-02-25 19:09:28,461:INFO:SubProcess create_model() called ==================================
2025-02-25 19:09:28,461:INFO:Initializing create_model()
2025-02-25 19:09:28,461:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000019A09EF28F0>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000019A0A833760>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-25 19:09:28,461:INFO:Checking exceptions
2025-02-25 19:09:28,461:INFO:Importing libraries
2025-02-25 19:09:28,461:INFO:Copying training dataset
2025-02-25 19:09:28,466:INFO:Defining folds
2025-02-25 19:09:28,466:INFO:Declaring metric variables
2025-02-25 19:09:28,466:INFO:Importing untrained model
2025-02-25 19:09:28,466:INFO:Bayesian Ridge Imported successfully
2025-02-25 19:09:28,466:INFO:Starting cross validation
2025-02-25 19:09:28,468:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-25 19:09:29,213:INFO:Calculating mean and std
2025-02-25 19:09:29,214:INFO:Creating metrics dataframe
2025-02-25 19:09:29,215:INFO:Uploading results into container
2025-02-25 19:09:29,216:INFO:Uploading model into container now
2025-02-25 19:09:29,216:INFO:_master_model_container: 8
2025-02-25 19:09:29,216:INFO:_display_container: 2
2025-02-25 19:09:29,216:INFO:BayesianRidge()
2025-02-25 19:09:29,216:INFO:create_model() successfully completed......................................
2025-02-25 19:09:29,328:INFO:SubProcess create_model() end ==================================
2025-02-25 19:09:29,328:INFO:Creating metrics dataframe
2025-02-25 19:09:29,330:INFO:Initializing Passive Aggressive Regressor
2025-02-25 19:09:29,330:INFO:Total runtime is 0.23981768290201824 minutes
2025-02-25 19:09:29,330:INFO:SubProcess create_model() called ==================================
2025-02-25 19:09:29,330:INFO:Initializing create_model()
2025-02-25 19:09:29,330:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000019A09EF28F0>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000019A0A833760>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-25 19:09:29,330:INFO:Checking exceptions
2025-02-25 19:09:29,330:INFO:Importing libraries
2025-02-25 19:09:29,330:INFO:Copying training dataset
2025-02-25 19:09:29,335:INFO:Defining folds
2025-02-25 19:09:29,335:INFO:Declaring metric variables
2025-02-25 19:09:29,335:INFO:Importing untrained model
2025-02-25 19:09:29,335:INFO:Passive Aggressive Regressor Imported successfully
2025-02-25 19:09:29,335:INFO:Starting cross validation
2025-02-25 19:09:29,336:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-25 19:09:30,660:INFO:Calculating mean and std
2025-02-25 19:09:30,661:INFO:Creating metrics dataframe
2025-02-25 19:09:30,662:INFO:Uploading results into container
2025-02-25 19:09:30,662:INFO:Uploading model into container now
2025-02-25 19:09:30,663:INFO:_master_model_container: 9
2025-02-25 19:09:30,663:INFO:_display_container: 2
2025-02-25 19:09:30,663:INFO:PassiveAggressiveRegressor(random_state=123)
2025-02-25 19:09:30,663:INFO:create_model() successfully completed......................................
2025-02-25 19:09:30,772:INFO:SubProcess create_model() end ==================================
2025-02-25 19:09:30,772:INFO:Creating metrics dataframe
2025-02-25 19:09:30,774:INFO:Initializing Huber Regressor
2025-02-25 19:09:30,774:INFO:Total runtime is 0.2638868610064189 minutes
2025-02-25 19:09:30,774:INFO:SubProcess create_model() called ==================================
2025-02-25 19:09:30,775:INFO:Initializing create_model()
2025-02-25 19:09:30,775:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000019A09EF28F0>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000019A0A833760>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-25 19:09:30,775:INFO:Checking exceptions
2025-02-25 19:09:30,775:INFO:Importing libraries
2025-02-25 19:09:30,775:INFO:Copying training dataset
2025-02-25 19:09:30,780:INFO:Defining folds
2025-02-25 19:09:30,780:INFO:Declaring metric variables
2025-02-25 19:09:30,780:INFO:Importing untrained model
2025-02-25 19:09:30,780:INFO:Huber Regressor Imported successfully
2025-02-25 19:09:30,780:INFO:Starting cross validation
2025-02-25 19:09:30,781:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-25 19:09:31,546:INFO:Calculating mean and std
2025-02-25 19:09:31,546:INFO:Creating metrics dataframe
2025-02-25 19:09:31,549:INFO:Uploading results into container
2025-02-25 19:09:31,549:INFO:Uploading model into container now
2025-02-25 19:09:31,549:INFO:_master_model_container: 10
2025-02-25 19:09:31,549:INFO:_display_container: 2
2025-02-25 19:09:31,549:INFO:HuberRegressor()
2025-02-25 19:09:31,549:INFO:create_model() successfully completed......................................
2025-02-25 19:09:31,664:INFO:SubProcess create_model() end ==================================
2025-02-25 19:09:31,665:INFO:Creating metrics dataframe
2025-02-25 19:09:31,666:INFO:Initializing K Neighbors Regressor
2025-02-25 19:09:31,666:INFO:Total runtime is 0.27875068982442225 minutes
2025-02-25 19:09:31,668:INFO:SubProcess create_model() called ==================================
2025-02-25 19:09:31,668:INFO:Initializing create_model()
2025-02-25 19:09:31,668:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000019A09EF28F0>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000019A0A833760>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-25 19:09:31,668:INFO:Checking exceptions
2025-02-25 19:09:31,668:INFO:Importing libraries
2025-02-25 19:09:31,668:INFO:Copying training dataset
2025-02-25 19:09:31,672:INFO:Defining folds
2025-02-25 19:09:31,673:INFO:Declaring metric variables
2025-02-25 19:09:31,673:INFO:Importing untrained model
2025-02-25 19:09:31,673:INFO:K Neighbors Regressor Imported successfully
2025-02-25 19:09:31,673:INFO:Starting cross validation
2025-02-25 19:09:31,674:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-25 19:09:32,546:INFO:Calculating mean and std
2025-02-25 19:09:32,546:INFO:Creating metrics dataframe
2025-02-25 19:09:32,549:INFO:Uploading results into container
2025-02-25 19:09:32,549:INFO:Uploading model into container now
2025-02-25 19:09:32,549:INFO:_master_model_container: 11
2025-02-25 19:09:32,549:INFO:_display_container: 2
2025-02-25 19:09:32,549:INFO:KNeighborsRegressor(n_jobs=-1)
2025-02-25 19:09:32,549:INFO:create_model() successfully completed......................................
2025-02-25 19:09:32,664:INFO:SubProcess create_model() end ==================================
2025-02-25 19:09:32,665:INFO:Creating metrics dataframe
2025-02-25 19:09:32,666:INFO:Initializing Decision Tree Regressor
2025-02-25 19:09:32,666:INFO:Total runtime is 0.29541718165079756 minutes
2025-02-25 19:09:32,666:INFO:SubProcess create_model() called ==================================
2025-02-25 19:09:32,666:INFO:Initializing create_model()
2025-02-25 19:09:32,666:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000019A09EF28F0>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000019A0A833760>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-25 19:09:32,666:INFO:Checking exceptions
2025-02-25 19:09:32,666:INFO:Importing libraries
2025-02-25 19:09:32,666:INFO:Copying training dataset
2025-02-25 19:09:32,671:INFO:Defining folds
2025-02-25 19:09:32,671:INFO:Declaring metric variables
2025-02-25 19:09:32,672:INFO:Importing untrained model
2025-02-25 19:09:32,672:INFO:Decision Tree Regressor Imported successfully
2025-02-25 19:09:32,672:INFO:Starting cross validation
2025-02-25 19:09:32,673:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-25 19:09:33,453:INFO:Calculating mean and std
2025-02-25 19:09:33,454:INFO:Creating metrics dataframe
2025-02-25 19:09:33,455:INFO:Uploading results into container
2025-02-25 19:09:33,456:INFO:Uploading model into container now
2025-02-25 19:09:33,456:INFO:_master_model_container: 12
2025-02-25 19:09:33,456:INFO:_display_container: 2
2025-02-25 19:09:33,456:INFO:DecisionTreeRegressor(random_state=123)
2025-02-25 19:09:33,456:INFO:create_model() successfully completed......................................
2025-02-25 19:09:33,570:INFO:SubProcess create_model() end ==================================
2025-02-25 19:09:33,570:INFO:Creating metrics dataframe
2025-02-25 19:09:33,572:INFO:Initializing Random Forest Regressor
2025-02-25 19:09:33,572:INFO:Total runtime is 0.3105208516120911 minutes
2025-02-25 19:09:33,573:INFO:SubProcess create_model() called ==================================
2025-02-25 19:09:33,573:INFO:Initializing create_model()
2025-02-25 19:09:33,573:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000019A09EF28F0>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000019A0A833760>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-25 19:09:33,573:INFO:Checking exceptions
2025-02-25 19:09:33,573:INFO:Importing libraries
2025-02-25 19:09:33,573:INFO:Copying training dataset
2025-02-25 19:09:33,578:INFO:Defining folds
2025-02-25 19:09:33,578:INFO:Declaring metric variables
2025-02-25 19:09:33,579:INFO:Importing untrained model
2025-02-25 19:09:33,579:INFO:Random Forest Regressor Imported successfully
2025-02-25 19:09:33,579:INFO:Starting cross validation
2025-02-25 19:09:33,581:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-25 19:09:36,694:INFO:Calculating mean and std
2025-02-25 19:09:36,695:INFO:Creating metrics dataframe
2025-02-25 19:09:36,697:INFO:Uploading results into container
2025-02-25 19:09:36,697:INFO:Uploading model into container now
2025-02-25 19:09:36,698:INFO:_master_model_container: 13
2025-02-25 19:09:36,698:INFO:_display_container: 2
2025-02-25 19:09:36,698:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2025-02-25 19:09:36,698:INFO:create_model() successfully completed......................................
2025-02-25 19:09:36,819:INFO:SubProcess create_model() end ==================================
2025-02-25 19:09:36,819:INFO:Creating metrics dataframe
2025-02-25 19:09:36,821:INFO:Initializing Extra Trees Regressor
2025-02-25 19:09:36,821:INFO:Total runtime is 0.36466778914133713 minutes
2025-02-25 19:09:36,821:INFO:SubProcess create_model() called ==================================
2025-02-25 19:09:36,821:INFO:Initializing create_model()
2025-02-25 19:09:36,821:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000019A09EF28F0>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000019A0A833760>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-25 19:09:36,821:INFO:Checking exceptions
2025-02-25 19:09:36,821:INFO:Importing libraries
2025-02-25 19:09:36,821:INFO:Copying training dataset
2025-02-25 19:09:36,826:INFO:Defining folds
2025-02-25 19:09:36,826:INFO:Declaring metric variables
2025-02-25 19:09:36,826:INFO:Importing untrained model
2025-02-25 19:09:36,826:INFO:Extra Trees Regressor Imported successfully
2025-02-25 19:09:36,826:INFO:Starting cross validation
2025-02-25 19:09:36,828:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-25 19:09:39,318:INFO:Calculating mean and std
2025-02-25 19:09:39,318:INFO:Creating metrics dataframe
2025-02-25 19:09:39,321:INFO:Uploading results into container
2025-02-25 19:09:39,322:INFO:Uploading model into container now
2025-02-25 19:09:39,322:INFO:_master_model_container: 14
2025-02-25 19:09:39,322:INFO:_display_container: 2
2025-02-25 19:09:39,323:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2025-02-25 19:09:39,323:INFO:create_model() successfully completed......................................
2025-02-25 19:09:39,446:INFO:SubProcess create_model() end ==================================
2025-02-25 19:09:39,446:INFO:Creating metrics dataframe
2025-02-25 19:09:39,449:INFO:Initializing AdaBoost Regressor
2025-02-25 19:09:39,449:INFO:Total runtime is 0.4084605733553569 minutes
2025-02-25 19:09:39,449:INFO:SubProcess create_model() called ==================================
2025-02-25 19:09:39,449:INFO:Initializing create_model()
2025-02-25 19:09:39,449:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000019A09EF28F0>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000019A0A833760>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-25 19:09:39,449:INFO:Checking exceptions
2025-02-25 19:09:39,449:INFO:Importing libraries
2025-02-25 19:09:39,449:INFO:Copying training dataset
2025-02-25 19:09:39,454:INFO:Defining folds
2025-02-25 19:09:39,454:INFO:Declaring metric variables
2025-02-25 19:09:39,455:INFO:Importing untrained model
2025-02-25 19:09:39,455:INFO:AdaBoost Regressor Imported successfully
2025-02-25 19:09:39,455:INFO:Starting cross validation
2025-02-25 19:09:39,456:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-25 19:09:40,687:INFO:Calculating mean and std
2025-02-25 19:09:40,688:INFO:Creating metrics dataframe
2025-02-25 19:09:40,690:INFO:Uploading results into container
2025-02-25 19:09:40,690:INFO:Uploading model into container now
2025-02-25 19:09:40,690:INFO:_master_model_container: 15
2025-02-25 19:09:40,690:INFO:_display_container: 2
2025-02-25 19:09:40,690:INFO:AdaBoostRegressor(random_state=123)
2025-02-25 19:09:40,690:INFO:create_model() successfully completed......................................
2025-02-25 19:09:40,802:INFO:SubProcess create_model() end ==================================
2025-02-25 19:09:40,803:INFO:Creating metrics dataframe
2025-02-25 19:09:40,805:INFO:Initializing Gradient Boosting Regressor
2025-02-25 19:09:40,805:INFO:Total runtime is 0.43105871280034386 minutes
2025-02-25 19:09:40,805:INFO:SubProcess create_model() called ==================================
2025-02-25 19:09:40,805:INFO:Initializing create_model()
2025-02-25 19:09:40,805:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000019A09EF28F0>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000019A0A833760>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-25 19:09:40,805:INFO:Checking exceptions
2025-02-25 19:09:40,805:INFO:Importing libraries
2025-02-25 19:09:40,805:INFO:Copying training dataset
2025-02-25 19:09:40,810:INFO:Defining folds
2025-02-25 19:09:40,810:INFO:Declaring metric variables
2025-02-25 19:09:40,810:INFO:Importing untrained model
2025-02-25 19:09:40,810:INFO:Gradient Boosting Regressor Imported successfully
2025-02-25 19:09:40,811:INFO:Starting cross validation
2025-02-25 19:09:40,812:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-25 19:09:42,280:INFO:Calculating mean and std
2025-02-25 19:09:42,281:INFO:Creating metrics dataframe
2025-02-25 19:09:42,282:INFO:Uploading results into container
2025-02-25 19:09:42,283:INFO:Uploading model into container now
2025-02-25 19:09:42,283:INFO:_master_model_container: 16
2025-02-25 19:09:42,283:INFO:_display_container: 2
2025-02-25 19:09:42,284:INFO:GradientBoostingRegressor(random_state=123)
2025-02-25 19:09:42,284:INFO:create_model() successfully completed......................................
2025-02-25 19:09:42,403:INFO:SubProcess create_model() end ==================================
2025-02-25 19:09:42,403:INFO:Creating metrics dataframe
2025-02-25 19:09:42,405:INFO:Initializing Light Gradient Boosting Machine
2025-02-25 19:09:42,405:INFO:Total runtime is 0.45773676236470545 minutes
2025-02-25 19:09:42,405:INFO:SubProcess create_model() called ==================================
2025-02-25 19:09:42,405:INFO:Initializing create_model()
2025-02-25 19:09:42,405:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000019A09EF28F0>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000019A0A833760>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-25 19:09:42,405:INFO:Checking exceptions
2025-02-25 19:09:42,405:INFO:Importing libraries
2025-02-25 19:09:42,405:INFO:Copying training dataset
2025-02-25 19:09:42,410:INFO:Defining folds
2025-02-25 19:09:42,410:INFO:Declaring metric variables
2025-02-25 19:09:42,410:INFO:Importing untrained model
2025-02-25 19:09:42,410:INFO:Light Gradient Boosting Machine Imported successfully
2025-02-25 19:09:42,411:INFO:Starting cross validation
2025-02-25 19:09:42,412:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-25 19:09:44,284:INFO:Calculating mean and std
2025-02-25 19:09:44,285:INFO:Creating metrics dataframe
2025-02-25 19:09:44,287:INFO:Uploading results into container
2025-02-25 19:09:44,288:INFO:Uploading model into container now
2025-02-25 19:09:44,288:INFO:_master_model_container: 17
2025-02-25 19:09:44,288:INFO:_display_container: 2
2025-02-25 19:09:44,289:INFO:LGBMRegressor(n_jobs=-1, random_state=123)
2025-02-25 19:09:44,289:INFO:create_model() successfully completed......................................
2025-02-25 19:09:44,431:INFO:SubProcess create_model() end ==================================
2025-02-25 19:09:44,431:INFO:Creating metrics dataframe
2025-02-25 19:09:44,433:INFO:Initializing Dummy Regressor
2025-02-25 19:09:44,433:INFO:Total runtime is 0.4915314714113872 minutes
2025-02-25 19:09:44,433:INFO:SubProcess create_model() called ==================================
2025-02-25 19:09:44,434:INFO:Initializing create_model()
2025-02-25 19:09:44,434:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000019A09EF28F0>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000019A0A833760>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-25 19:09:44,434:INFO:Checking exceptions
2025-02-25 19:09:44,434:INFO:Importing libraries
2025-02-25 19:09:44,434:INFO:Copying training dataset
2025-02-25 19:09:44,438:INFO:Defining folds
2025-02-25 19:09:44,438:INFO:Declaring metric variables
2025-02-25 19:09:44,438:INFO:Importing untrained model
2025-02-25 19:09:44,438:INFO:Dummy Regressor Imported successfully
2025-02-25 19:09:44,438:INFO:Starting cross validation
2025-02-25 19:09:44,440:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-25 19:09:45,159:INFO:Calculating mean and std
2025-02-25 19:09:45,160:INFO:Creating metrics dataframe
2025-02-25 19:09:45,161:INFO:Uploading results into container
2025-02-25 19:09:45,162:INFO:Uploading model into container now
2025-02-25 19:09:45,162:INFO:_master_model_container: 18
2025-02-25 19:09:45,162:INFO:_display_container: 2
2025-02-25 19:09:45,162:INFO:DummyRegressor()
2025-02-25 19:09:45,162:INFO:create_model() successfully completed......................................
2025-02-25 19:09:45,275:INFO:SubProcess create_model() end ==================================
2025-02-25 19:09:45,275:INFO:Creating metrics dataframe
2025-02-25 19:09:45,278:WARNING:C:\Users\forwo\Downloads\dekai-mlops-assignment\venv\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2025-02-25 19:09:45,281:INFO:Initializing create_model()
2025-02-25 19:09:45,281:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000019A09EF28F0>, estimator=LGBMRegressor(n_jobs=-1, random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-25 19:09:45,281:INFO:Checking exceptions
2025-02-25 19:09:45,281:INFO:Importing libraries
2025-02-25 19:09:45,281:INFO:Copying training dataset
2025-02-25 19:09:45,285:INFO:Defining folds
2025-02-25 19:09:45,286:INFO:Declaring metric variables
2025-02-25 19:09:45,286:INFO:Importing untrained model
2025-02-25 19:09:45,286:INFO:Declaring custom model
2025-02-25 19:09:45,287:INFO:Light Gradient Boosting Machine Imported successfully
2025-02-25 19:09:45,287:INFO:Cross validation set to False
2025-02-25 19:09:45,287:INFO:Fitting Model
2025-02-25 19:09:45,609:INFO:[LightGBM] [Warning] Found whitespace in feature_names, replace with underlines
2025-02-25 19:09:45,611:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000321 seconds.
2025-02-25 19:09:45,611:INFO:You can set `force_row_wise=true` to remove the overhead.
2025-02-25 19:09:45,611:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2025-02-25 19:09:45,611:INFO:[LightGBM] [Info] Total Bins 619
2025-02-25 19:09:45,611:INFO:[LightGBM] [Info] Number of data points in the train set: 7223, number of used features: 15
2025-02-25 19:09:45,612:INFO:[LightGBM] [Info] Start training from score 1059058.031150
2025-02-25 19:09:45,688:INFO:LGBMRegressor(n_jobs=-1, random_state=123)
2025-02-25 19:09:45,688:INFO:create_model() successfully completed......................................
2025-02-25 19:09:45,834:INFO:_master_model_container: 18
2025-02-25 19:09:45,834:INFO:_display_container: 2
2025-02-25 19:09:45,834:INFO:LGBMRegressor(n_jobs=-1, random_state=123)
2025-02-25 19:09:45,834:INFO:compare_models() successfully completed......................................
2025-02-25 19:09:45,835:INFO:Initializing tune_model()
2025-02-25 19:09:45,835:INFO:tune_model(estimator=LGBMRegressor(n_jobs=-1, random_state=123), fold=None, round=4, n_iter=10, custom_grid=None, optimize=RMSE, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.regression.oop.RegressionExperiment object at 0x0000019A09EF28F0>)
2025-02-25 19:09:45,835:INFO:Checking exceptions
2025-02-25 19:09:45,839:INFO:Copying training dataset
2025-02-25 19:09:45,842:INFO:Checking base model
2025-02-25 19:09:45,842:INFO:Base model : Light Gradient Boosting Machine
2025-02-25 19:09:45,842:INFO:Declaring metric variables
2025-02-25 19:09:45,843:INFO:Defining Hyperparameters
2025-02-25 19:09:45,956:INFO:Tuning with n_jobs=-1
2025-02-25 19:09:45,957:INFO:Initializing RandomizedSearchCV
2025-02-25 19:10:24,400:INFO:best_params: {'actual_estimator__reg_lambda': 3, 'actual_estimator__reg_alpha': 2, 'actual_estimator__num_leaves': 70, 'actual_estimator__n_estimators': 260, 'actual_estimator__min_split_gain': 0.9, 'actual_estimator__min_child_samples': 41, 'actual_estimator__learning_rate': 0.1, 'actual_estimator__feature_fraction': 0.4, 'actual_estimator__bagging_freq': 2, 'actual_estimator__bagging_fraction': 0.6}
2025-02-25 19:10:24,400:INFO:Hyperparameter search completed
2025-02-25 19:10:24,400:INFO:SubProcess create_model() called ==================================
2025-02-25 19:10:24,401:INFO:Initializing create_model()
2025-02-25 19:10:24,401:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000019A09EF28F0>, estimator=LGBMRegressor(n_jobs=-1, random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000019A09FF16C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'reg_lambda': 3, 'reg_alpha': 2, 'num_leaves': 70, 'n_estimators': 260, 'min_split_gain': 0.9, 'min_child_samples': 41, 'learning_rate': 0.1, 'feature_fraction': 0.4, 'bagging_freq': 2, 'bagging_fraction': 0.6})
2025-02-25 19:10:24,401:INFO:Checking exceptions
2025-02-25 19:10:24,401:INFO:Importing libraries
2025-02-25 19:10:24,401:INFO:Copying training dataset
2025-02-25 19:10:24,410:INFO:Defining folds
2025-02-25 19:10:24,410:INFO:Declaring metric variables
2025-02-25 19:10:24,410:INFO:Importing untrained model
2025-02-25 19:10:24,410:INFO:Declaring custom model
2025-02-25 19:10:24,412:INFO:Light Gradient Boosting Machine Imported successfully
2025-02-25 19:10:24,412:INFO:Starting cross validation
2025-02-25 19:10:24,414:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-25 19:10:30,228:INFO:Calculating mean and std
2025-02-25 19:10:30,229:INFO:Creating metrics dataframe
2025-02-25 19:10:30,231:INFO:Finalizing model
2025-02-25 19:10:30,611:INFO:[LightGBM] [Warning] feature_fraction is set=0.4, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.4
2025-02-25 19:10:30,611:INFO:[LightGBM] [Warning] bagging_fraction is set=0.6, subsample=1.0 will be ignored. Current value: bagging_fraction=0.6
2025-02-25 19:10:30,611:INFO:[LightGBM] [Warning] bagging_freq is set=2, subsample_freq=0 will be ignored. Current value: bagging_freq=2
2025-02-25 19:10:30,616:INFO:[LightGBM] [Warning] Found whitespace in feature_names, replace with underlines
2025-02-25 19:10:30,616:INFO:[LightGBM] [Warning] feature_fraction is set=0.4, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.4
2025-02-25 19:10:30,616:INFO:[LightGBM] [Warning] bagging_fraction is set=0.6, subsample=1.0 will be ignored. Current value: bagging_fraction=0.6
2025-02-25 19:10:30,617:INFO:[LightGBM] [Warning] bagging_freq is set=2, subsample_freq=0 will be ignored. Current value: bagging_freq=2
2025-02-25 19:10:30,618:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000323 seconds.
2025-02-25 19:10:30,618:INFO:You can set `force_row_wise=true` to remove the overhead.
2025-02-25 19:10:30,618:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2025-02-25 19:10:30,618:INFO:[LightGBM] [Info] Total Bins 619
2025-02-25 19:10:30,618:INFO:[LightGBM] [Info] Number of data points in the train set: 7223, number of used features: 15
2025-02-25 19:10:30,619:INFO:[LightGBM] [Info] Start training from score 1059058.031150
2025-02-25 19:10:30,620:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:10:30,621:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:10:30,622:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:10:30,624:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:10:30,626:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:10:30,628:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:10:30,630:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:10:30,631:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:10:30,633:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:10:30,635:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:10:30,637:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:10:30,638:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:10:30,641:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:10:30,643:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:10:30,646:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:10:30,647:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:10:30,649:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:10:30,652:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:10:30,654:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:10:30,657:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:10:30,658:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:10:30,663:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:10:30,666:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:10:30,667:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:10:30,669:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:10:30,674:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:10:30,676:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:10:30,681:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:10:30,683:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:10:30,689:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:10:30,690:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:10:30,693:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:10:30,695:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:10:30,697:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:10:30,710:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:10:30,711:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:10:30,716:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:10:30,718:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:10:30,727:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:10:30,731:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:10:30,733:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:10:30,736:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:10:30,741:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:10:30,754:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:10:30,756:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:10:30,759:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:10:30,760:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:10:30,768:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:10:30,778:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:10:30,786:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:10:30,796:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:10:30,802:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:10:30,806:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:10:30,808:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:10:30,811:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:10:30,811:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:10:30,813:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:10:30,822:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:10:30,829:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:10:30,835:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:10:30,836:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:10:30,841:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:10:30,843:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:10:30,851:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:10:30,868:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:10:30,874:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:10:30,879:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:10:30,894:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:10:30,896:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:10:30,897:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:10:30,900:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:10:30,903:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:10:30,905:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:10:30,909:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:10:30,924:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:10:30,929:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:10:30,934:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:10:30,944:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:10:30,952:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:10:30,959:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:10:30,961:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:10:30,962:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:10:30,975:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:10:30,977:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:10:30,981:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:10:30,983:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:10:30,995:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:10:31,007:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:10:31,011:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:10:31,021:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:10:31,025:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:10:31,032:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:10:31,039:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:10:31,041:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:10:31,043:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:10:31,044:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:10:31,046:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:10:31,048:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:10:31,056:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:10:31,058:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:10:31,061:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:10:31,067:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:10:31,070:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:10:31,078:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:10:31,086:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:10:31,091:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:10:31,092:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:10:31,094:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:10:31,097:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:10:31,100:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:10:31,101:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:10:31,104:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:10:31,108:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:10:31,111:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:10:31,113:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:10:31,118:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:10:31,123:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:10:31,124:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:10:31,131:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:10:31,132:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:10:31,140:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:10:31,154:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:10:31,157:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:10:31,162:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:10:31,168:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:10:31,172:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:10:31,180:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:10:31,188:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:10:31,190:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:10:31,193:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:10:31,194:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:10:31,203:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:10:31,231:INFO:Uploading results into container
2025-02-25 19:10:31,232:INFO:Uploading model into container now
2025-02-25 19:10:31,232:INFO:_master_model_container: 19
2025-02-25 19:10:31,233:INFO:_display_container: 3
2025-02-25 19:10:31,233:INFO:LGBMRegressor(bagging_fraction=0.6, bagging_freq=2, feature_fraction=0.4,
              min_child_samples=41, min_split_gain=0.9, n_estimators=260,
              n_jobs=-1, num_leaves=70, random_state=123, reg_alpha=2,
              reg_lambda=3)
2025-02-25 19:10:31,233:INFO:create_model() successfully completed......................................
2025-02-25 19:10:31,382:INFO:SubProcess create_model() end ==================================
2025-02-25 19:10:31,383:INFO:choose_better activated
2025-02-25 19:10:31,383:INFO:SubProcess create_model() called ==================================
2025-02-25 19:10:31,384:INFO:Initializing create_model()
2025-02-25 19:10:31,384:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000019A09EF28F0>, estimator=LGBMRegressor(n_jobs=-1, random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-25 19:10:31,384:INFO:Checking exceptions
2025-02-25 19:10:31,385:INFO:Importing libraries
2025-02-25 19:10:31,385:INFO:Copying training dataset
2025-02-25 19:10:31,392:INFO:Defining folds
2025-02-25 19:10:31,392:INFO:Declaring metric variables
2025-02-25 19:10:31,392:INFO:Importing untrained model
2025-02-25 19:10:31,392:INFO:Declaring custom model
2025-02-25 19:10:31,393:INFO:Light Gradient Boosting Machine Imported successfully
2025-02-25 19:10:31,394:INFO:Starting cross validation
2025-02-25 19:10:31,395:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-25 19:10:33,201:INFO:Calculating mean and std
2025-02-25 19:10:33,201:INFO:Creating metrics dataframe
2025-02-25 19:10:33,204:INFO:Finalizing model
2025-02-25 19:10:33,583:INFO:[LightGBM] [Warning] Found whitespace in feature_names, replace with underlines
2025-02-25 19:10:33,585:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000396 seconds.
2025-02-25 19:10:33,585:INFO:You can set `force_row_wise=true` to remove the overhead.
2025-02-25 19:10:33,585:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2025-02-25 19:10:33,585:INFO:[LightGBM] [Info] Total Bins 619
2025-02-25 19:10:33,585:INFO:[LightGBM] [Info] Number of data points in the train set: 7223, number of used features: 15
2025-02-25 19:10:33,585:INFO:[LightGBM] [Info] Start training from score 1059058.031150
2025-02-25 19:10:33,667:INFO:Uploading results into container
2025-02-25 19:10:33,668:INFO:Uploading model into container now
2025-02-25 19:10:33,669:INFO:_master_model_container: 20
2025-02-25 19:10:33,669:INFO:_display_container: 4
2025-02-25 19:10:33,670:INFO:LGBMRegressor(n_jobs=-1, random_state=123)
2025-02-25 19:10:33,670:INFO:create_model() successfully completed......................................
2025-02-25 19:10:33,803:INFO:SubProcess create_model() end ==================================
2025-02-25 19:10:33,803:INFO:LGBMRegressor(n_jobs=-1, random_state=123) result for RMSE is 298241.0856
2025-02-25 19:10:33,804:INFO:LGBMRegressor(bagging_fraction=0.6, bagging_freq=2, feature_fraction=0.4,
              min_child_samples=41, min_split_gain=0.9, n_estimators=260,
              n_jobs=-1, num_leaves=70, random_state=123, reg_alpha=2,
              reg_lambda=3) result for RMSE is 298098.797
2025-02-25 19:10:33,805:INFO:LGBMRegressor(bagging_fraction=0.6, bagging_freq=2, feature_fraction=0.4,
              min_child_samples=41, min_split_gain=0.9, n_estimators=260,
              n_jobs=-1, num_leaves=70, random_state=123, reg_alpha=2,
              reg_lambda=3) is best model
2025-02-25 19:10:33,805:INFO:choose_better completed
2025-02-25 19:10:33,811:INFO:_master_model_container: 20
2025-02-25 19:10:33,811:INFO:_display_container: 3
2025-02-25 19:10:33,811:INFO:LGBMRegressor(bagging_fraction=0.6, bagging_freq=2, feature_fraction=0.4,
              min_child_samples=41, min_split_gain=0.9, n_estimators=260,
              n_jobs=-1, num_leaves=70, random_state=123, reg_alpha=2,
              reg_lambda=3)
2025-02-25 19:10:33,811:INFO:tune_model() successfully completed......................................
2025-02-25 19:10:33,926:INFO:Initializing evaluate_model()
2025-02-25 19:10:33,926:INFO:evaluate_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000019A09EF28F0>, estimator=LGBMRegressor(bagging_fraction=0.6, bagging_freq=2, feature_fraction=0.4,
              min_child_samples=41, min_split_gain=0.9, n_estimators=260,
              n_jobs=-1, num_leaves=70, random_state=123, reg_alpha=2,
              reg_lambda=3), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2025-02-25 19:10:33,932:INFO:Initializing plot_model()
2025-02-25 19:10:33,932:INFO:plot_model(plot=pipeline, fold=KFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=LGBMRegressor(bagging_fraction=0.6, bagging_freq=2, feature_fraction=0.4,
              min_child_samples=41, min_split_gain=0.9, n_estimators=260,
              n_jobs=-1, num_leaves=70, random_state=123, reg_alpha=2,
              reg_lambda=3), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x0000019A09EF28F0>, system=True)
2025-02-25 19:10:33,932:INFO:Checking exceptions
2025-02-25 19:10:33,934:INFO:Preloading libraries
2025-02-25 19:10:33,955:INFO:Copying training dataset
2025-02-25 19:10:33,955:INFO:Plot type: pipeline
2025-02-25 19:10:45,035:INFO:Visual Rendered Successfully
2025-02-25 19:10:45,176:INFO:plot_model() successfully completed......................................
2025-02-25 19:10:45,180:INFO:Initializing plot_model()
2025-02-25 19:10:45,180:INFO:plot_model(plot=residuals, fold=None, verbose=True, display=None, display_format=None, estimator=LGBMRegressor(bagging_fraction=0.6, bagging_freq=2, feature_fraction=0.4,
              min_child_samples=41, min_split_gain=0.9, n_estimators=260,
              n_jobs=-1, num_leaves=70, random_state=123, reg_alpha=2,
              reg_lambda=3), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x0000019A09EF28F0>, system=True)
2025-02-25 19:10:45,180:INFO:Checking exceptions
2025-02-25 19:10:45,182:INFO:Preloading libraries
2025-02-25 19:10:45,211:INFO:Copying training dataset
2025-02-25 19:10:45,211:INFO:Plot type: residuals
2025-02-25 19:10:45,890:INFO:Fitting Model
2025-02-25 19:10:45,891:INFO:[LightGBM] [Warning] feature_fraction is set=0.4, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.4
2025-02-25 19:10:45,891:INFO:[LightGBM] [Warning] bagging_fraction is set=0.6, subsample=1.0 will be ignored. Current value: bagging_fraction=0.6
2025-02-25 19:10:45,891:INFO:[LightGBM] [Warning] bagging_freq is set=2, subsample_freq=0 will be ignored. Current value: bagging_freq=2
2025-02-25 19:10:45,935:INFO:[LightGBM] [Warning] feature_fraction is set=0.4, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.4
2025-02-25 19:10:45,936:INFO:[LightGBM] [Warning] bagging_fraction is set=0.6, subsample=1.0 will be ignored. Current value: bagging_fraction=0.6
2025-02-25 19:10:45,936:INFO:[LightGBM] [Warning] bagging_freq is set=2, subsample_freq=0 will be ignored. Current value: bagging_freq=2
2025-02-25 19:10:46,074:INFO:Scoring test/hold-out set
2025-02-25 19:10:46,075:INFO:[LightGBM] [Warning] feature_fraction is set=0.4, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.4
2025-02-25 19:10:46,075:INFO:[LightGBM] [Warning] bagging_fraction is set=0.6, subsample=1.0 will be ignored. Current value: bagging_fraction=0.6
2025-02-25 19:10:46,075:INFO:[LightGBM] [Warning] bagging_freq is set=2, subsample_freq=0 will be ignored. Current value: bagging_freq=2
2025-02-25 19:10:46,087:INFO:[LightGBM] [Warning] feature_fraction is set=0.4, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.4
2025-02-25 19:10:46,088:INFO:[LightGBM] [Warning] bagging_fraction is set=0.6, subsample=1.0 will be ignored. Current value: bagging_fraction=0.6
2025-02-25 19:10:46,088:INFO:[LightGBM] [Warning] bagging_freq is set=2, subsample_freq=0 will be ignored. Current value: bagging_freq=2
2025-02-25 19:10:46,214:INFO:Saving 'Residuals.png'
2025-02-25 19:10:46,671:INFO:Visual Rendered Successfully
2025-02-25 19:10:46,803:INFO:plot_model() successfully completed......................................
2025-02-25 19:10:46,804:INFO:Initializing plot_model()
2025-02-25 19:10:46,804:INFO:plot_model(plot=error, fold=None, verbose=True, display=None, display_format=None, estimator=LGBMRegressor(bagging_fraction=0.6, bagging_freq=2, feature_fraction=0.4,
              min_child_samples=41, min_split_gain=0.9, n_estimators=260,
              n_jobs=-1, num_leaves=70, random_state=123, reg_alpha=2,
              reg_lambda=3), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x0000019A09EF28F0>, system=True)
2025-02-25 19:10:46,804:INFO:Checking exceptions
2025-02-25 19:10:46,806:INFO:Preloading libraries
2025-02-25 19:10:46,824:INFO:Copying training dataset
2025-02-25 19:10:46,825:INFO:Plot type: error
2025-02-25 19:10:47,120:INFO:Fitting Model
2025-02-25 19:10:47,120:INFO:Scoring test/hold-out set
2025-02-25 19:10:47,122:INFO:[LightGBM] [Warning] feature_fraction is set=0.4, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.4
2025-02-25 19:10:47,122:INFO:[LightGBM] [Warning] bagging_fraction is set=0.6, subsample=1.0 will be ignored. Current value: bagging_fraction=0.6
2025-02-25 19:10:47,122:INFO:[LightGBM] [Warning] bagging_freq is set=2, subsample_freq=0 will be ignored. Current value: bagging_freq=2
2025-02-25 19:10:47,132:INFO:[LightGBM] [Warning] feature_fraction is set=0.4, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.4
2025-02-25 19:10:47,132:INFO:[LightGBM] [Warning] bagging_fraction is set=0.6, subsample=1.0 will be ignored. Current value: bagging_fraction=0.6
2025-02-25 19:10:47,132:INFO:[LightGBM] [Warning] bagging_freq is set=2, subsample_freq=0 will be ignored. Current value: bagging_freq=2
2025-02-25 19:10:47,161:INFO:Saving 'Prediction Error.png'
2025-02-25 19:10:47,369:INFO:Visual Rendered Successfully
2025-02-25 19:10:47,498:INFO:plot_model() successfully completed......................................
2025-02-25 19:10:47,500:INFO:Initializing plot_model()
2025-02-25 19:10:47,500:INFO:plot_model(plot=feature, fold=None, verbose=True, display=None, display_format=None, estimator=LGBMRegressor(bagging_fraction=0.6, bagging_freq=2, feature_fraction=0.4,
              min_child_samples=41, min_split_gain=0.9, n_estimators=260,
              n_jobs=-1, num_leaves=70, random_state=123, reg_alpha=2,
              reg_lambda=3), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x0000019A09EF28F0>, system=True)
2025-02-25 19:10:47,500:INFO:Checking exceptions
2025-02-25 19:10:47,502:INFO:Preloading libraries
2025-02-25 19:10:47,522:INFO:Copying training dataset
2025-02-25 19:10:47,522:INFO:Plot type: feature
2025-02-25 19:10:47,522:WARNING:No coef_ found. Trying feature_importances_
2025-02-25 19:10:47,731:INFO:Saving 'Feature Importance.png'
2025-02-25 19:10:47,836:INFO:Visual Rendered Successfully
2025-02-25 19:10:47,958:INFO:plot_model() successfully completed......................................
2025-02-25 19:10:47,973:INFO:Initializing save_model()
2025-02-25 19:10:47,973:INFO:save_model(model=LGBMRegressor(bagging_fraction=0.6, bagging_freq=2, feature_fraction=0.4,
              min_child_samples=41, min_split_gain=0.9, n_estimators=260,
              n_jobs=-1, num_leaves=70, random_state=123, reg_alpha=2,
              reg_lambda=3), model_name=C:\Users\forwo\Downloads\dekai-mlops-assignment\mlops-assignment\logs\dekai/models/Dekai_Melbourne_Residential_price_predictions\without_mlfow, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\forwo\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Rooms', 'Distance', 'Bathroom',
                                             'Car', 'Landsize', 'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Type', 'CouncilArea', 'Region'],
                                    transformer=SimpleImputer(strategy='most_frequent'...
                                                              handle_missing='return_nan'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=123))),
                ('transformation',
                 TransformerWrapper(transformer=PowerTransformer(standardize=False))),
                ('normalize',
                 TransformerWrapper(transformer=StandardScaler()))]), verbose=True, use_case=MLUsecase.REGRESSION, kwargs={})
2025-02-25 19:10:47,973:INFO:Adding model into prep_pipe
2025-02-25 19:10:47,998:INFO:C:\Users\forwo\Downloads\dekai-mlops-assignment\mlops-assignment\logs\dekai/models/Dekai_Melbourne_Residential_price_predictions\without_mlfow.pkl saved in current working directory
2025-02-25 19:10:48,018:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Rooms', 'Distance', 'Bathroom',
                                             'Car', 'Landsize', 'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Type', 'CouncilArea', 'Region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrappe...
                ('transformation',
                 TransformerWrapper(transformer=PowerTransformer(standardize=False))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 LGBMRegressor(bagging_fraction=0.6, bagging_freq=2,
                               feature_fraction=0.4, min_child_samples=41,
                               min_split_gain=0.9, n_estimators=260, n_jobs=-1,
                               num_leaves=70, random_state=123, reg_alpha=2,
                               reg_lambda=3))])
2025-02-25 19:10:48,018:INFO:save_model() successfully completed......................................
2025-02-25 19:24:05,927:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-25 19:24:05,927:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-25 19:24:05,927:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-25 19:24:05,927:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-25 19:24:06,252:INFO:PyCaret RegressionExperiment
2025-02-25 19:24:06,252:INFO:Logging name: Dekai_Melbourne_Residential_price_predictions
2025-02-25 19:24:06,252:INFO:ML Usecase: MLUsecase.REGRESSION
2025-02-25 19:24:06,252:INFO:version 3.3.2
2025-02-25 19:24:06,252:INFO:Initializing setup()
2025-02-25 19:24:06,252:INFO:self.USI: 076b
2025-02-25 19:24:06,252:INFO:self._variable_keys: {'log_plots_param', 'memory', 'gpu_param', 'y_train', 'fold_generator', 'data', 'fold_groups_param', 'y_test', '_ml_usecase', 'n_jobs_param', 'X', 'logging_param', 'target_param', 'html_param', 'pipeline', 'exp_name_log', 'exp_id', 'gpu_n_jobs_param', 'idx', '_available_plots', 'transform_target_param', 'USI', 'y', 'X_test', 'fold_shuffle_param', 'seed', 'X_train'}
2025-02-25 19:24:06,252:INFO:Checking environment
2025-02-25 19:24:06,252:INFO:python_version: 3.10.2
2025-02-25 19:24:06,252:INFO:python_build: ('tags/v3.10.2:a58ebcc', 'Jan 17 2022 14:12:15')
2025-02-25 19:24:06,252:INFO:machine: AMD64
2025-02-25 19:24:06,260:INFO:platform: Windows-10-10.0.26100-SP0
2025-02-25 19:24:06,266:INFO:Memory: svmem(total=16542732288, available=5674483712, percent=65.7, used=10868248576, free=5674483712)
2025-02-25 19:24:06,266:INFO:Physical Core: 8
2025-02-25 19:24:06,266:INFO:Logical Core: 16
2025-02-25 19:24:06,266:INFO:Checking libraries
2025-02-25 19:24:06,266:INFO:System:
2025-02-25 19:24:06,266:INFO:    python: 3.10.2 (tags/v3.10.2:a58ebcc, Jan 17 2022, 14:12:15) [MSC v.1929 64 bit (AMD64)]
2025-02-25 19:24:06,266:INFO:executable: C:\Users\forwo\Downloads\dekai-mlops-assignment\venv\Scripts\python.exe
2025-02-25 19:24:06,266:INFO:   machine: Windows-10-10.0.26100-SP0
2025-02-25 19:24:06,266:INFO:PyCaret required dependencies:
2025-02-25 19:24:06,286:INFO:                 pip: 25.0.1
2025-02-25 19:24:06,286:INFO:          setuptools: 60.2.0
2025-02-25 19:24:06,286:INFO:             pycaret: 3.3.2
2025-02-25 19:24:06,286:INFO:             IPython: 8.32.0
2025-02-25 19:24:06,286:INFO:          ipywidgets: 8.1.5
2025-02-25 19:24:06,286:INFO:                tqdm: 4.67.1
2025-02-25 19:24:06,286:INFO:               numpy: 1.26.4
2025-02-25 19:24:06,286:INFO:              pandas: 2.1.4
2025-02-25 19:24:06,286:INFO:              jinja2: 3.1.5
2025-02-25 19:24:06,286:INFO:               scipy: 1.11.4
2025-02-25 19:24:06,286:INFO:              joblib: 1.3.2
2025-02-25 19:24:06,286:INFO:             sklearn: 1.4.2
2025-02-25 19:24:06,286:INFO:                pyod: 2.0.3
2025-02-25 19:24:06,286:INFO:            imblearn: 0.13.0
2025-02-25 19:24:06,286:INFO:   category_encoders: 2.7.0
2025-02-25 19:24:06,286:INFO:            lightgbm: 4.6.0
2025-02-25 19:24:06,286:INFO:               numba: 0.61.0
2025-02-25 19:24:06,286:INFO:            requests: 2.32.3
2025-02-25 19:24:06,286:INFO:          matplotlib: 3.7.5
2025-02-25 19:24:06,286:INFO:          scikitplot: 0.3.7
2025-02-25 19:24:06,286:INFO:         yellowbrick: 1.5
2025-02-25 19:24:06,286:INFO:              plotly: 5.24.1
2025-02-25 19:24:06,286:INFO:    plotly-resampler: Not installed
2025-02-25 19:24:06,286:INFO:             kaleido: 0.2.1
2025-02-25 19:24:06,286:INFO:           schemdraw: 0.15
2025-02-25 19:24:06,287:INFO:         statsmodels: 0.14.4
2025-02-25 19:24:06,287:INFO:              sktime: 0.26.0
2025-02-25 19:24:06,287:INFO:               tbats: 1.1.3
2025-02-25 19:24:06,287:INFO:            pmdarima: 2.0.4
2025-02-25 19:24:06,287:INFO:              psutil: 7.0.0
2025-02-25 19:24:06,287:INFO:          markupsafe: 3.0.2
2025-02-25 19:24:06,287:INFO:             pickle5: Not installed
2025-02-25 19:24:06,287:INFO:         cloudpickle: 3.1.1
2025-02-25 19:24:06,287:INFO:         deprecation: 2.1.0
2025-02-25 19:24:06,287:INFO:              xxhash: 3.5.0
2025-02-25 19:24:06,287:INFO:           wurlitzer: Not installed
2025-02-25 19:24:06,287:INFO:PyCaret optional dependencies:
2025-02-25 19:24:06,298:INFO:                shap: Not installed
2025-02-25 19:24:06,299:INFO:           interpret: Not installed
2025-02-25 19:24:06,299:INFO:                umap: Not installed
2025-02-25 19:24:06,299:INFO:     ydata_profiling: Not installed
2025-02-25 19:24:06,299:INFO:  explainerdashboard: Not installed
2025-02-25 19:24:06,299:INFO:             autoviz: Not installed
2025-02-25 19:24:06,299:INFO:           fairlearn: Not installed
2025-02-25 19:24:06,299:INFO:          deepchecks: Not installed
2025-02-25 19:24:06,299:INFO:             xgboost: Not installed
2025-02-25 19:24:06,299:INFO:            catboost: Not installed
2025-02-25 19:24:06,299:INFO:              kmodes: Not installed
2025-02-25 19:24:06,299:INFO:             mlxtend: Not installed
2025-02-25 19:24:06,299:INFO:       statsforecast: Not installed
2025-02-25 19:24:06,299:INFO:        tune_sklearn: Not installed
2025-02-25 19:24:06,299:INFO:                 ray: Not installed
2025-02-25 19:24:06,299:INFO:            hyperopt: Not installed
2025-02-25 19:24:06,299:INFO:              optuna: Not installed
2025-02-25 19:24:06,299:INFO:               skopt: Not installed
2025-02-25 19:24:06,299:INFO:              mlflow: 2.20.2
2025-02-25 19:24:06,299:INFO:              gradio: Not installed
2025-02-25 19:24:06,299:INFO:             fastapi: Not installed
2025-02-25 19:24:06,299:INFO:             uvicorn: Not installed
2025-02-25 19:24:06,299:INFO:              m2cgen: Not installed
2025-02-25 19:24:06,299:INFO:           evidently: Not installed
2025-02-25 19:24:06,299:INFO:               fugue: Not installed
2025-02-25 19:24:06,299:INFO:           streamlit: Not installed
2025-02-25 19:24:06,299:INFO:             prophet: Not installed
2025-02-25 19:24:06,299:INFO:None
2025-02-25 19:24:06,299:INFO:Set up data.
2025-02-25 19:24:06,306:INFO:Set up folding strategy.
2025-02-25 19:24:06,306:INFO:Set up train/test split.
2025-02-25 19:24:06,311:INFO:Set up index.
2025-02-25 19:24:06,311:INFO:Assigning column types.
2025-02-25 19:24:06,314:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-02-25 19:24:06,315:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-02-25 19:24:06,318:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-02-25 19:24:06,321:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-02-25 19:24:06,366:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-25 19:24:06,399:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-25 19:24:06,400:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-25 19:24:06,400:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-25 19:24:06,400:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-02-25 19:24:06,404:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-02-25 19:24:06,407:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-02-25 19:24:06,451:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-25 19:24:06,485:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-25 19:24:06,485:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-25 19:24:06,486:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-25 19:24:06,486:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2025-02-25 19:24:06,489:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-02-25 19:24:06,492:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-02-25 19:24:06,546:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-25 19:24:06,595:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-25 19:24:06,596:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-25 19:24:06,596:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-25 19:24:06,600:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-02-25 19:24:06,604:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-02-25 19:24:06,653:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-25 19:24:06,689:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-25 19:24:06,690:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-25 19:24:06,690:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-25 19:24:06,690:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2025-02-25 19:24:06,698:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-02-25 19:24:06,746:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-25 19:24:06,781:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-25 19:24:06,781:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-25 19:24:06,781:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-25 19:24:06,789:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-02-25 19:24:06,832:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-25 19:24:06,866:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-25 19:24:06,866:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-25 19:24:06,867:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-25 19:24:06,867:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2025-02-25 19:24:06,918:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-25 19:24:06,951:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-25 19:24:06,951:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-25 19:24:06,952:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-25 19:24:07,003:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-25 19:24:07,036:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-25 19:24:07,037:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-25 19:24:07,037:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-25 19:24:07,037:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-02-25 19:24:07,089:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-25 19:24:07,123:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-25 19:24:07,123:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-25 19:24:07,180:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-25 19:24:07,214:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-25 19:24:07,214:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-25 19:24:07,214:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2025-02-25 19:24:07,298:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-25 19:24:07,298:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-25 19:24:07,386:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-25 19:24:07,386:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-25 19:24:07,388:INFO:Preparing preprocessing pipeline...
2025-02-25 19:24:07,388:INFO:Set up simple imputation.
2025-02-25 19:24:07,390:INFO:Set up encoding of categorical features.
2025-02-25 19:24:07,390:INFO:Set up removing multicollinearity.
2025-02-25 19:24:07,390:INFO:Set up removing outliers.
2025-02-25 19:24:07,390:INFO:Set up column transformation.
2025-02-25 19:24:07,390:INFO:Set up feature normalization.
2025-02-25 19:24:07,588:INFO:Finished creating preprocessing pipeline.
2025-02-25 19:24:07,599:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\forwo\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Rooms', 'Distance', 'Bathroom',
                                             'Car', 'Landsize', 'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Type', 'CouncilArea', 'Region'],
                                    transformer=SimpleImputer(strategy='most_frequent'...
                                                              handle_missing='return_nan'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=123))),
                ('transformation',
                 TransformerWrapper(transformer=PowerTransformer(standardize=False))),
                ('normalize',
                 TransformerWrapper(transformer=StandardScaler()))])
2025-02-25 19:24:07,599:INFO:Creating final display dataframe.
2025-02-25 19:24:07,768:INFO:Setup _display_container:                     Description                                          Value
0                    Session id                                            123
1                        Target                                          Price
2                   Target type                                     Regression
3           Original data shape                                    (10864, 10)
4        Transformed data shape                                    (10483, 19)
5   Transformed train set shape                                     (7223, 19)
6    Transformed test set shape                                     (3260, 19)
7              Numeric features                                              6
8          Categorical features                                              3
9      Rows with missing values                                          10.2%
10                   Preprocess                                           True
11              Imputation type                                         simple
12           Numeric imputation                                           mean
13       Categorical imputation                                           mode
14     Maximum one-hot encoding                                             25
15              Encoding method                                           None
16     Remove multicollinearity                                           True
17  Multicollinearity threshold                                            0.9
18              Remove outliers                                           True
19           Outliers threshold                                           0.05
20               Transformation                                           True
21        Transformation method                                    yeo-johnson
22                    Normalize                                           True
23             Normalize method                                         zscore
24               Fold Generator                                          KFold
25                  Fold Number                                             10
26                     CPU Jobs                                             -1
27                      Use GPU                                          False
28               Log Experiment                                          False
29              Experiment Name  Dekai_Melbourne_Residential_price_predictions
30                          USI                                           076b
2025-02-25 19:24:07,861:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-25 19:24:07,861:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-25 19:24:07,949:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-25 19:24:07,949:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-25 19:24:07,950:INFO:setup() successfully completed in 1.71s...............
2025-02-25 19:24:07,950:INFO:Initializing compare_models()
2025-02-25 19:24:07,950:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000249FC55BF40>, include=None, fold=None, round=4, cross_validation=True, sort=RMSE, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x00000249FC55BF40>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'RMSE', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2025-02-25 19:24:07,950:INFO:Checking exceptions
2025-02-25 19:24:07,952:INFO:Preparing display monitor
2025-02-25 19:24:07,955:INFO:Initializing Linear Regression
2025-02-25 19:24:07,955:INFO:Total runtime is 1.879135767618815e-05 minutes
2025-02-25 19:24:07,955:INFO:SubProcess create_model() called ==================================
2025-02-25 19:24:07,955:INFO:Initializing create_model()
2025-02-25 19:24:07,955:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000249FC55BF40>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000249FCD3C220>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-25 19:24:07,955:INFO:Checking exceptions
2025-02-25 19:24:07,955:INFO:Importing libraries
2025-02-25 19:24:07,955:INFO:Copying training dataset
2025-02-25 19:24:07,959:INFO:Defining folds
2025-02-25 19:24:07,959:INFO:Declaring metric variables
2025-02-25 19:24:07,960:INFO:Importing untrained model
2025-02-25 19:24:07,960:INFO:Linear Regression Imported successfully
2025-02-25 19:24:07,960:INFO:Starting cross validation
2025-02-25 19:24:07,964:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-25 19:24:12,808:INFO:Calculating mean and std
2025-02-25 19:24:12,809:INFO:Creating metrics dataframe
2025-02-25 19:24:12,812:INFO:Uploading results into container
2025-02-25 19:24:12,814:INFO:Uploading model into container now
2025-02-25 19:24:12,814:INFO:_master_model_container: 1
2025-02-25 19:24:12,814:INFO:_display_container: 2
2025-02-25 19:24:12,815:INFO:LinearRegression(n_jobs=-1)
2025-02-25 19:24:12,815:INFO:create_model() successfully completed......................................
2025-02-25 19:24:12,954:INFO:SubProcess create_model() end ==================================
2025-02-25 19:24:12,954:INFO:Creating metrics dataframe
2025-02-25 19:24:12,955:INFO:Initializing Lasso Regression
2025-02-25 19:24:12,955:INFO:Total runtime is 0.08335790236790974 minutes
2025-02-25 19:24:12,956:INFO:SubProcess create_model() called ==================================
2025-02-25 19:24:12,956:INFO:Initializing create_model()
2025-02-25 19:24:12,956:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000249FC55BF40>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000249FCD3C220>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-25 19:24:12,956:INFO:Checking exceptions
2025-02-25 19:24:12,956:INFO:Importing libraries
2025-02-25 19:24:12,956:INFO:Copying training dataset
2025-02-25 19:24:12,960:INFO:Defining folds
2025-02-25 19:24:12,960:INFO:Declaring metric variables
2025-02-25 19:24:12,960:INFO:Importing untrained model
2025-02-25 19:24:12,961:INFO:Lasso Regression Imported successfully
2025-02-25 19:24:12,961:INFO:Starting cross validation
2025-02-25 19:24:12,962:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-25 19:24:13,693:WARNING:C:\Users\forwo\Downloads\dekai-mlops-assignment\venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.050e+12, tolerance: 2.411e+11
  model = cd_fast.enet_coordinate_descent(

2025-02-25 19:24:13,727:WARNING:C:\Users\forwo\Downloads\dekai-mlops-assignment\venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.778e+12, tolerance: 2.414e+11
  model = cd_fast.enet_coordinate_descent(

2025-02-25 19:24:13,732:WARNING:C:\Users\forwo\Downloads\dekai-mlops-assignment\venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.980e+12, tolerance: 2.392e+11
  model = cd_fast.enet_coordinate_descent(

2025-02-25 19:24:16,360:WARNING:C:\Users\forwo\Downloads\dekai-mlops-assignment\venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.420e+12, tolerance: 2.421e+11
  model = cd_fast.enet_coordinate_descent(

2025-02-25 19:24:16,400:WARNING:C:\Users\forwo\Downloads\dekai-mlops-assignment\venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.671e+12, tolerance: 2.471e+11
  model = cd_fast.enet_coordinate_descent(

2025-02-25 19:24:16,407:WARNING:C:\Users\forwo\Downloads\dekai-mlops-assignment\venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.040e+13, tolerance: 2.309e+11
  model = cd_fast.enet_coordinate_descent(

2025-02-25 19:24:16,420:WARNING:C:\Users\forwo\Downloads\dekai-mlops-assignment\venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.909e+12, tolerance: 2.398e+11
  model = cd_fast.enet_coordinate_descent(

2025-02-25 19:24:16,420:WARNING:C:\Users\forwo\Downloads\dekai-mlops-assignment\venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.615e+12, tolerance: 2.369e+11
  model = cd_fast.enet_coordinate_descent(

2025-02-25 19:24:16,430:WARNING:C:\Users\forwo\Downloads\dekai-mlops-assignment\venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.086e+12, tolerance: 2.451e+11
  model = cd_fast.enet_coordinate_descent(

2025-02-25 19:24:16,478:INFO:Calculating mean and std
2025-02-25 19:24:16,479:INFO:Creating metrics dataframe
2025-02-25 19:24:16,481:INFO:Uploading results into container
2025-02-25 19:24:16,481:INFO:Uploading model into container now
2025-02-25 19:24:16,482:INFO:_master_model_container: 2
2025-02-25 19:24:16,482:INFO:_display_container: 2
2025-02-25 19:24:16,482:INFO:Lasso(random_state=123)
2025-02-25 19:24:16,482:INFO:create_model() successfully completed......................................
2025-02-25 19:24:16,608:INFO:SubProcess create_model() end ==================================
2025-02-25 19:24:16,609:INFO:Creating metrics dataframe
2025-02-25 19:24:16,610:INFO:Initializing Ridge Regression
2025-02-25 19:24:16,610:INFO:Total runtime is 0.14427037636439005 minutes
2025-02-25 19:24:16,611:INFO:SubProcess create_model() called ==================================
2025-02-25 19:24:16,611:INFO:Initializing create_model()
2025-02-25 19:24:16,611:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000249FC55BF40>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000249FCD3C220>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-25 19:24:16,611:INFO:Checking exceptions
2025-02-25 19:24:16,611:INFO:Importing libraries
2025-02-25 19:24:16,611:INFO:Copying training dataset
2025-02-25 19:24:16,615:INFO:Defining folds
2025-02-25 19:24:16,615:INFO:Declaring metric variables
2025-02-25 19:24:16,616:INFO:Importing untrained model
2025-02-25 19:24:16,616:INFO:Ridge Regression Imported successfully
2025-02-25 19:24:16,616:INFO:Starting cross validation
2025-02-25 19:24:16,617:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-25 19:24:17,274:INFO:Calculating mean and std
2025-02-25 19:24:17,275:INFO:Creating metrics dataframe
2025-02-25 19:24:17,276:INFO:Uploading results into container
2025-02-25 19:24:17,276:INFO:Uploading model into container now
2025-02-25 19:24:17,277:INFO:_master_model_container: 3
2025-02-25 19:24:17,277:INFO:_display_container: 2
2025-02-25 19:24:17,277:INFO:Ridge(random_state=123)
2025-02-25 19:24:17,277:INFO:create_model() successfully completed......................................
2025-02-25 19:24:17,385:INFO:SubProcess create_model() end ==================================
2025-02-25 19:24:17,385:INFO:Creating metrics dataframe
2025-02-25 19:24:17,387:INFO:Initializing Elastic Net
2025-02-25 19:24:17,387:INFO:Total runtime is 0.15721632242202757 minutes
2025-02-25 19:24:17,387:INFO:SubProcess create_model() called ==================================
2025-02-25 19:24:17,388:INFO:Initializing create_model()
2025-02-25 19:24:17,388:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000249FC55BF40>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000249FCD3C220>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-25 19:24:17,388:INFO:Checking exceptions
2025-02-25 19:24:17,388:INFO:Importing libraries
2025-02-25 19:24:17,388:INFO:Copying training dataset
2025-02-25 19:24:17,392:INFO:Defining folds
2025-02-25 19:24:17,392:INFO:Declaring metric variables
2025-02-25 19:24:17,392:INFO:Importing untrained model
2025-02-25 19:24:17,392:INFO:Elastic Net Imported successfully
2025-02-25 19:24:17,392:INFO:Starting cross validation
2025-02-25 19:24:17,393:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-25 19:24:18,071:INFO:Calculating mean and std
2025-02-25 19:24:18,072:INFO:Creating metrics dataframe
2025-02-25 19:24:18,074:INFO:Uploading results into container
2025-02-25 19:24:18,074:INFO:Uploading model into container now
2025-02-25 19:24:18,074:INFO:_master_model_container: 4
2025-02-25 19:24:18,074:INFO:_display_container: 2
2025-02-25 19:24:18,074:INFO:ElasticNet(random_state=123)
2025-02-25 19:24:18,074:INFO:create_model() successfully completed......................................
2025-02-25 19:24:18,182:INFO:SubProcess create_model() end ==================================
2025-02-25 19:24:18,182:INFO:Creating metrics dataframe
2025-02-25 19:24:18,185:INFO:Initializing Least Angle Regression
2025-02-25 19:24:18,185:INFO:Total runtime is 0.17051910956700642 minutes
2025-02-25 19:24:18,185:INFO:SubProcess create_model() called ==================================
2025-02-25 19:24:18,185:INFO:Initializing create_model()
2025-02-25 19:24:18,185:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000249FC55BF40>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000249FCD3C220>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-25 19:24:18,185:INFO:Checking exceptions
2025-02-25 19:24:18,185:INFO:Importing libraries
2025-02-25 19:24:18,185:INFO:Copying training dataset
2025-02-25 19:24:18,189:INFO:Defining folds
2025-02-25 19:24:18,189:INFO:Declaring metric variables
2025-02-25 19:24:18,190:INFO:Importing untrained model
2025-02-25 19:24:18,190:INFO:Least Angle Regression Imported successfully
2025-02-25 19:24:18,190:INFO:Starting cross validation
2025-02-25 19:24:18,191:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-25 19:24:18,822:INFO:Calculating mean and std
2025-02-25 19:24:18,823:INFO:Creating metrics dataframe
2025-02-25 19:24:18,824:INFO:Uploading results into container
2025-02-25 19:24:18,825:INFO:Uploading model into container now
2025-02-25 19:24:18,825:INFO:_master_model_container: 5
2025-02-25 19:24:18,825:INFO:_display_container: 2
2025-02-25 19:24:18,825:INFO:Lars(random_state=123)
2025-02-25 19:24:18,825:INFO:create_model() successfully completed......................................
2025-02-25 19:24:18,931:INFO:SubProcess create_model() end ==================================
2025-02-25 19:24:18,931:INFO:Creating metrics dataframe
2025-02-25 19:24:18,933:INFO:Initializing Lasso Least Angle Regression
2025-02-25 19:24:18,933:INFO:Total runtime is 0.18299055099487305 minutes
2025-02-25 19:24:18,933:INFO:SubProcess create_model() called ==================================
2025-02-25 19:24:18,933:INFO:Initializing create_model()
2025-02-25 19:24:18,934:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000249FC55BF40>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000249FCD3C220>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-25 19:24:18,934:INFO:Checking exceptions
2025-02-25 19:24:18,934:INFO:Importing libraries
2025-02-25 19:24:18,934:INFO:Copying training dataset
2025-02-25 19:24:18,938:INFO:Defining folds
2025-02-25 19:24:18,938:INFO:Declaring metric variables
2025-02-25 19:24:18,938:INFO:Importing untrained model
2025-02-25 19:24:18,939:INFO:Lasso Least Angle Regression Imported successfully
2025-02-25 19:24:18,939:INFO:Starting cross validation
2025-02-25 19:24:18,940:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-25 19:24:19,592:INFO:Calculating mean and std
2025-02-25 19:24:19,592:INFO:Creating metrics dataframe
2025-02-25 19:24:19,595:INFO:Uploading results into container
2025-02-25 19:24:19,595:INFO:Uploading model into container now
2025-02-25 19:24:19,596:INFO:_master_model_container: 6
2025-02-25 19:24:19,596:INFO:_display_container: 2
2025-02-25 19:24:19,596:INFO:LassoLars(random_state=123)
2025-02-25 19:24:19,596:INFO:create_model() successfully completed......................................
2025-02-25 19:24:19,705:INFO:SubProcess create_model() end ==================================
2025-02-25 19:24:19,705:INFO:Creating metrics dataframe
2025-02-25 19:24:19,707:INFO:Initializing Orthogonal Matching Pursuit
2025-02-25 19:24:19,707:INFO:Total runtime is 0.19589175383249918 minutes
2025-02-25 19:24:19,708:INFO:SubProcess create_model() called ==================================
2025-02-25 19:24:19,708:INFO:Initializing create_model()
2025-02-25 19:24:19,708:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000249FC55BF40>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000249FCD3C220>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-25 19:24:19,708:INFO:Checking exceptions
2025-02-25 19:24:19,708:INFO:Importing libraries
2025-02-25 19:24:19,708:INFO:Copying training dataset
2025-02-25 19:24:19,713:INFO:Defining folds
2025-02-25 19:24:19,713:INFO:Declaring metric variables
2025-02-25 19:24:19,713:INFO:Importing untrained model
2025-02-25 19:24:19,713:INFO:Orthogonal Matching Pursuit Imported successfully
2025-02-25 19:24:19,713:INFO:Starting cross validation
2025-02-25 19:24:19,714:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-25 19:24:20,374:INFO:Calculating mean and std
2025-02-25 19:24:20,374:INFO:Creating metrics dataframe
2025-02-25 19:24:20,376:INFO:Uploading results into container
2025-02-25 19:24:20,376:INFO:Uploading model into container now
2025-02-25 19:24:20,376:INFO:_master_model_container: 7
2025-02-25 19:24:20,376:INFO:_display_container: 2
2025-02-25 19:24:20,377:INFO:OrthogonalMatchingPursuit()
2025-02-25 19:24:20,377:INFO:create_model() successfully completed......................................
2025-02-25 19:24:20,485:INFO:SubProcess create_model() end ==================================
2025-02-25 19:24:20,485:INFO:Creating metrics dataframe
2025-02-25 19:24:20,487:INFO:Initializing Bayesian Ridge
2025-02-25 19:24:20,487:INFO:Total runtime is 0.20889732440312703 minutes
2025-02-25 19:24:20,487:INFO:SubProcess create_model() called ==================================
2025-02-25 19:24:20,487:INFO:Initializing create_model()
2025-02-25 19:24:20,487:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000249FC55BF40>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000249FCD3C220>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-25 19:24:20,487:INFO:Checking exceptions
2025-02-25 19:24:20,487:INFO:Importing libraries
2025-02-25 19:24:20,487:INFO:Copying training dataset
2025-02-25 19:24:20,493:INFO:Defining folds
2025-02-25 19:24:20,493:INFO:Declaring metric variables
2025-02-25 19:24:20,493:INFO:Importing untrained model
2025-02-25 19:24:20,493:INFO:Bayesian Ridge Imported successfully
2025-02-25 19:24:20,493:INFO:Starting cross validation
2025-02-25 19:24:20,494:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-25 19:24:21,139:INFO:Calculating mean and std
2025-02-25 19:24:21,140:INFO:Creating metrics dataframe
2025-02-25 19:24:21,141:INFO:Uploading results into container
2025-02-25 19:24:21,141:INFO:Uploading model into container now
2025-02-25 19:24:21,141:INFO:_master_model_container: 8
2025-02-25 19:24:21,141:INFO:_display_container: 2
2025-02-25 19:24:21,142:INFO:BayesianRidge()
2025-02-25 19:24:21,142:INFO:create_model() successfully completed......................................
2025-02-25 19:24:21,248:INFO:SubProcess create_model() end ==================================
2025-02-25 19:24:21,249:INFO:Creating metrics dataframe
2025-02-25 19:24:21,251:INFO:Initializing Passive Aggressive Regressor
2025-02-25 19:24:21,251:INFO:Total runtime is 0.221631650129954 minutes
2025-02-25 19:24:21,251:INFO:SubProcess create_model() called ==================================
2025-02-25 19:24:21,251:INFO:Initializing create_model()
2025-02-25 19:24:21,251:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000249FC55BF40>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000249FCD3C220>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-25 19:24:21,251:INFO:Checking exceptions
2025-02-25 19:24:21,251:INFO:Importing libraries
2025-02-25 19:24:21,251:INFO:Copying training dataset
2025-02-25 19:24:21,256:INFO:Defining folds
2025-02-25 19:24:21,256:INFO:Declaring metric variables
2025-02-25 19:24:21,256:INFO:Importing untrained model
2025-02-25 19:24:21,257:INFO:Passive Aggressive Regressor Imported successfully
2025-02-25 19:24:21,257:INFO:Starting cross validation
2025-02-25 19:24:21,258:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-25 19:24:22,451:INFO:Calculating mean and std
2025-02-25 19:24:22,452:INFO:Creating metrics dataframe
2025-02-25 19:24:22,453:INFO:Uploading results into container
2025-02-25 19:24:22,454:INFO:Uploading model into container now
2025-02-25 19:24:22,454:INFO:_master_model_container: 9
2025-02-25 19:24:22,454:INFO:_display_container: 2
2025-02-25 19:24:22,454:INFO:PassiveAggressiveRegressor(random_state=123)
2025-02-25 19:24:22,454:INFO:create_model() successfully completed......................................
2025-02-25 19:24:22,562:INFO:SubProcess create_model() end ==================================
2025-02-25 19:24:22,562:INFO:Creating metrics dataframe
2025-02-25 19:24:22,563:INFO:Initializing Huber Regressor
2025-02-25 19:24:22,563:INFO:Total runtime is 0.24348388512929278 minutes
2025-02-25 19:24:22,564:INFO:SubProcess create_model() called ==================================
2025-02-25 19:24:22,564:INFO:Initializing create_model()
2025-02-25 19:24:22,564:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000249FC55BF40>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000249FCD3C220>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-25 19:24:22,564:INFO:Checking exceptions
2025-02-25 19:24:22,564:INFO:Importing libraries
2025-02-25 19:24:22,564:INFO:Copying training dataset
2025-02-25 19:24:22,568:INFO:Defining folds
2025-02-25 19:24:22,568:INFO:Declaring metric variables
2025-02-25 19:24:22,568:INFO:Importing untrained model
2025-02-25 19:24:22,568:INFO:Huber Regressor Imported successfully
2025-02-25 19:24:22,569:INFO:Starting cross validation
2025-02-25 19:24:22,570:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-25 19:24:23,284:INFO:Calculating mean and std
2025-02-25 19:24:23,285:INFO:Creating metrics dataframe
2025-02-25 19:24:23,286:INFO:Uploading results into container
2025-02-25 19:24:23,287:INFO:Uploading model into container now
2025-02-25 19:24:23,287:INFO:_master_model_container: 10
2025-02-25 19:24:23,287:INFO:_display_container: 2
2025-02-25 19:24:23,287:INFO:HuberRegressor()
2025-02-25 19:24:23,287:INFO:create_model() successfully completed......................................
2025-02-25 19:24:23,397:INFO:SubProcess create_model() end ==================================
2025-02-25 19:24:23,397:INFO:Creating metrics dataframe
2025-02-25 19:24:23,399:INFO:Initializing K Neighbors Regressor
2025-02-25 19:24:23,399:INFO:Total runtime is 0.2574180245399475 minutes
2025-02-25 19:24:23,399:INFO:SubProcess create_model() called ==================================
2025-02-25 19:24:23,399:INFO:Initializing create_model()
2025-02-25 19:24:23,399:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000249FC55BF40>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000249FCD3C220>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-25 19:24:23,399:INFO:Checking exceptions
2025-02-25 19:24:23,399:INFO:Importing libraries
2025-02-25 19:24:23,399:INFO:Copying training dataset
2025-02-25 19:24:23,404:INFO:Defining folds
2025-02-25 19:24:23,404:INFO:Declaring metric variables
2025-02-25 19:24:23,404:INFO:Importing untrained model
2025-02-25 19:24:23,404:INFO:K Neighbors Regressor Imported successfully
2025-02-25 19:24:23,404:INFO:Starting cross validation
2025-02-25 19:24:23,406:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-25 19:24:24,224:INFO:Calculating mean and std
2025-02-25 19:24:24,224:INFO:Creating metrics dataframe
2025-02-25 19:24:24,227:INFO:Uploading results into container
2025-02-25 19:24:24,227:INFO:Uploading model into container now
2025-02-25 19:24:24,228:INFO:_master_model_container: 11
2025-02-25 19:24:24,228:INFO:_display_container: 2
2025-02-25 19:24:24,228:INFO:KNeighborsRegressor(n_jobs=-1)
2025-02-25 19:24:24,228:INFO:create_model() successfully completed......................................
2025-02-25 19:24:24,348:INFO:SubProcess create_model() end ==================================
2025-02-25 19:24:24,348:INFO:Creating metrics dataframe
2025-02-25 19:24:24,350:INFO:Initializing Decision Tree Regressor
2025-02-25 19:24:24,350:INFO:Total runtime is 0.2732802947362264 minutes
2025-02-25 19:24:24,350:INFO:SubProcess create_model() called ==================================
2025-02-25 19:24:24,350:INFO:Initializing create_model()
2025-02-25 19:24:24,350:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000249FC55BF40>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000249FCD3C220>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-25 19:24:24,351:INFO:Checking exceptions
2025-02-25 19:24:24,351:INFO:Importing libraries
2025-02-25 19:24:24,351:INFO:Copying training dataset
2025-02-25 19:24:24,356:INFO:Defining folds
2025-02-25 19:24:24,356:INFO:Declaring metric variables
2025-02-25 19:24:24,356:INFO:Importing untrained model
2025-02-25 19:24:24,356:INFO:Decision Tree Regressor Imported successfully
2025-02-25 19:24:24,356:INFO:Starting cross validation
2025-02-25 19:24:24,357:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-25 19:24:25,095:INFO:Calculating mean and std
2025-02-25 19:24:25,096:INFO:Creating metrics dataframe
2025-02-25 19:24:25,097:INFO:Uploading results into container
2025-02-25 19:24:25,098:INFO:Uploading model into container now
2025-02-25 19:24:25,098:INFO:_master_model_container: 12
2025-02-25 19:24:25,098:INFO:_display_container: 2
2025-02-25 19:24:25,098:INFO:DecisionTreeRegressor(random_state=123)
2025-02-25 19:24:25,098:INFO:create_model() successfully completed......................................
2025-02-25 19:24:25,206:INFO:SubProcess create_model() end ==================================
2025-02-25 19:24:25,206:INFO:Creating metrics dataframe
2025-02-25 19:24:25,208:INFO:Initializing Random Forest Regressor
2025-02-25 19:24:25,208:INFO:Total runtime is 0.287576949596405 minutes
2025-02-25 19:24:25,208:INFO:SubProcess create_model() called ==================================
2025-02-25 19:24:25,208:INFO:Initializing create_model()
2025-02-25 19:24:25,208:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000249FC55BF40>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000249FCD3C220>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-25 19:24:25,208:INFO:Checking exceptions
2025-02-25 19:24:25,208:INFO:Importing libraries
2025-02-25 19:24:25,208:INFO:Copying training dataset
2025-02-25 19:24:25,213:INFO:Defining folds
2025-02-25 19:24:25,213:INFO:Declaring metric variables
2025-02-25 19:24:25,213:INFO:Importing untrained model
2025-02-25 19:24:25,213:INFO:Random Forest Regressor Imported successfully
2025-02-25 19:24:25,213:INFO:Starting cross validation
2025-02-25 19:24:25,214:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-25 19:24:28,094:INFO:Calculating mean and std
2025-02-25 19:24:28,095:INFO:Creating metrics dataframe
2025-02-25 19:24:28,096:INFO:Uploading results into container
2025-02-25 19:24:28,096:INFO:Uploading model into container now
2025-02-25 19:24:28,097:INFO:_master_model_container: 13
2025-02-25 19:24:28,097:INFO:_display_container: 2
2025-02-25 19:24:28,097:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2025-02-25 19:24:28,097:INFO:create_model() successfully completed......................................
2025-02-25 19:24:28,215:INFO:SubProcess create_model() end ==================================
2025-02-25 19:24:28,216:INFO:Creating metrics dataframe
2025-02-25 19:24:28,218:INFO:Initializing Extra Trees Regressor
2025-02-25 19:24:28,218:INFO:Total runtime is 0.3377356608708699 minutes
2025-02-25 19:24:28,218:INFO:SubProcess create_model() called ==================================
2025-02-25 19:24:28,219:INFO:Initializing create_model()
2025-02-25 19:24:28,219:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000249FC55BF40>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000249FCD3C220>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-25 19:24:28,219:INFO:Checking exceptions
2025-02-25 19:24:28,219:INFO:Importing libraries
2025-02-25 19:24:28,219:INFO:Copying training dataset
2025-02-25 19:24:28,223:INFO:Defining folds
2025-02-25 19:24:28,223:INFO:Declaring metric variables
2025-02-25 19:24:28,223:INFO:Importing untrained model
2025-02-25 19:24:28,224:INFO:Extra Trees Regressor Imported successfully
2025-02-25 19:24:28,224:INFO:Starting cross validation
2025-02-25 19:24:28,225:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-25 19:24:30,486:INFO:Calculating mean and std
2025-02-25 19:24:30,487:INFO:Creating metrics dataframe
2025-02-25 19:24:30,488:INFO:Uploading results into container
2025-02-25 19:24:30,489:INFO:Uploading model into container now
2025-02-25 19:24:30,489:INFO:_master_model_container: 14
2025-02-25 19:24:30,489:INFO:_display_container: 2
2025-02-25 19:24:30,489:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2025-02-25 19:24:30,489:INFO:create_model() successfully completed......................................
2025-02-25 19:24:30,613:INFO:SubProcess create_model() end ==================================
2025-02-25 19:24:30,613:INFO:Creating metrics dataframe
2025-02-25 19:24:30,615:INFO:Initializing AdaBoost Regressor
2025-02-25 19:24:30,615:INFO:Total runtime is 0.37769143184026077 minutes
2025-02-25 19:24:30,615:INFO:SubProcess create_model() called ==================================
2025-02-25 19:24:30,615:INFO:Initializing create_model()
2025-02-25 19:24:30,615:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000249FC55BF40>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000249FCD3C220>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-25 19:24:30,615:INFO:Checking exceptions
2025-02-25 19:24:30,615:INFO:Importing libraries
2025-02-25 19:24:30,615:INFO:Copying training dataset
2025-02-25 19:24:30,620:INFO:Defining folds
2025-02-25 19:24:30,620:INFO:Declaring metric variables
2025-02-25 19:24:30,620:INFO:Importing untrained model
2025-02-25 19:24:30,621:INFO:AdaBoost Regressor Imported successfully
2025-02-25 19:24:30,621:INFO:Starting cross validation
2025-02-25 19:24:30,622:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-25 19:24:31,751:INFO:Calculating mean and std
2025-02-25 19:24:31,752:INFO:Creating metrics dataframe
2025-02-25 19:24:31,753:INFO:Uploading results into container
2025-02-25 19:24:31,753:INFO:Uploading model into container now
2025-02-25 19:24:31,753:INFO:_master_model_container: 15
2025-02-25 19:24:31,754:INFO:_display_container: 2
2025-02-25 19:24:31,754:INFO:AdaBoostRegressor(random_state=123)
2025-02-25 19:24:31,754:INFO:create_model() successfully completed......................................
2025-02-25 19:24:31,862:INFO:SubProcess create_model() end ==================================
2025-02-25 19:24:31,862:INFO:Creating metrics dataframe
2025-02-25 19:24:31,864:INFO:Initializing Gradient Boosting Regressor
2025-02-25 19:24:31,864:INFO:Total runtime is 0.39851010640462237 minutes
2025-02-25 19:24:31,864:INFO:SubProcess create_model() called ==================================
2025-02-25 19:24:31,864:INFO:Initializing create_model()
2025-02-25 19:24:31,864:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000249FC55BF40>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000249FCD3C220>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-25 19:24:31,864:INFO:Checking exceptions
2025-02-25 19:24:31,864:INFO:Importing libraries
2025-02-25 19:24:31,864:INFO:Copying training dataset
2025-02-25 19:24:31,869:INFO:Defining folds
2025-02-25 19:24:31,869:INFO:Declaring metric variables
2025-02-25 19:24:31,869:INFO:Importing untrained model
2025-02-25 19:24:31,869:INFO:Gradient Boosting Regressor Imported successfully
2025-02-25 19:24:31,870:INFO:Starting cross validation
2025-02-25 19:24:31,871:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-25 19:24:33,233:INFO:Calculating mean and std
2025-02-25 19:24:33,233:INFO:Creating metrics dataframe
2025-02-25 19:24:33,234:INFO:Uploading results into container
2025-02-25 19:24:33,235:INFO:Uploading model into container now
2025-02-25 19:24:33,235:INFO:_master_model_container: 16
2025-02-25 19:24:33,235:INFO:_display_container: 2
2025-02-25 19:24:33,235:INFO:GradientBoostingRegressor(random_state=123)
2025-02-25 19:24:33,235:INFO:create_model() successfully completed......................................
2025-02-25 19:24:33,344:INFO:SubProcess create_model() end ==================================
2025-02-25 19:24:33,344:INFO:Creating metrics dataframe
2025-02-25 19:24:33,346:INFO:Initializing Light Gradient Boosting Machine
2025-02-25 19:24:33,346:INFO:Total runtime is 0.4231989383697509 minutes
2025-02-25 19:24:33,346:INFO:SubProcess create_model() called ==================================
2025-02-25 19:24:33,346:INFO:Initializing create_model()
2025-02-25 19:24:33,346:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000249FC55BF40>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000249FCD3C220>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-25 19:24:33,347:INFO:Checking exceptions
2025-02-25 19:24:33,347:INFO:Importing libraries
2025-02-25 19:24:33,347:INFO:Copying training dataset
2025-02-25 19:24:33,350:INFO:Defining folds
2025-02-25 19:24:33,351:INFO:Declaring metric variables
2025-02-25 19:24:33,351:INFO:Importing untrained model
2025-02-25 19:24:33,351:INFO:Light Gradient Boosting Machine Imported successfully
2025-02-25 19:24:33,352:INFO:Starting cross validation
2025-02-25 19:24:33,353:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-25 19:24:35,044:INFO:Calculating mean and std
2025-02-25 19:24:35,045:INFO:Creating metrics dataframe
2025-02-25 19:24:35,048:INFO:Uploading results into container
2025-02-25 19:24:35,048:INFO:Uploading model into container now
2025-02-25 19:24:35,049:INFO:_master_model_container: 17
2025-02-25 19:24:35,049:INFO:_display_container: 2
2025-02-25 19:24:35,049:INFO:LGBMRegressor(n_jobs=-1, random_state=123)
2025-02-25 19:24:35,049:INFO:create_model() successfully completed......................................
2025-02-25 19:24:35,183:INFO:SubProcess create_model() end ==================================
2025-02-25 19:24:35,183:INFO:Creating metrics dataframe
2025-02-25 19:24:35,186:INFO:Initializing Dummy Regressor
2025-02-25 19:24:35,186:INFO:Total runtime is 0.4538698275883992 minutes
2025-02-25 19:24:35,186:INFO:SubProcess create_model() called ==================================
2025-02-25 19:24:35,186:INFO:Initializing create_model()
2025-02-25 19:24:35,186:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000249FC55BF40>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000249FCD3C220>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-25 19:24:35,186:INFO:Checking exceptions
2025-02-25 19:24:35,186:INFO:Importing libraries
2025-02-25 19:24:35,186:INFO:Copying training dataset
2025-02-25 19:24:35,191:INFO:Defining folds
2025-02-25 19:24:35,191:INFO:Declaring metric variables
2025-02-25 19:24:35,192:INFO:Importing untrained model
2025-02-25 19:24:35,192:INFO:Dummy Regressor Imported successfully
2025-02-25 19:24:35,192:INFO:Starting cross validation
2025-02-25 19:24:35,193:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-25 19:24:35,815:INFO:Calculating mean and std
2025-02-25 19:24:35,816:INFO:Creating metrics dataframe
2025-02-25 19:24:35,817:INFO:Uploading results into container
2025-02-25 19:24:35,818:INFO:Uploading model into container now
2025-02-25 19:24:35,818:INFO:_master_model_container: 18
2025-02-25 19:24:35,818:INFO:_display_container: 2
2025-02-25 19:24:35,818:INFO:DummyRegressor()
2025-02-25 19:24:35,818:INFO:create_model() successfully completed......................................
2025-02-25 19:24:35,926:INFO:SubProcess create_model() end ==================================
2025-02-25 19:24:35,926:INFO:Creating metrics dataframe
2025-02-25 19:24:35,930:WARNING:C:\Users\forwo\Downloads\dekai-mlops-assignment\venv\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2025-02-25 19:24:35,931:INFO:Initializing create_model()
2025-02-25 19:24:35,931:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000249FC55BF40>, estimator=LGBMRegressor(n_jobs=-1, random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-25 19:24:35,931:INFO:Checking exceptions
2025-02-25 19:24:35,932:INFO:Importing libraries
2025-02-25 19:24:35,932:INFO:Copying training dataset
2025-02-25 19:24:35,937:INFO:Defining folds
2025-02-25 19:24:35,937:INFO:Declaring metric variables
2025-02-25 19:24:35,937:INFO:Importing untrained model
2025-02-25 19:24:35,937:INFO:Declaring custom model
2025-02-25 19:24:35,938:INFO:Light Gradient Boosting Machine Imported successfully
2025-02-25 19:24:35,939:INFO:Cross validation set to False
2025-02-25 19:24:35,939:INFO:Fitting Model
2025-02-25 19:24:36,267:INFO:[LightGBM] [Warning] Found whitespace in feature_names, replace with underlines
2025-02-25 19:24:36,269:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000302 seconds.
2025-02-25 19:24:36,269:INFO:You can set `force_row_wise=true` to remove the overhead.
2025-02-25 19:24:36,269:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2025-02-25 19:24:36,269:INFO:[LightGBM] [Info] Total Bins 619
2025-02-25 19:24:36,269:INFO:[LightGBM] [Info] Number of data points in the train set: 7223, number of used features: 15
2025-02-25 19:24:36,270:INFO:[LightGBM] [Info] Start training from score 1059058.031150
2025-02-25 19:24:36,353:INFO:LGBMRegressor(n_jobs=-1, random_state=123)
2025-02-25 19:24:36,353:INFO:create_model() successfully completed......................................
2025-02-25 19:24:36,495:INFO:_master_model_container: 18
2025-02-25 19:24:36,495:INFO:_display_container: 2
2025-02-25 19:24:36,495:INFO:LGBMRegressor(n_jobs=-1, random_state=123)
2025-02-25 19:24:36,495:INFO:compare_models() successfully completed......................................
2025-02-25 19:24:36,496:INFO:Initializing tune_model()
2025-02-25 19:24:36,496:INFO:tune_model(estimator=LGBMRegressor(n_jobs=-1, random_state=123), fold=None, round=4, n_iter=10, custom_grid=None, optimize=RMSE, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.regression.oop.RegressionExperiment object at 0x00000249FC55BF40>)
2025-02-25 19:24:36,496:INFO:Checking exceptions
2025-02-25 19:24:36,499:INFO:Copying training dataset
2025-02-25 19:24:36,503:INFO:Checking base model
2025-02-25 19:24:36,503:INFO:Base model : Light Gradient Boosting Machine
2025-02-25 19:24:36,503:INFO:Declaring metric variables
2025-02-25 19:24:36,503:INFO:Defining Hyperparameters
2025-02-25 19:24:36,616:INFO:Tuning with n_jobs=-1
2025-02-25 19:24:36,616:INFO:Initializing RandomizedSearchCV
2025-02-25 19:25:10,054:INFO:best_params: {'actual_estimator__reg_lambda': 3, 'actual_estimator__reg_alpha': 2, 'actual_estimator__num_leaves': 70, 'actual_estimator__n_estimators': 260, 'actual_estimator__min_split_gain': 0.9, 'actual_estimator__min_child_samples': 41, 'actual_estimator__learning_rate': 0.1, 'actual_estimator__feature_fraction': 0.4, 'actual_estimator__bagging_freq': 2, 'actual_estimator__bagging_fraction': 0.6}
2025-02-25 19:25:10,056:INFO:Hyperparameter search completed
2025-02-25 19:25:10,056:INFO:SubProcess create_model() called ==================================
2025-02-25 19:25:10,057:INFO:Initializing create_model()
2025-02-25 19:25:10,057:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000249FC55BF40>, estimator=LGBMRegressor(n_jobs=-1, random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000249FCBB4EE0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'reg_lambda': 3, 'reg_alpha': 2, 'num_leaves': 70, 'n_estimators': 260, 'min_split_gain': 0.9, 'min_child_samples': 41, 'learning_rate': 0.1, 'feature_fraction': 0.4, 'bagging_freq': 2, 'bagging_fraction': 0.6})
2025-02-25 19:25:10,057:INFO:Checking exceptions
2025-02-25 19:25:10,057:INFO:Importing libraries
2025-02-25 19:25:10,057:INFO:Copying training dataset
2025-02-25 19:25:10,065:INFO:Defining folds
2025-02-25 19:25:10,066:INFO:Declaring metric variables
2025-02-25 19:25:10,066:INFO:Importing untrained model
2025-02-25 19:25:10,066:INFO:Declaring custom model
2025-02-25 19:25:10,068:INFO:Light Gradient Boosting Machine Imported successfully
2025-02-25 19:25:10,068:INFO:Starting cross validation
2025-02-25 19:25:10,071:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-25 19:25:15,066:INFO:Calculating mean and std
2025-02-25 19:25:15,067:INFO:Creating metrics dataframe
2025-02-25 19:25:15,070:INFO:Finalizing model
2025-02-25 19:25:15,454:INFO:[LightGBM] [Warning] feature_fraction is set=0.4, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.4
2025-02-25 19:25:15,454:INFO:[LightGBM] [Warning] bagging_fraction is set=0.6, subsample=1.0 will be ignored. Current value: bagging_fraction=0.6
2025-02-25 19:25:15,454:INFO:[LightGBM] [Warning] bagging_freq is set=2, subsample_freq=0 will be ignored. Current value: bagging_freq=2
2025-02-25 19:25:15,459:INFO:[LightGBM] [Warning] Found whitespace in feature_names, replace with underlines
2025-02-25 19:25:15,460:INFO:[LightGBM] [Warning] feature_fraction is set=0.4, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.4
2025-02-25 19:25:15,460:INFO:[LightGBM] [Warning] bagging_fraction is set=0.6, subsample=1.0 will be ignored. Current value: bagging_fraction=0.6
2025-02-25 19:25:15,460:INFO:[LightGBM] [Warning] bagging_freq is set=2, subsample_freq=0 will be ignored. Current value: bagging_freq=2
2025-02-25 19:25:15,461:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000396 seconds.
2025-02-25 19:25:15,462:INFO:You can set `force_row_wise=true` to remove the overhead.
2025-02-25 19:25:15,462:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2025-02-25 19:25:15,462:INFO:[LightGBM] [Info] Total Bins 619
2025-02-25 19:25:15,462:INFO:[LightGBM] [Info] Number of data points in the train set: 7223, number of used features: 15
2025-02-25 19:25:15,462:INFO:[LightGBM] [Info] Start training from score 1059058.031150
2025-02-25 19:25:15,465:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:25:15,466:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:25:15,468:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:25:15,470:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:25:15,472:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:25:15,474:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:25:15,476:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:25:15,478:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:25:15,480:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:25:15,483:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:25:15,485:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:25:15,486:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:25:15,488:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:25:15,491:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:25:15,493:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:25:15,494:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:25:15,497:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:25:15,500:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:25:15,502:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:25:15,504:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:25:15,506:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:25:15,510:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:25:15,514:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:25:15,516:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:25:15,519:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:25:15,524:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:25:15,525:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:25:15,530:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:25:15,533:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:25:15,540:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:25:15,541:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:25:15,543:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:25:15,547:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:25:15,550:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:25:15,561:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:25:15,563:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:25:15,569:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:25:15,572:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:25:15,580:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:25:15,585:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:25:15,587:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:25:15,589:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:25:15,594:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:25:15,607:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:25:15,609:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:25:15,611:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:25:15,612:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:25:15,621:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:25:15,627:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:25:15,634:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:25:15,642:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:25:15,648:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:25:15,652:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:25:15,654:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:25:15,657:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:25:15,657:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:25:15,660:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:25:15,670:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:25:15,678:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:25:15,683:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:25:15,686:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:25:15,690:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:25:15,693:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:25:15,703:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:25:15,725:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:25:15,731:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:25:15,737:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:25:15,756:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:25:15,759:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:25:15,761:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:25:15,764:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:25:15,767:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:25:15,770:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:25:15,776:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:25:15,793:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:25:15,802:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:25:15,808:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:25:15,820:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:25:15,829:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:25:15,838:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:25:15,839:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:25:15,840:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:25:15,855:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:25:15,858:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:25:15,862:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:25:15,864:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:25:15,876:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:25:15,889:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:25:15,894:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:25:15,904:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:25:15,907:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:25:15,916:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:25:15,922:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:25:15,924:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:25:15,927:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:25:15,928:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:25:15,930:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:25:15,932:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:25:15,938:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:25:15,941:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:25:15,943:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:25:15,948:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:25:15,950:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:25:15,957:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:25:15,965:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:25:15,970:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:25:15,972:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:25:15,974:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:25:15,976:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:25:15,979:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:25:15,980:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:25:15,983:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:25:15,987:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:25:15,991:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:25:15,994:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:25:15,999:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:25:16,004:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:25:16,005:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:25:16,014:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:25:16,014:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:25:16,023:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:25:16,037:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:25:16,040:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:25:16,044:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:25:16,052:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:25:16,054:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:25:16,064:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:25:16,071:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:25:16,074:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:25:16,077:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:25:16,078:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:25:16,085:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-25 19:25:16,115:INFO:Uploading results into container
2025-02-25 19:25:16,116:INFO:Uploading model into container now
2025-02-25 19:25:16,117:INFO:_master_model_container: 19
2025-02-25 19:25:16,117:INFO:_display_container: 3
2025-02-25 19:25:16,118:INFO:LGBMRegressor(bagging_fraction=0.6, bagging_freq=2, feature_fraction=0.4,
              min_child_samples=41, min_split_gain=0.9, n_estimators=260,
              n_jobs=-1, num_leaves=70, random_state=123, reg_alpha=2,
              reg_lambda=3)
2025-02-25 19:25:16,118:INFO:create_model() successfully completed......................................
2025-02-25 19:25:16,261:INFO:SubProcess create_model() end ==================================
2025-02-25 19:25:16,261:INFO:choose_better activated
2025-02-25 19:25:16,261:INFO:SubProcess create_model() called ==================================
2025-02-25 19:25:16,262:INFO:Initializing create_model()
2025-02-25 19:25:16,262:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000249FC55BF40>, estimator=LGBMRegressor(n_jobs=-1, random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-25 19:25:16,262:INFO:Checking exceptions
2025-02-25 19:25:16,263:INFO:Importing libraries
2025-02-25 19:25:16,263:INFO:Copying training dataset
2025-02-25 19:25:16,268:INFO:Defining folds
2025-02-25 19:25:16,268:INFO:Declaring metric variables
2025-02-25 19:25:16,268:INFO:Importing untrained model
2025-02-25 19:25:16,268:INFO:Declaring custom model
2025-02-25 19:25:16,269:INFO:Light Gradient Boosting Machine Imported successfully
2025-02-25 19:25:16,270:INFO:Starting cross validation
2025-02-25 19:25:16,271:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-25 19:25:17,999:INFO:Calculating mean and std
2025-02-25 19:25:18,000:INFO:Creating metrics dataframe
2025-02-25 19:25:18,002:INFO:Finalizing model
2025-02-25 19:25:18,372:INFO:[LightGBM] [Warning] Found whitespace in feature_names, replace with underlines
2025-02-25 19:25:18,373:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000305 seconds.
2025-02-25 19:25:18,374:INFO:You can set `force_row_wise=true` to remove the overhead.
2025-02-25 19:25:18,374:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2025-02-25 19:25:18,374:INFO:[LightGBM] [Info] Total Bins 619
2025-02-25 19:25:18,374:INFO:[LightGBM] [Info] Number of data points in the train set: 7223, number of used features: 15
2025-02-25 19:25:18,374:INFO:[LightGBM] [Info] Start training from score 1059058.031150
2025-02-25 19:25:18,464:INFO:Uploading results into container
2025-02-25 19:25:18,466:INFO:Uploading model into container now
2025-02-25 19:25:18,466:INFO:_master_model_container: 20
2025-02-25 19:25:18,466:INFO:_display_container: 4
2025-02-25 19:25:18,467:INFO:LGBMRegressor(n_jobs=-1, random_state=123)
2025-02-25 19:25:18,467:INFO:create_model() successfully completed......................................
2025-02-25 19:25:18,597:INFO:SubProcess create_model() end ==================================
2025-02-25 19:25:18,598:INFO:LGBMRegressor(n_jobs=-1, random_state=123) result for RMSE is 298241.0856
2025-02-25 19:25:18,598:INFO:LGBMRegressor(bagging_fraction=0.6, bagging_freq=2, feature_fraction=0.4,
              min_child_samples=41, min_split_gain=0.9, n_estimators=260,
              n_jobs=-1, num_leaves=70, random_state=123, reg_alpha=2,
              reg_lambda=3) result for RMSE is 298098.797
2025-02-25 19:25:18,599:INFO:LGBMRegressor(bagging_fraction=0.6, bagging_freq=2, feature_fraction=0.4,
              min_child_samples=41, min_split_gain=0.9, n_estimators=260,
              n_jobs=-1, num_leaves=70, random_state=123, reg_alpha=2,
              reg_lambda=3) is best model
2025-02-25 19:25:18,599:INFO:choose_better completed
2025-02-25 19:25:18,606:INFO:_master_model_container: 20
2025-02-25 19:25:18,606:INFO:_display_container: 3
2025-02-25 19:25:18,607:INFO:LGBMRegressor(bagging_fraction=0.6, bagging_freq=2, feature_fraction=0.4,
              min_child_samples=41, min_split_gain=0.9, n_estimators=260,
              n_jobs=-1, num_leaves=70, random_state=123, reg_alpha=2,
              reg_lambda=3)
2025-02-25 19:25:18,607:INFO:tune_model() successfully completed......................................
2025-02-25 19:25:18,721:INFO:Initializing evaluate_model()
2025-02-25 19:25:18,721:INFO:evaluate_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000249FC55BF40>, estimator=LGBMRegressor(bagging_fraction=0.6, bagging_freq=2, feature_fraction=0.4,
              min_child_samples=41, min_split_gain=0.9, n_estimators=260,
              n_jobs=-1, num_leaves=70, random_state=123, reg_alpha=2,
              reg_lambda=3), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2025-02-25 19:25:18,727:INFO:Initializing plot_model()
2025-02-25 19:25:18,727:INFO:plot_model(plot=pipeline, fold=KFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=LGBMRegressor(bagging_fraction=0.6, bagging_freq=2, feature_fraction=0.4,
              min_child_samples=41, min_split_gain=0.9, n_estimators=260,
              n_jobs=-1, num_leaves=70, random_state=123, reg_alpha=2,
              reg_lambda=3), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x00000249FC55BF40>, system=True)
2025-02-25 19:25:18,727:INFO:Checking exceptions
2025-02-25 19:25:18,729:INFO:Preloading libraries
2025-02-25 19:25:18,751:INFO:Copying training dataset
2025-02-25 19:25:18,751:INFO:Plot type: pipeline
2025-02-25 20:18:56,987:INFO:Visual Rendered Successfully
2025-02-25 20:18:57,172:INFO:plot_model() successfully completed......................................
2025-02-25 20:18:57,176:INFO:Initializing plot_model()
2025-02-25 20:18:57,176:INFO:plot_model(plot=residuals, fold=None, verbose=True, display=None, display_format=None, estimator=LGBMRegressor(bagging_fraction=0.6, bagging_freq=2, feature_fraction=0.4,
              min_child_samples=41, min_split_gain=0.9, n_estimators=260,
              n_jobs=-1, num_leaves=70, random_state=123, reg_alpha=2,
              reg_lambda=3), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x00000249FC55BF40>, system=True)
2025-02-25 20:18:57,176:INFO:Checking exceptions
2025-02-25 20:18:57,179:INFO:Preloading libraries
2025-02-25 20:18:57,206:INFO:Copying training dataset
2025-02-25 20:18:57,206:INFO:Plot type: residuals
2025-02-25 20:18:57,658:INFO:Fitting Model
2025-02-25 20:18:57,660:INFO:[LightGBM] [Warning] feature_fraction is set=0.4, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.4
2025-02-25 20:18:57,660:INFO:[LightGBM] [Warning] bagging_fraction is set=0.6, subsample=1.0 will be ignored. Current value: bagging_fraction=0.6
2025-02-25 20:18:57,660:INFO:[LightGBM] [Warning] bagging_freq is set=2, subsample_freq=0 will be ignored. Current value: bagging_freq=2
2025-02-25 20:18:57,685:INFO:[LightGBM] [Warning] feature_fraction is set=0.4, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.4
2025-02-25 20:18:57,685:INFO:[LightGBM] [Warning] bagging_fraction is set=0.6, subsample=1.0 will be ignored. Current value: bagging_fraction=0.6
2025-02-25 20:18:57,685:INFO:[LightGBM] [Warning] bagging_freq is set=2, subsample_freq=0 will be ignored. Current value: bagging_freq=2
2025-02-25 20:18:57,763:INFO:Scoring test/hold-out set
2025-02-25 20:18:57,765:INFO:[LightGBM] [Warning] feature_fraction is set=0.4, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.4
2025-02-25 20:18:57,765:INFO:[LightGBM] [Warning] bagging_fraction is set=0.6, subsample=1.0 will be ignored. Current value: bagging_fraction=0.6
2025-02-25 20:18:57,765:INFO:[LightGBM] [Warning] bagging_freq is set=2, subsample_freq=0 will be ignored. Current value: bagging_freq=2
2025-02-25 20:18:57,779:INFO:[LightGBM] [Warning] feature_fraction is set=0.4, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.4
2025-02-25 20:18:57,779:INFO:[LightGBM] [Warning] bagging_fraction is set=0.6, subsample=1.0 will be ignored. Current value: bagging_fraction=0.6
2025-02-25 20:18:57,779:INFO:[LightGBM] [Warning] bagging_freq is set=2, subsample_freq=0 will be ignored. Current value: bagging_freq=2
2025-02-25 20:18:57,839:INFO:Saving 'Residuals.png'
2025-02-25 20:18:58,271:INFO:Visual Rendered Successfully
2025-02-25 20:18:58,405:INFO:plot_model() successfully completed......................................
2025-02-25 20:18:58,408:INFO:Initializing plot_model()
2025-02-25 20:18:58,408:INFO:plot_model(plot=error, fold=None, verbose=True, display=None, display_format=None, estimator=LGBMRegressor(bagging_fraction=0.6, bagging_freq=2, feature_fraction=0.4,
              min_child_samples=41, min_split_gain=0.9, n_estimators=260,
              n_jobs=-1, num_leaves=70, random_state=123, reg_alpha=2,
              reg_lambda=3), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x00000249FC55BF40>, system=True)
2025-02-25 20:18:58,408:INFO:Checking exceptions
2025-02-25 20:18:58,410:INFO:Preloading libraries
2025-02-25 20:18:58,428:INFO:Copying training dataset
2025-02-25 20:18:58,428:INFO:Plot type: error
2025-02-25 20:18:58,709:INFO:Fitting Model
2025-02-25 20:18:58,709:INFO:Scoring test/hold-out set
2025-02-25 20:18:58,710:INFO:[LightGBM] [Warning] feature_fraction is set=0.4, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.4
2025-02-25 20:18:58,710:INFO:[LightGBM] [Warning] bagging_fraction is set=0.6, subsample=1.0 will be ignored. Current value: bagging_fraction=0.6
2025-02-25 20:18:58,710:INFO:[LightGBM] [Warning] bagging_freq is set=2, subsample_freq=0 will be ignored. Current value: bagging_freq=2
2025-02-25 20:18:58,721:INFO:[LightGBM] [Warning] feature_fraction is set=0.4, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.4
2025-02-25 20:18:58,721:INFO:[LightGBM] [Warning] bagging_fraction is set=0.6, subsample=1.0 will be ignored. Current value: bagging_fraction=0.6
2025-02-25 20:18:58,721:INFO:[LightGBM] [Warning] bagging_freq is set=2, subsample_freq=0 will be ignored. Current value: bagging_freq=2
2025-02-25 20:18:58,746:INFO:Saving 'Prediction Error.png'
2025-02-25 20:18:58,939:INFO:Visual Rendered Successfully
2025-02-25 20:18:59,070:INFO:plot_model() successfully completed......................................
2025-02-25 20:18:59,072:INFO:Initializing plot_model()
2025-02-25 20:18:59,072:INFO:plot_model(plot=feature, fold=None, verbose=True, display=None, display_format=None, estimator=LGBMRegressor(bagging_fraction=0.6, bagging_freq=2, feature_fraction=0.4,
              min_child_samples=41, min_split_gain=0.9, n_estimators=260,
              n_jobs=-1, num_leaves=70, random_state=123, reg_alpha=2,
              reg_lambda=3), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x00000249FC55BF40>, system=True)
2025-02-25 20:18:59,072:INFO:Checking exceptions
2025-02-25 20:18:59,075:INFO:Preloading libraries
2025-02-25 20:18:59,098:INFO:Copying training dataset
2025-02-25 20:18:59,098:INFO:Plot type: feature
2025-02-25 20:18:59,099:WARNING:No coef_ found. Trying feature_importances_
2025-02-25 20:18:59,326:INFO:Saving 'Feature Importance.png'
2025-02-25 20:18:59,426:INFO:Visual Rendered Successfully
2025-02-25 20:18:59,542:INFO:plot_model() successfully completed......................................
2025-02-25 20:18:59,554:INFO:Initializing save_model()
2025-02-25 20:18:59,554:INFO:save_model(model=LGBMRegressor(bagging_fraction=0.6, bagging_freq=2, feature_fraction=0.4,
              min_child_samples=41, min_split_gain=0.9, n_estimators=260,
              n_jobs=-1, num_leaves=70, random_state=123, reg_alpha=2,
              reg_lambda=3), model_name=dekai/models/Dekai_Melbourne_Residential_price_predictions_without_mlfow, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\forwo\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Rooms', 'Distance', 'Bathroom',
                                             'Car', 'Landsize', 'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Type', 'CouncilArea', 'Region'],
                                    transformer=SimpleImputer(strategy='most_frequent'...
                                                              handle_missing='return_nan'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=123))),
                ('transformation',
                 TransformerWrapper(transformer=PowerTransformer(standardize=False))),
                ('normalize',
                 TransformerWrapper(transformer=StandardScaler()))]), verbose=True, use_case=MLUsecase.REGRESSION, kwargs={})
2025-02-25 20:18:59,554:INFO:Adding model into prep_pipe
2025-02-25 20:18:59,577:INFO:dekai/models/Dekai_Melbourne_Residential_price_predictions_without_mlfow.pkl saved in current working directory
2025-02-25 20:18:59,598:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Rooms', 'Distance', 'Bathroom',
                                             'Car', 'Landsize', 'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Type', 'CouncilArea', 'Region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrappe...
                ('transformation',
                 TransformerWrapper(transformer=PowerTransformer(standardize=False))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 LGBMRegressor(bagging_fraction=0.6, bagging_freq=2,
                               feature_fraction=0.4, min_child_samples=41,
                               min_split_gain=0.9, n_estimators=260, n_jobs=-1,
                               num_leaves=70, random_state=123, reg_alpha=2,
                               reg_lambda=3))])
2025-02-25 20:18:59,598:INFO:save_model() successfully completed......................................
